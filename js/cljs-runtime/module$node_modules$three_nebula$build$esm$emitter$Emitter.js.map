{
"version":3,
"file":"module$node_modules$three_nebula$build$esm$emitter$Emitter.js",
"lineCount":15,
"mappings":"AAAAA,cAAA,CAAA,0DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAwBvHC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CAErCG,QAASA,yBAAwB,EAAG,CAAE,GAAuB,UAAvB,GAAI,MAAOC,QAAX,CAAmC,MAAO,KAAM,KAAIC,MAAQ,IAAID,OAAWD,yBAAA,CAA2BA,QAAS,EAAG,CAAE,MAAOE,MAAT,CAAmB,OAAOA,MAA9I,CAvBpCC,MAAOC,CAAAA,cAAP,CAAsBT,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CU,MAAO,CAAA,CADoC,CAA7C,CAGAV,QAAQI,CAAAA,OAAR,CAAkB,IAAK,EAEvB,KAAIO,WAAab,OAAA,CAAQ,8DAAR,CAAjB;AAEIc,QAkBJC,QAAgC,CAACX,GAAD,CAAM,CAAE,GAAIA,GAAJ,EAAWA,GAAIC,CAAAA,UAAf,CAA6B,MAAOD,IAAO,IAAY,IAAZ,GAAIA,GAAJ,EAAmC,QAAnC,GAAoB,MAAOA,IAA3B,EAA8D,UAA9D,GAA+C,MAAOA,IAAtD,CAA4E,MAAO,CAAEE,QAASF,GAAX,CAAoB,KAAIK,MAAQF,wBAAA,EAA4B,IAAIE,KAAJ,EAAaA,KAAMO,CAAAA,GAAN,CAAUZ,GAAV,CAAb,CAA+B,MAAOK,MAAMQ,CAAAA,GAAN,CAAUb,GAAV,CAAkB,KAAIc,OAAS,EAAb,CAAqBC,sBAAwBT,MAAOC,CAAAA,cAA/BQ,EAAiDT,MAAOU,CAAAA,wBAA7E,CAAgHC,GAAT,KAASA,GAAT,GAAgBjB,IAAhB,CAAuB,GAAIM,MAAOY,CAAAA,SAAUC,CAAAA,cAAeC,CAAAA,IAAhC,CAAqCpB,GAArC,CAA0CiB,GAA1C,CAAJ,CAAoD,CAAE,IAAII,KAAON,qBAAA,CAAwBT,MAAOU,CAAAA,wBAAP,CAAgChB,GAAhC,CAAqCiB,GAArC,CAAxB,CAAoE,IAAUI,KAAJ,GAAaA,IAAKR,CAAAA,GAAlB,EAAyBQ,IAAKC,CAAAA,GAA9B,EAAsChB,MAAOC,CAAAA,cAAP,CAAsBO,MAAtB;AAA8BG,GAA9B,CAAmCI,IAAnC,CAAtC,CAAyFP,MAAA,CAAOG,GAAP,CAAzF,CAAuGjB,GAAA,CAAIiB,GAAJ,CAA9L,CAA8MH,MAAOZ,CAAAA,OAAP,CAAiBF,GAASK,MAAJ,EAAaA,KAAMiB,CAAAA,GAAN,CAAUtB,GAAV,CAAec,MAAf,CAA0B,OAAOA,OAAxrB,CAlBxB,CAAwBlB,OAAA,CAAQ,yDAAR,CAAxB,CAFd,CAII2B,MAAQ3B,OAAA,CAAQ,uDAAR,CAJZ,CAMI4B,OAAS5B,OAAA,CAAQ,wDAAR,CANb,CAQI6B,aAAe7B,OAAA,CAAQ,8DAAR,CARnB,CAUI8B,UAAY3B,sBAAA,CAAuBH,OAAA,CAAQ,0DAAR,CAAvB,CAVhB,CAYI+B;AAAY5B,sBAAA,CAAuBH,OAAA,CAAQ,qCAAR,CAAvB,CAZhB,CAcIgC,OAAShC,OAAA,CAAQ,0DAAR,CAab,MAAMiC,QAAN,QAAsBH,UAAUxB,CAAAA,OAAhC,CAOE4B,WAAW,CAACC,UAAD,CAAa,CACtB,KAAA,CAAMA,UAAN,CAMA,KAAKC,CAAAA,IAAL,CAAYJ,MAAOK,CAAAA,oBAMnB,KAAKC,CAAAA,SAAL,CAAiB,EAMjB,KAAKC,CAAAA,YAAL,CAAoB,EAMpB,KAAKC,CAAAA,UAAL,CAAkB,EAMlB,KAAKC,CAAAA,iBAAL,CAAyB,EAMzB,KAAKC,CAAAA,eAAL,CAAuB,CAMvB,KAAKC,CAAAA,cAAL,CAAsB,EAMtB,KAAKC,CAAAA,OAAL,CAAe/B,UAAWgC,CAAAA,eAO1B,KAAKC,CAAAA,WAAL,CAAmBjC,UAAWkC,CAAAA,oBAO9B,KAAKC,CAAAA,gBAAL;AAAwBnC,UAAWoC,CAAAA,0BAMnC,KAAKC,CAAAA,IAAL,CAAYrC,UAAWsC,CAAAA,oBAMvB,KAAKC,CAAAA,UAAL,CAAkB,CAAA,CAMlB,KAAKC,CAAAA,EAAL,CAAU,WAAW,CAAC,CAAA,CAAGzB,MAAO0B,CAAAA,GAAX,GAAX,EACV,KAAKC,CAAAA,GAAL,CAAW,CACX,KAAKC,CAAAA,IAAL,CAAY,SAMZ,KAAKC,CAAAA,KAAL,CAAa5C,UAAW6C,CAAAA,qBAMxB,KAAKC,CAAAA,eAAL,CAAuB,IAAI7C,OAAQR,CAAAA,OA/Fb,CAyGxBsD,QAAQ,CAACC,KAAD,CAAQC,MAAA,CAAS,IAAjB,CAAuB,CAC7B,IAAKH,CAAAA,eAAgBI,CAAAA,aAArB,CAAmCF,KAAnC,CAA0CC,MAA1C,CAD6B,CAW/BE,OAAO,CAACd,IAAD,CAAO,CACZ,IAAKA,CAAAA,IAAL,CAAYA,IACZ,OAAO,KAFK,CAYde,WAAW,CAACC,WAAA,CAAc,EAAf,CAAmB,CAC5B,MAAM,CACJC,QADI,CAAA,CAEF,IAFJ,CAGM,CACJC,CAAA,CAAID,QAASC,CAAAA,CADT,CAEJC,CAAA,CAAIF,QAASE,CAAAA,CAFT,CAGJC,CAAA,CAAIH,QAASG,CAAAA,CAHT,CAAA,CAIFJ,WACJ,KAAKC,CAAAA,QAASzC,CAAAA,GAAd,CAAkB0C,CAAlB,CAAqBC,CAArB,CAAwBC,CAAxB,CACA,OAAO,KAVqB,CAoB9BC,WAAW,CAACC,WAAA;AAAc,EAAf,CAAmB,CAC5B,MAAM,CACJC,QADI,CAAA,CAEF,IAFJ,CAGM,CACJL,CAAA,CAAIK,QAASL,CAAAA,CADT,CAEJC,CAAA,CAAII,QAASJ,CAAAA,CAFT,CAGJC,CAAA,CAAIG,QAASH,CAAAA,CAHT,CAAA,CAIFE,WACJ,KAAKC,CAAAA,QAAS/C,CAAAA,GAAd,CAAkB0C,CAAlB,CAAqBC,CAArB,CAAwBC,CAAxB,CACA,OAAO,KAVqB,CAuB9BI,IAAI,CAAC/B,cAAA,CAAiBgC,QAAlB,CAA4BC,IAAA,CAAOD,QAAnC,CAA6C,CAC/C,IAAKjC,CAAAA,eAAL,CAAuB,CACvB,KAAKC,CAAAA,cAAL,CAAsB,CAAC,CAAA,CAAGZ,SAAUzB,CAAAA,OAAd,EAAuBqC,cAAvB,CAAA,CAAyCA,cAAzC,CAA0DgC,QAG9E,KAAKC,CAAAA,IAAL,CADqB,CAAvB,GAAIjC,cAAJ,CACcA,cADd,CAGc,CAAC,CAAA,CAAGZ,SAAUzB,CAAAA,OAAd,EAAuBsE,IAAvB,CAAA,CAA+BA,IAA/B,CAAsCD,QAGpD,KAAKzB,CAAAA,IAAK2B,CAAAA,IAAV,EACA,KAAKzB,CAAAA,UAAL,CAAkB,CAAA,CAClB,OAAO,KAZwC,CAqBjD0B,iBAAiB,EAAG,CAClB,MAAM,CACJ1B,UADI,CAEJT,cAFI,CAGJiC,IAHI,CAAA,CAIF,IAECxB,WAAL,GACE,IAAKV,CAAAA,eAWL,CAXuB,CAWvB,CATKC,cASL;AARE,IAAKoC,CAAAA,iBAAL,CAAuBJ,QAAvB,CAQF,CALKC,IAKL,EAJE,IAAKI,CAAAA,OAAL,CAAaL,QAAb,CAIF,CADA,IAAKzB,CAAAA,IAAK2B,CAAAA,IAAV,EACA,CAAA,IAAKzB,CAAAA,UAAL,CAAkB,CAAA,CAZpB,CAeA,OAAO,KAtBW,CAgCpB2B,iBAAiB,CAACpC,cAAA,CAAiBgC,QAAlB,CAA4B,CAC3C,IAAKhC,CAAAA,cAAL,CAAsB,CAAC,CAAA,CAAGZ,SAAUzB,CAAAA,OAAd,EAAuBqC,cAAvB,CAAA,CAAyCA,cAAzC,CAA0DgC,QAChF,OAAO,KAFoC,CAY7CK,OAAO,CAACJ,IAAA,CAAOD,QAAR,CAAkB,CAErB,IAAKC,CAAAA,IAAL,CAD0B,CAA5B,GAAI,IAAKjC,CAAAA,cAAT,CACc,IAAKA,CAAAA,cADnB,CAGc,CAAC,CAAA,CAAGZ,SAAUzB,CAAAA,OAAd,EAAuBsE,IAAvB,CAAA,CAA+BA,IAA/B,CAAsCD,QAGpD,OAAO,KAPgB,CAgBzBM,QAAQ,EAAG,CACT,IAAKtC,CAAAA,cAAL,CAAsB,EACtB,KAAKD,CAAAA,eAAL,CAAuB,CACvB,KAAKU,CAAAA,UAAL,CAAkB,CAAA,CAHT,CAYX8B,kBAAkB,EAAG,CACnB,IAAIC,EAAI,IAAK7C,CAAAA,SAAU8C,CAAAA,MAEvB;IAAA,CAAOD,CAAA,EAAP,CAAA,CACE,IAAK7C,CAAAA,SAAL,CAAe6C,CAAf,CAAkBE,CAAAA,IAAlB,CAAyB,CAAA,CAJR,CAgBrBC,cAAc,CAACC,WAAD,CAAc,CAC1B,IAAKhD,CAAAA,YAAaiD,CAAAA,IAAlB,CAAuBD,WAAvB,CACA,OAAO,KAFmB,CAY5BE,eAAe,CAAClD,YAAD,CAAe,CAC5B,IAAI4C,EAAI5C,YAAa6C,CAAAA,MAErB,KAAA,CAAOD,CAAA,EAAP,CAAA,CACE,IAAKG,CAAAA,cAAL,CAAoB/C,YAAA,CAAa4C,CAAb,CAApB,CAGF,OAAO,KAPqB,CAiB9BO,eAAe,CAACnD,YAAD,CAAe,CAC5B,IAAKA,CAAAA,YAAL,CAAoBA,YACpB,OAAO,KAFqB,CAY9BoD,iBAAiB,CAACJ,WAAD,CAAc,CACvB9B,WAAAA,CAAQ,IAAKlB,CAAAA,YAAaqD,CAAAA,OAAlB,CAA0BL,WAA1B,CAEF,GAAZ,CAAI9B,WAAJ,EACE,IAAKlB,CAAAA,YAAasD,CAAAA,MAAlB,CAAyBpC,WAAzB,CAAgC,CAAhC,CAGF,OAAO,KAPsB,CAgB/BqC,qBAAqB,EAAG,CACtBlE,MAAOmE,CAAAA,IAAKC,CAAAA,YAAZ,CAAyB,IAAKzD,CAAAA,YAA9B,CAEA;MAAO,KAHe,CAcxB0D,YAAY,CAACC,SAAD,CAAY,CACtB,IAAK1D,CAAAA,UAAWgD,CAAAA,IAAhB,CAAqBU,SAArB,CACA,OAAO,KAFe,CAYxBC,aAAa,CAAC3D,UAAD,CAAa,CACxB,IAAI2C,EAAI3C,UAAW4C,CAAAA,MAEnB,KAAA,CAAOD,CAAA,EAAP,CAAA,CACE,IAAKc,CAAAA,YAAL,CAAkBzD,UAAA,CAAW2C,CAAX,CAAlB,CAGF,OAAO,KAPiB,CAiB1BiB,aAAa,CAAC5D,UAAD,CAAa,CACxB,IAAKA,CAAAA,UAAL,CAAkBA,UAClB,OAAO,KAFiB,CAY1B6D,eAAe,CAACH,SAAD,CAAY,CACnBzC,SAAAA,CAAQ,IAAKjB,CAAAA,UAAWoD,CAAAA,OAAhB,CAAwBM,SAAxB,CAEF,GAAZ,CAAIzC,SAAJ,EACE,IAAKjB,CAAAA,UAAWqD,CAAAA,MAAhB,CAAuBpC,SAAvB,CAA8B,CAA9B,CAGF,OAAO,KAPkB,CAgB3B6C,mBAAmB,EAAG,CACpB1E,MAAOmE,CAAAA,IAAKC,CAAAA,YAAZ,CAAyB,IAAKxD,CAAAA,UAA9B,CAEA,OAAO,KAHa,CAatB+D,mBAAmB,CAACL,SAAD,CAAY,CAC7B,IAAKzD,CAAAA,iBAAkB+C,CAAAA,IAAvB,CAA4BU,SAA5B,CACAA;SAAUM,CAAAA,UAAV,CAAqB,IAArB,CACA,OAAO,KAHsB,CAa/BC,oBAAoB,CAACjE,UAAD,CAAa,CAC/B,IAAI2C,EAAI3C,UAAW4C,CAAAA,MAEnB,KAAA,CAAOD,CAAA,EAAP,CAAA,CACE,IAAKoB,CAAAA,mBAAL,CAAyB/D,UAAA,CAAW2C,CAAX,CAAzB,CAGF,OAAO,KAPwB,CAiBjCuB,oBAAoB,CAAClE,UAAD,CAAa,CAC/B,MAAM4C,OAAS5C,UAAW4C,CAAAA,MAC1B,KAAK3C,CAAAA,iBAAL,CAAyBD,UAEzB,KAAS2C,UAAT,CAAa,CAAb,CAAgBA,UAAhB,CAAoBC,MAApB,CAA4BD,UAAA,EAA5B,CACE,IAAK1C,CAAAA,iBAAL,CAAuB0C,UAAvB,CAA0BqB,CAAAA,UAA1B,CAAqC,IAArC,CAGF,OAAO,KARwB,CAkBjCG,sBAAsB,CAACT,SAAD,CAAY,CAC1BzC,SAAAA,CAAQ,IAAKhB,CAAAA,iBAAkBmD,CAAAA,OAAvB,CAA+BM,SAA/B,CAEF,GAAZ,CAAIzC,SAAJ,EACE,IAAKhB,CAAAA,iBAAkBoD,CAAAA,MAAvB,CAA8BpC,SAA9B;AAAqC,CAArC,CAGF,OAAO,KAPyB,CAgBlCmD,0BAA0B,EAAG,CAC3BhF,MAAOmE,CAAAA,IAAKC,CAAAA,YAAZ,CAAyB,IAAKvD,CAAAA,iBAA9B,CAEA,OAAO,KAHoB,CAa7BoE,6BAA6B,CAACC,aAAD,CAAgB,CAC3C,IAAKnD,CAAAA,eAAgBoD,CAAAA,gBAArB,CAAsC,GAAG,IAAK1D,CAAAA,EAAR,IAAcvC,OAAQkG,CAAAA,YAAtB,EAAtC,CAA4E,EAAA,EAAMF,aAAA,EAAlF,CACA,OAAO,KAFoC,CAY7CG,cAAc,EAAG,CACf,MAAMC,SAAW,IAAKC,CAAAA,MAAOC,CAAAA,IAAKnG,CAAAA,GAAjB,CAAqBa,SAAUxB,CAAAA,OAA/B,CAEjB,KAAK+G,CAAAA,aAAL,CAAmBH,QAAnB,CADc,IAAK5E,CAAAA,SAAU8C,CAAAA,MAC7B,CACA,KAAK+B,CAAAA,MAAL,EAAe,IAAKA,CAAAA,MAAOvD,CAAAA,QAAZ,CAAqB9C,OAAQwG,CAAAA,gBAA7B,CAA+CJ,QAA/C,CACf,KAAKlE,CAAAA,gBAAL,EAAyB,IAAKY,CAAAA,QAAL,CAAc9C,OAAQwG,CAAAA,gBAAtB;AAAwCJ,QAAxC,CACzB,OAAOA,SANQ,CAiBjBG,aAAa,CAACH,QAAD,CAAWzD,KAAX,CAAkB,CAC7B,MAAM,CACJlB,YADI,CAEJC,UAFI,CAAA,CAGF,IAEJX,aAAa0F,CAAAA,eAAgBf,CAAAA,UAA7B,CAAwC,IAAxC,CAA8CU,QAA9C,CAAwD3E,YAAxD,CAEA2E,SAASf,CAAAA,aAAT,CAAuB3D,UAAvB,CACA0E,SAASC,CAAAA,MAAT,CAAkB,IAClBD,SAASzD,CAAAA,KAAT,CAAiBA,KACjB,KAAKnB,CAAAA,SAAUkD,CAAAA,IAAf,CAAoB0B,QAApB,CAX6B,CA2B/BM,MAAM,CAACC,IAAD,CAAO,CACX,GAAK,IAAKrE,CAAAA,UAAV,CAAA,CAIA,IAAKsE,CAAAA,GAAL,EAAYD,IAEZ,EAAI,IAAKpC,CAAAA,IAAT,EAAiB,IAAKqC,CAAAA,GAAtB,EAA6B,IAAK9C,CAAAA,IAAlC,GACE,IAAK+C,CAAAA,OAAL,EAGF,KAAKC,CAAAA,QAAL,CAAcH,IAAd,CACA,KAAKI,CAAAA,SAAL,CAAeJ,IAAf,CAGA,KAFA,IAAItC,EAAI,IAAK7C,CAAAA,SAAU8C,CAAAA,MAEvB,CAAOD,CAAA,EAAP,CAAA,CAAY,CACV,MAAM+B,SAAW,IAAK5E,CAAAA,SAAL,CAAe6C,CAAf,CAEb+B,SAAS7B,CAAAA,IAAb,GACE,IAAK8B,CAAAA,MAGL;AAHe,IAAKA,CAAAA,MAAOvD,CAAAA,QAAZ,CAAqB9C,OAAQgH,CAAAA,aAA7B,CAA4CZ,QAA5C,CAGf,CAFA,IAAKlE,CAAAA,gBAEL,EAFyB,IAAKY,CAAAA,QAAL,CAAc9C,OAAQgH,CAAAA,aAAtB,CAAqCZ,QAArC,CAEzB,CADA,IAAKC,CAAAA,MAAOC,CAAAA,IAAKW,CAAAA,MAAjB,CAAwBb,QAASc,CAAAA,KAAT,EAAxB,CACA,CAAA,IAAK1F,CAAAA,SAAUuD,CAAAA,MAAf,CAAsBV,CAAtB,CAAyB,CAAzB,CAJF,CAHU,CAWZ,IAAK8C,CAAAA,uBAAL,CAA6BR,IAA7B,CAzBA,CADW,CAoCbQ,uBAAuB,CAACR,IAAD,CAAO,CAC5B,GAASS,CAAL,IAAKA,CAAAA,KAAT,CAAA,CAIA,IAAM9C,OAAS,IAAK3C,CAAAA,iBAAkB2C,CAAAA,MAEtC,KAAK,IAAID,EAAI,CAAb,CAAgBA,CAAhB,CAAoBC,MAApB,CAA4BD,CAAA,EAA5B,CACE,IAAK1C,CAAAA,iBAAL,CAAuB0C,CAAvB,CAA0BgD,CAAAA,cAA1B,CAAyC,IAAzC,CAA+CV,IAA/C,CAAqDtC,CAArD,CAPF,CAD4B,CAoB9B0C,SAAS,CAACJ,IAAD,CAAO,CACd,MAAMW,gBAAkB,IAAKjB,CAAAA,MAAL,CAAc,IAAKA,CAAAA,MAAOiB,CAAAA,eAA1B,CAA4CzG,KAAM0G,CAAAA,sBAA1E;AACMzF,QAAU,CAAVA,CAAc,IAAKA,CAAAA,OACzB,EAAC,CAAA,CAAGjB,KAAMkG,CAAAA,SAAV,EAAqB,IAArB,CAA2BJ,IAA3B,CAAiC7E,OAAjC,CAA0CwF,eAA1C,CACA,KAAI3E,MAAQ,IAAKnB,CAAAA,SAAU8C,CAAAA,MAE3B,KAAA,CAAO3B,KAAA,EAAP,CAAA,CAAgB,CACd,MAAMyD,SAAW,IAAK5E,CAAAA,SAAL,CAAemB,KAAf,CACjByD,SAASM,CAAAA,MAAT,CAAgBC,IAAhB,CAAsBhE,KAAtB,CACA,EAAC,CAAA,CAAG9B,KAAMkG,CAAAA,SAAV,EAAqBX,QAArB,CAA+BO,IAA/B,CAAqC7E,OAArC,CAA8CwF,eAA9C,CACA,KAAKjB,CAAAA,MAAL,EAAe,IAAKA,CAAAA,MAAOvD,CAAAA,QAAZ,CAAqB9C,OAAQwH,CAAAA,eAA7B,CAA8CpB,QAA9C,CACf,KAAKlE,CAAAA,gBAAL,EAAyB,IAAKY,CAAAA,QAAL,CAAc9C,OAAQwH,CAAAA,eAAtB,CAAuCpB,QAAvC,CALX,CANF,CAsBhBU,QAAQ,CAACH,IAAD,CAAO,CACb,GAA4B,CAA5B,GAAI,IAAK9E,CAAAA,cAAT,CAA+B,CACzBwC,IAAAA,CAAI,IAAKjC,CAAAA,IAAKqF,CAAAA,QAAV,CAAmB,KAAnB,CAEA,EAAR,CAAIpD,IAAJ,GACE,IAAK5B,CAAAA,GADP,CACa4B,IADb,CAIA,KAAA,CAAOA,IAAA,EAAP,CAAA,CACE,IAAK8B,CAAAA,cAAL,EAGF;IAAKtE,CAAAA,cAAL,CAAsB,CAXO,CAA/B,IAiBA,IAFA,IAAKD,CAAAA,eAED,EAFoB+E,IAEpB,CAAA,IAAK/E,CAAAA,eAAL,CAAuB,IAAKC,CAAAA,cAAhC,CAOE,IANIwC,IAEJ,CAFQ,IAAKjC,CAAAA,IAAKqF,CAAAA,QAAV,CAAmBd,IAAnB,CAER,CAAQ,CAAR,CAAItC,IAAJ,GACE,IAAK5B,CAAAA,GADP,CACa4B,IADb,CAIA,CAAOA,IAAA,EAAP,CAAA,CACE,IAAK8B,CAAAA,cAAL,EA1BS,CAqCfU,OAAO,EAAG,CACR,IAAKtC,CAAAA,IAAL,CAAY,CAAA,CACZ,KAAKmD,CAAAA,MAAL,CAAc,CACd,KAAK7F,CAAAA,cAAL,CAAsB,EAEO,EAA7B,EAAI,IAAKL,CAAAA,SAAU8C,CAAAA,MAAnB,GACE,IAAKhC,CAAAA,UAIL,CAJkB,CAAA,CAIlB,CAHA,IAAK0C,CAAAA,qBAAL,EAGA,CAFA,IAAKQ,CAAAA,mBAAL,EAEA,CADA,IAAK1C,CAAAA,QAAL,CAAc,GAAG,IAAKP,CAAAA,EAAR,IAAcvC,OAAQkG,CAAAA,YAAtB,EAAd,CACA,CAAA,IAAKG,CAAAA,MAAL,EAAe,IAAKA,CAAAA,MAAOsB,CAAAA,aAAZ,CAA0B,IAA1B,CALjB,CALQ,CApqBZ,CAorBAvI,OAAQI,CAAAA,OAAR,CAAkB2B,OAvtBqG;",
"sources":["node_modules/three-nebula/build/esm/emitter/Emitter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three_nebula$build$esm$emitter$Emitter\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _constants = require(\"./constants\");\n\nvar _events = _interopRequireWildcard(require(\"../events\"));\n\nvar _math = require(\"../math\");\n\nvar _utils = require(\"../utils\");\n\nvar _initializer = require(\"../initializer\");\n\nvar _Particle = _interopRequireDefault(require(\"../core/Particle\"));\n\nvar _isNumber = _interopRequireDefault(require(\"lodash/isNumber\"));\n\nvar _types = require(\"./types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * Emitters are the System engine's particle factories. They cause particles to\n * be rendered by emitting them, and store all particle initializers and behaviours.\n *\n */\nclass Emitter extends _Particle.default {\n  /**\n   * Constructs an Emitter instance.\n   *\n   * @param {object} properties - The properties to instantiate the emitter with\n   * @return void\n   */\n  constructor(properties) {\n    super(properties);\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n\n    this.type = _types.EMITTER_TYPE_EMITTER;\n    /**\n     * @desc The particles emitted by this emitter.\n     * @type {array}\n     */\n\n    this.particles = [];\n    /**\n     * @desc The initializers for particles emitted by this emitter.\n     * @type {array}\n     */\n\n    this.initializers = [];\n    /**\n     * @desc The behaviours for particles emitted by this emitter.\n     * @type {array}\n     */\n\n    this.behaviours = [];\n    /**\n     * @desc The behaviours for the emitter.\n     * @type {array}\n     */\n\n    this.emitterBehaviours = [];\n    /**\n     * @desc The current emit iteration.\n     * @type {integer}\n     */\n\n    this.currentEmitTime = 0;\n    /**\n     * @desc The total number of times the emitter should emit particles.\n     * @type {integer}\n     */\n\n    this.totalEmitTimes = -1;\n    /**\n     * @desc The friction coefficient for all particle to emit by.\n     * @type {number}\n     */\n\n    this.damping = _constants.DEFAULT_DAMPING;\n    /**\n     * @desc Ensures that particles emitted by this emitter are positioned\n     * according to the emitter's properties.\n     * @type {boolean}\n     */\n\n    this.bindEmitter = _constants.DEFAULT_BIND_EMITTER;\n    /**\n     * @desc Determines if the emitter will dispatch internal events. Defaults\n     * to false\n     * @type {boolean}\n     */\n\n    this.bindEmitterEvent = _constants.DEFAULT_BIND_EMITTER_EVENT;\n    /**\n     * @desc The number of particles to emit per second (a [particle]/b [s])\n     * @type {Rate}\n     */\n\n    this.rate = _constants.DEFAULT_EMITTER_RATE;\n    /**\n     * @desc Determines if the emitter is emitting particles or not.\n     * @type {boolean}\n     */\n\n    this.isEmitting = false;\n    /**\n     * @desc The emitter's id.\n     * @type {string}\n     */\n\n    this.id = `emitter-${(0, _utils.uid)()}`;\n    this.cID = 0;\n    this.name = 'Emitter';\n    /**\n     * @desc The index of the emitter as it is added to the system.\n     * @type {number|undefined}\n     */\n\n    this.index = _constants.DEFAULT_EMITTER_INDEX;\n    /**\n     * @desc The emitter's internal event dispatcher.\n     * @type {EventDispatcher}\n     */\n\n    this.eventDispatcher = new _events.default();\n  }\n  /**\n   * Proxy method for the internal event dispatcher's dispatchEvent method.\n   *\n   * @param {string} event - The event to dispatch\n   * @param {object<Particle>} [target=this] - The event target\n   */\n\n\n  dispatch(event, target = this) {\n    this.eventDispatcher.dispatchEvent(event, target);\n  }\n  /**\n   * Sets the emitter rate.\n   *\n   * @param {Rate} rate - a rate initializer object\n   * @return {Emitter}\n   */\n\n\n  setRate(rate) {\n    this.rate = rate;\n    return this;\n  }\n  /**\n   * Sets the position of the emitter.\n   *\n   * @param {object} newPosition - an object the new x, y and z props\n   * @return {Emitter}\n   */\n\n\n  setPosition(newPosition = {}) {\n    const {\n      position\n    } = this;\n    const {\n      x = position.x,\n      y = position.y,\n      z = position.z\n    } = newPosition;\n    this.position.set(x, y, z);\n    return this;\n  }\n  /**\n   * Sets the rotation of the emitter.\n   *\n   * @param {object} newRotation - an object the new x, y and z props\n   * @return {Emitter}\n   */\n\n\n  setRotation(newRotation = {}) {\n    const {\n      rotation\n    } = this;\n    const {\n      x = rotation.x,\n      y = rotation.y,\n      z = rotation.z\n    } = newRotation;\n    this.rotation.set(x, y, z);\n    return this;\n  }\n  /**\n   * Sets the total number of times the emitter should emit particles as well as\n   * the emitter's life. Also intializes the emitter rate.\n   * This enables the emitter to emit particles.\n   *\n   * @param {number} [totalEmitTimes=Infinity] - the total number of times to emit particles\n   * @param {number} [life=Infinity] - the life of this emitter in milliseconds\n   * @return {Emitter}\n   */\n\n\n  emit(totalEmitTimes = Infinity, life = Infinity) {\n    this.currentEmitTime = 0;\n    this.totalEmitTimes = (0, _isNumber.default)(totalEmitTimes) ? totalEmitTimes : Infinity;\n\n    if (totalEmitTimes === 1) {\n      this.life = totalEmitTimes;\n    } else {\n      this.life = (0, _isNumber.default)(life) ? life : Infinity;\n    }\n\n    this.rate.init();\n    this.isEmitting = true;\n    return this;\n  }\n  /**\n   * Experimental emit method that is designed to be called from the System.emit method.\n   *\n   * @return {Emitter}\n   */\n\n\n  experimental_emit() {\n    const {\n      isEmitting,\n      totalEmitTimes,\n      life\n    } = this;\n\n    if (!isEmitting) {\n      this.currentEmitTime = 0;\n\n      if (!totalEmitTimes) {\n        this.setTotalEmitTimes(Infinity);\n      }\n\n      if (!life) {\n        this.setLife(Infinity);\n      }\n\n      this.rate.init();\n      this.isEmitting = true;\n    }\n\n    return this;\n  }\n  /**\n   * Sets the total emit times for the emitter.\n   *\n   * @param {number} [totalEmitTimes=Infinity] - the total number of times to emit particles\n   * @return {Emitter}\n   */\n\n\n  setTotalEmitTimes(totalEmitTimes = Infinity) {\n    this.totalEmitTimes = (0, _isNumber.default)(totalEmitTimes) ? totalEmitTimes : Infinity;\n    return this;\n  }\n  /**\n   * Sets the life of the emitter.\n   *\n   * @param {number} [life=Infinity] - the life of this emitter in milliseconds\n   * @return {Emitter}\n   */\n\n\n  setLife(life = Infinity) {\n    if (this.totalEmitTimes === 1) {\n      this.life = this.totalEmitTimes;\n    } else {\n      this.life = (0, _isNumber.default)(life) ? life : Infinity;\n    }\n\n    return this;\n  }\n  /**\n   * Stops the emitter from emitting particles.\n   *\n   * @return void\n   */\n\n\n  stopEmit() {\n    this.totalEmitTimes = -1;\n    this.currentEmitTime = 0;\n    this.isEmitting = false;\n  }\n  /**\n   * Kills all of the emitter's particles.\n   *\n   * @return void\n   */\n\n\n  removeAllParticles() {\n    let i = this.particles.length;\n\n    while (i--) {\n      this.particles[i].dead = true;\n    }\n  }\n  /**\n   * Adds a particle initializer to the emitter.\n   * Each initializer is run on each particle when they are created.\n   *\n   * @param {Initializer} initializer - The initializer to add\n   * @return {Emitter}\n   */\n\n\n  addInitializer(initializer) {\n    this.initializers.push(initializer);\n    return this;\n  }\n  /**\n   * Adds multiple particle initializers to the emitter.\n   *\n   * @param {array<Initializer>} initializers - an array of particle initializers\n   * @return {Emitter}\n   */\n\n\n  addInitializers(initializers) {\n    let i = initializers.length;\n\n    while (i--) {\n      this.addInitializer(initializers[i]);\n    }\n\n    return this;\n  }\n  /**\n   * Sets the emitter's particle initializers.\n   *\n   * @param {array<Initializer>} initializers - an array of particle initializers\n   * @return {Emitter}\n   */\n\n\n  setInitializers(initializers) {\n    this.initializers = initializers;\n    return this;\n  }\n  /**\n   * Removes an initializer from the emitter's initializers array.\n   *\n   * @param {Initializer} initializer - The initializer to remove\n   * @return {Emitter}\n   */\n\n\n  removeInitializer(initializer) {\n    const index = this.initializers.indexOf(initializer);\n\n    if (index > -1) {\n      this.initializers.splice(index, 1);\n    }\n\n    return this;\n  }\n  /**\n   * Removes all initializers.\n   *\n   * @return {Emitter}\n   */\n\n\n  removeAllInitializers() {\n    _utils.Util.destroyArray(this.initializers);\n\n    return this;\n  }\n  /**\n   * Adds a behaviour to the emitter. All emitter behaviours are added to each particle when\n   * they are emitted.\n   *\n   * @param {Behaviour} behaviour - The behaviour to add to the emitter\n   * @return {Emitter}\n   */\n\n\n  addBehaviour(behaviour) {\n    this.behaviours.push(behaviour);\n    return this;\n  }\n  /**\n   * Adds multiple behaviours to the emitter.\n   *\n   * @param {array<Behaviour>} behaviours - an array of emitter behaviours\n   * @return {Emitter}\n   */\n\n\n  addBehaviours(behaviours) {\n    let i = behaviours.length;\n\n    while (i--) {\n      this.addBehaviour(behaviours[i]);\n    }\n\n    return this;\n  }\n  /**\n   * Sets the emitter's behaviours.\n   *\n   * @param {array<Behaviour>} behaviours - an array of emitter behaviours\n   * @return {Emitter}\n   */\n\n\n  setBehaviours(behaviours) {\n    this.behaviours = behaviours;\n    return this;\n  }\n  /**\n   * Removes the behaviour from the emitter's behaviours array.\n   *\n   * @param {Behaviour} behaviour - The behaviour to remove\n   * @return {Emitter}\n   */\n\n\n  removeBehaviour(behaviour) {\n    const index = this.behaviours.indexOf(behaviour);\n\n    if (index > -1) {\n      this.behaviours.splice(index, 1);\n    }\n\n    return this;\n  }\n  /**\n   * Removes all behaviours from the emitter.\n   *\n   * @return {Emitter}\n   */\n\n\n  removeAllBehaviours() {\n    _utils.Util.destroyArray(this.behaviours);\n\n    return this;\n  }\n  /**\n   * Adds an emitter behaviour to the emitter.\n   *\n   * @param {Behaviour} behaviour - The behaviour to add to the emitter\n   * @return {Emitter}\n   */\n\n\n  addEmitterBehaviour(behaviour) {\n    this.emitterBehaviours.push(behaviour);\n    behaviour.initialize(this);\n    return this;\n  }\n  /**\n   * Adds multiple behaviours to the emitter.\n   *\n   * @param {array<Behaviour>} behaviours - an array of emitter behaviours\n   * @return {Emitter}\n   */\n\n\n  addEmitterBehaviours(behaviours) {\n    let i = behaviours.length;\n\n    while (i--) {\n      this.addEmitterBehaviour(behaviours[i]);\n    }\n\n    return this;\n  }\n  /**\n   * Sets the emitter's behaviours.\n   *\n   * @param {array<Behaviour>} behaviours - an array of emitter behaviours\n   * @return {Emitter}\n   */\n\n\n  setEmitterBehaviours(behaviours) {\n    const length = behaviours.length;\n    this.emitterBehaviours = behaviours;\n\n    for (let i = 0; i < length; i++) {\n      this.emitterBehaviours[i].initialize(this);\n    }\n\n    return this;\n  }\n  /**\n   * Removes the behaviour from the emitter's behaviours array.\n   *\n   * @param {Behaviour} behaviour - The behaviour to remove\n   * @return {Emitter}\n   */\n\n\n  removeEmitterBehaviour(behaviour) {\n    const index = this.emitterBehaviours.indexOf(behaviour);\n\n    if (index > -1) {\n      this.emitterBehaviours.splice(index, 1);\n    }\n\n    return this;\n  }\n  /**\n   * Removes all behaviours from the emitter.\n   *\n   * @return {Emitter}\n   */\n\n\n  removeAllEmitterBehaviours() {\n    _utils.Util.destroyArray(this.emitterBehaviours);\n\n    return this;\n  }\n  /**\n   * Adds the event listener for the EMITTER_DEAD event.\n   *\n   * @param {onEmitterDead} - The function to call when the EMITTER_DEAD is dispatched.\n   * @return {Emitter}\n   */\n\n\n  addOnEmitterDeadEventListener(onEmitterDead) {\n    this.eventDispatcher.addEventListener(`${this.id}_${_events.EMITTER_DEAD}`, () => onEmitterDead());\n    return this;\n  }\n  /**\n   * Creates a particle by retreiving one from the pool and setting it up with\n   * the supplied initializer and behaviour.\n   *\n   * @return {Emitter}\n   */\n\n\n  createParticle() {\n    const particle = this.parent.pool.get(_Particle.default);\n    const index = this.particles.length;\n    this.setupParticle(particle, index);\n    this.parent && this.parent.dispatch(_events.PARTICLE_CREATED, particle);\n    this.bindEmitterEvent && this.dispatch(_events.PARTICLE_CREATED, particle);\n    return particle;\n  }\n  /**\n   * Sets up a particle by running all initializers on it and setting its behaviours.\n   * Also adds the particle to this.particles.\n   *\n   * @param {Particle} particle - The particle to setup\n   * @return void\n   */\n\n\n  setupParticle(particle, index) {\n    const {\n      initializers,\n      behaviours\n    } = this;\n\n    _initializer.InitializerUtil.initialize(this, particle, initializers);\n\n    particle.addBehaviours(behaviours);\n    particle.parent = this;\n    particle.index = index;\n    this.particles.push(particle);\n  }\n  /**\n   * Updates the emitter according to the time passed by calling the generate\n   * and integrate methods. The generate method creates particles, the integrate\n   * method updates existing particles.\n   *\n   * If the emitter age is greater than time, the emitter is killed.\n   *\n   * This method also indexes/deindexes particles.\n   *\n   * @param {number} time - System engine time\n   * @return void\n   */\n\n\n  update(time) {\n    if (!this.isEmitting) {\n      return;\n    }\n\n    this.age += time;\n\n    if (this.dead || this.age >= this.life) {\n      this.destroy();\n    }\n\n    this.generate(time);\n    this.integrate(time);\n    let i = this.particles.length;\n\n    while (i--) {\n      const particle = this.particles[i];\n\n      if (particle.dead) {\n        this.parent && this.parent.dispatch(_events.PARTICLE_DEAD, particle);\n        this.bindEmitterEvent && this.dispatch(_events.PARTICLE_DEAD, particle);\n        this.parent.pool.expire(particle.reset());\n        this.particles.splice(i, 1);\n      }\n    }\n\n    this.updateEmitterBehaviours(time);\n  }\n  /**\n   * Updates the emitter's emitter behaviours.\n   *\n   * @param {number} time - System engine time\n   * @return void\n   */\n\n\n  updateEmitterBehaviours(time) {\n    if (this.sleep) {\n      return;\n    }\n\n    const length = this.emitterBehaviours.length;\n\n    for (let i = 0; i < length; i++) {\n      this.emitterBehaviours[i].applyBehaviour(this, time, i);\n    }\n  }\n  /**\n   * Runs the integration algorithm on the emitter and all particles.\n   * Updates the particles with the timstamp passed.\n   *\n   * @param {number} time - System engine time\n   * @return void\n   */\n\n\n  integrate(time) {\n    const integrationType = this.parent ? this.parent.integrationType : _math.INTEGRATION_TYPE_EULER;\n    const damping = 1 - this.damping;\n    (0, _math.integrate)(this, time, damping, integrationType);\n    let index = this.particles.length;\n\n    while (index--) {\n      const particle = this.particles[index];\n      particle.update(time, index);\n      (0, _math.integrate)(particle, time, damping, integrationType);\n      this.parent && this.parent.dispatch(_events.PARTICLE_UPDATE, particle);\n      this.bindEmitterEvent && this.dispatch(_events.PARTICLE_UPDATE, particle);\n    }\n  }\n  /**\n   * Generates new particles.\n   *\n   * @param {number} time - System engine time\n   * @return void\n   */\n\n\n  generate(time) {\n    if (this.totalEmitTimes === 1) {\n      let i = this.rate.getValue(99999);\n\n      if (i > 0) {\n        this.cID = i;\n      }\n\n      while (i--) {\n        this.createParticle();\n      }\n\n      this.totalEmitTimes = 0;\n      return;\n    }\n\n    this.currentEmitTime += time;\n\n    if (this.currentEmitTime < this.totalEmitTimes) {\n      let i = this.rate.getValue(time);\n\n      if (i > 0) {\n        this.cID = i;\n      }\n\n      while (i--) {\n        this.createParticle();\n      }\n    }\n  }\n  /**\n   * Kills the emitter.\n   *\n   * @return void\n   */\n\n\n  destroy() {\n    this.dead = true;\n    this.energy = 0;\n    this.totalEmitTimes = -1;\n\n    if (this.particles.length == 0) {\n      this.isEmitting = false;\n      this.removeAllInitializers();\n      this.removeAllBehaviours();\n      this.dispatch(`${this.id}_${_events.EMITTER_DEAD}`);\n      this.parent && this.parent.removeEmitter(this);\n    }\n  }\n\n}\n\nexports.default = Emitter;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","WeakMap","cache","Object","defineProperty","value","_constants","_events","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_math","_utils","_initializer","_Particle","_isNumber","_types","Emitter","constructor","properties","type","EMITTER_TYPE_EMITTER","particles","initializers","behaviours","emitterBehaviours","currentEmitTime","totalEmitTimes","damping","DEFAULT_DAMPING","bindEmitter","DEFAULT_BIND_EMITTER","bindEmitterEvent","DEFAULT_BIND_EMITTER_EVENT","rate","DEFAULT_EMITTER_RATE","isEmitting","id","uid","cID","name","index","DEFAULT_EMITTER_INDEX","eventDispatcher","dispatch","event","target","dispatchEvent","setRate","setPosition","newPosition","position","x","y","z","setRotation","newRotation","rotation","emit","Infinity","life","init","experimental_emit","setTotalEmitTimes","setLife","stopEmit","removeAllParticles","i","length","dead","addInitializer","initializer","push","addInitializers","setInitializers","removeInitializer","indexOf","splice","removeAllInitializers","Util","destroyArray","addBehaviour","behaviour","addBehaviours","setBehaviours","removeBehaviour","removeAllBehaviours","addEmitterBehaviour","initialize","addEmitterBehaviours","setEmitterBehaviours","removeEmitterBehaviour","removeAllEmitterBehaviours","addOnEmitterDeadEventListener","onEmitterDead","addEventListener","EMITTER_DEAD","createParticle","particle","parent","pool","setupParticle","PARTICLE_CREATED","InitializerUtil","update","time","age","destroy","generate","integrate","PARTICLE_DEAD","expire","reset","updateEmitterBehaviours","sleep","applyBehaviour","integrationType","INTEGRATION_TYPE_EULER","PARTICLE_UPDATE","getValue","energy","removeEmitter"]
}
