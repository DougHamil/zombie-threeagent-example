shadow$provide.module$node_modules$three_nebula$build$esm$behaviour$RandomDrift=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _math=require("module$node_modules$three_nebula$build$esm$math$index");global=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require("module$node_modules$three_nebula$build$esm$behaviour$Behaviour"));var _constants=require("module$node_modules$three_nebula$build$esm$behaviour$constants"),
_ease=require("module$node_modules$three_nebula$build$esm$ease$index"),_types=require("module$node_modules$three_nebula$build$esm$behaviour$types");class RandomDrift extends global.default{constructor(driftX,driftY,driftZ,delay=_constants.DEFAULT_RANDOM_DRIFT_DELAY,life,easing,isEnabled=!0){super(life,easing,_types.BEHAVIOUR_TYPE_RANDOM_DRIFT,isEnabled);this.reset(driftX,driftY,driftZ,delay);this.time=0}reset(driftX,driftY,driftZ,delay=_constants.DEFAULT_RANDOM_DRIFT_DELAY,life,easing){this.randomForce=
this.normalizeForce(new _math.Vector3D(driftX,driftY,driftZ));this.delayPan=(0,_math.createSpan)(delay);this.time=0;life&&super.reset(life,easing)}mutate(particle,time,index){this.energize(particle,time,index);this.time+=time;if(this.time>=this.delayPan.getValue()){time=_math.MathUtils.randomAToB(-this.randomForce.x,this.randomForce.x);index=_math.MathUtils.randomAToB(-this.randomForce.y,this.randomForce.y);const az=_math.MathUtils.randomAToB(-this.randomForce.z,this.randomForce.z);particle.acceleration.addValue(time,
index,az);this.time=0}}static fromJSON(json){const {x,y,z,delay,life,easing,isEnabled=!0}=json;return new RandomDrift(x,y,z,delay,life,(0,_ease.getEasingByName)(easing),isEnabled)}}exports.default=RandomDrift}
//# sourceMappingURL=module$node_modules$three_nebula$build$esm$behaviour$RandomDrift.js.map
