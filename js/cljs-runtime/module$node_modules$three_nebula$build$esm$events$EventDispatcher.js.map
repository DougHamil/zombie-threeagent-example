{
"version":3,
"file":"module$node_modules$three_nebula$build$esm$events$EventDispatcher.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,iEAAA,CAAsF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG9HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAAkB,IAAK,EAOvB,MAAMC,gBAAN,CACEC,WAAW,EAAG,CACZ,IAAKC,CAAAA,SAAL,CAAiB,IADL,CAIV,aAAS,CAACA,SAAD,CAAY,CACvB,IAAKC,CAAAA,UAAL,CAAkBD,SADK,CAIrB,aAAY,EAAA,CACd,MAAO,KAAKC,CAAAA,UADE,CAIhBC,gBAAgB,CAACC,IAAD,CAAOC,QAAP,CAAiB,CAC1B,IAAKJ,CAAAA,SAAV,CAGE,IAAKK,CAAAA,mBAAL,CAAyBF,IAAzB,CAA+BC,QAA/B,CAHF,CACE,IAAKJ,CAAAA,SADP,CACmB,EAKd,KAAKA,CAAAA,SAAL,CAAeG,IAAf,CAAL,GAA2B,IAAKH,CAAAA,SAAL,CAAeG,IAAf,CAA3B,CAAkD,EAAlD,CACA,KAAKH,CAAAA,SAAL,CAAeG,IAAf,CAAqBG,CAAAA,IAArB,CAA0BF,QAA1B,CACA;MAAOA,SATwB,CAYjCC,mBAAmB,CAACF,IAAD,CAAOC,QAAP,CAAiB,CAClC,GAAK,IAAKJ,CAAAA,SAAV,EACK,IAAKA,CAAAA,SAAL,CAAeG,IAAf,CADL,CAIA,IAFA,IAAII,IAAM,IAAKP,CAAAA,SAAL,CAAeG,IAAf,CAAV,CAESK,EAAI,CAFb,CAEgBC,EAAIF,GAAIG,CAAAA,MAAxB,CAAgCF,CAAhC,CAAoCC,CAApC,CAAuCD,CAAA,EAAvC,CACE,GAAID,GAAA,CAAIC,CAAJ,CAAJ,EAAcJ,QAAd,CAAwB,CACb,CAAT,EAAIK,CAAJ,CACE,OAAO,IAAKT,CAAAA,SAAL,CAAeG,IAAf,CADT,CAIII,GAAII,CAAAA,MAAJ,CAAWH,CAAX,CAAc,CAAd,CAGJ,MARsB,CANQ,CAmBpCI,uBAAuB,CAACT,IAAD,CAAO,CACvBA,IAAL,CAA0C,IAAKH,CAAAA,SAA/C,EAA0D,OAAO,IAAKA,CAAAA,SAAL,CAAeG,IAAf,CAAjE,CAAW,IAAKH,CAAAA,SAAhB,CAA4B,IADA,CAI9Ba,aAAa,CAACC,SAAD,CAAYC,WAAZ,CAAyB,CAAA,IAChCC,IAAM,CAAA,CAD0B,CAEhChB,UAAY,IAAKA,CAAAA,SAErB,IAAIc,SAAJ,EAAiBd,SAAjB,CAA4B,CACtBO,SAAAA,CAAMP,SAAA,CAAUc,SAAV,CACV,IAAI,CAACP,SAAL,CAAU,MAAOS,IACjBT,UAAA,CAAMA,SAAIU,CAAAA,KAAJ,EAMN;IAHA,IACIT,EAAID,SAAIG,CAAAA,MAEZ,CAAOF,CAAA,EAAP,CAAA,CACEU,SACA,CADUX,SAAA,CAAIC,CAAJ,CACV,CAAAQ,GAAA,CAAMA,GAAN,EAAaE,SAAA,CAAQH,WAAR,CAXW,CAe5B,MAAO,CAAC,CAACC,GAnB2B,CAsBtCG,gBAAgB,CAAChB,IAAD,CAAO,CACrB,IAAIH,UAAY,IAAKA,CAAAA,SACrB,OAAO,EAAGA,CAAAA,SAAH,EAAgB,CAAAA,SAAA,CAAUG,IAAV,CAAhB,CAFc,CAtEzB,CA6EAV,OAAQI,CAAAA,OAAR,CAAkBC,eA1F4G;",
"sources":["node_modules/three-nebula/build/esm/events/EventDispatcher.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three_nebula$build$esm$events$EventDispatcher\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/*\n * EventDispatcher\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n **/\nclass EventDispatcher {\n  constructor() {\n    this.listeners = null;\n  }\n\n  set listeners(listeners) {\n    this._listeners = listeners;\n  }\n\n  get listeners() {\n    return this._listeners;\n  }\n\n  addEventListener(type, listener) {\n    if (!this.listeners) {\n      this.listeners = {};\n    } else {\n      this.removeEventListener(type, listener);\n    }\n\n    if (!this.listeners[type]) this.listeners[type] = [];\n    this.listeners[type].push(listener);\n    return listener;\n  }\n\n  removeEventListener(type, listener) {\n    if (!this.listeners) return;\n    if (!this.listeners[type]) return;\n    var arr = this.listeners[type];\n\n    for (var i = 0, l = arr.length; i < l; i++) {\n      if (arr[i] == listener) {\n        if (l == 1) {\n          delete this.listeners[type];\n        } // allows for faster checks.\n        else {\n            arr.splice(i, 1);\n          }\n\n        break;\n      }\n    }\n  }\n\n  removeAllEventListeners(type) {\n    if (!type) this.listeners = null;else if (this.listeners) delete this.listeners[type];\n  }\n\n  dispatchEvent(eventName, eventTarget) {\n    var ret = false,\n        listeners = this.listeners;\n\n    if (eventName && listeners) {\n      var arr = listeners[eventName];\n      if (!arr) return ret;\n      arr = arr.slice(); //Should use a copy into a temporary here instead...\n      // to avoid issues with items being removed or added during the dispatch\n\n      var handler,\n          i = arr.length;\n\n      while (i--) {\n        handler = arr[i];\n        ret = ret || handler(eventTarget);\n      }\n    }\n\n    return !!ret;\n  }\n\n  hasEventListener(type) {\n    var listeners = this.listeners;\n    return !!(listeners && listeners[type]);\n  }\n\n}\n\nexports.default = EventDispatcher;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","EventDispatcher","constructor","listeners","_listeners","addEventListener","type","listener","removeEventListener","push","arr","i","l","length","splice","removeAllEventListeners","dispatchEvent","eventName","eventTarget","ret","slice","handler","hasEventListener"]
}
