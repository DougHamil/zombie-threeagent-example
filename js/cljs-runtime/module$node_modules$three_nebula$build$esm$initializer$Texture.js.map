{
"version":3,
"file":"module$node_modules$three_nebula$build$esm$initializer$Texture.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/three-nebula/build/esm/initializer/Texture.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three_nebula$build$esm$initializer$Texture\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _constants = require(\"./constants\");\n\nvar _Initializer = _interopRequireDefault(require(\"./Initializer\"));\n\nvar _types = require(\"./types\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Sets the body property to be a THREE.Sprite with a texture map on initialized particles.\n *\n */\nclass Texture extends _Initializer.default {\n  /**\n   * Constructs an Texture initializer.\n   *\n   * @param {object} THREE - The Web GL API we are using eg., THREE\n   * @param {string} texture - The sprite texture\n   * @param {object|undefined} materialProperties - The sprite material properties\n   * @param {?Texture} loadedTexture - Preloaded THREE.Texture instance\n   */\n  constructor(THREE, loadedTexture, materialProperties = _constants.DEFAULT_MATERIAL_PROPERTIES, isEnabled = true) {\n    super(_types.INITIALIZER_TYPE_TEXTURE, isEnabled);\n    const {\n      Sprite,\n      SpriteMaterial\n    } = THREE;\n    /**\n     * @desc The material properties for this object's SpriteMaterial\n     * NOTE This is required for testing purposes\n     * @type {object}\n     */\n\n    this.materialProperties = (0, _utils.withDefaults)(_constants.DEFAULT_MATERIAL_PROPERTIES, materialProperties);\n    /**\n     * @desc The texture for the THREE.SpriteMaterial map.\n     * @type {Texture}\n     */\n\n    this.texture = loadedTexture;\n    /**\n     * @desc THREE.SpriteMaterial instance.\n     * @type {SpriteMaterial}\n     */\n\n    this.material = new SpriteMaterial(_objectSpread(_objectSpread({}, {\n      map: loadedTexture\n    }), this.materialProperties));\n    /**\n     * @desc THREE.Sprite instance.\n     * @type {Sprite}\n     */\n\n    this.sprite = new Sprite(this.material);\n  }\n  /**\n   * Sets the particle body to the sprite.\n   *\n   * @param {Particle} particle - The particle to set the body of\n   * @return void\n   */\n\n\n  initialize(particle) {\n    particle.body = this.sprite;\n  }\n  /**\n   * Creates a Texture initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from\n   * @param {object} THREE - The Web GL API we are using eg., THREE\n   * @param {Texture} json.loadedTexture - The loaded sprite texture\n   * @param {object} json.materialProperties - The sprite material properties\n   * @return {BodySprite}\n   */\n\n\n  static fromJSON(json, THREE) {\n    const {\n      loadedTexture,\n      materialProperties = _constants.DEFAULT_JSON_MATERIAL_PROPERTIES,\n      isEnabled = true\n    } = json;\n\n    const ensureMappedBlendingMode = properties => {\n      const {\n        blending\n      } = properties;\n      return _objectSpread(_objectSpread({}, properties), {}, {\n        blending: blending ? _constants.SUPPORTED_MATERIAL_BLENDING_MODES[blending] : _constants.SUPPORTED_MATERIAL_BLENDING_MODES[_constants.DEFAULT_JSON_MATERIAL_PROPERTIES.blending]\n      });\n    };\n\n    return new Texture(THREE, loadedTexture, (0, _utils.withDefaults)(_constants.DEFAULT_JSON_MATERIAL_PROPERTIES, ensureMappedBlendingMode(materialProperties)), isEnabled);\n  }\n\n}\n\nexports.default = Texture;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_constants","_Initializer","_types","_utils","Texture","constructor","THREE","loadedTexture","materialProperties","DEFAULT_MATERIAL_PROPERTIES","isEnabled","INITIALIZER_TYPE_TEXTURE","Sprite","SpriteMaterial","withDefaults","texture","material","map","sprite","initialize","particle","body","fromJSON","json","DEFAULT_JSON_MATERIAL_PROPERTIES","blending","SUPPORTED_MATERIAL_BLENDING_MODES"]
}
