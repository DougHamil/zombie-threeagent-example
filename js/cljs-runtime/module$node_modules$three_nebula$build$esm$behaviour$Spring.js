shadow$provide.module$node_modules$three_nebula$build$esm$behaviour$Spring=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;global=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require("module$node_modules$three_nebula$build$esm$behaviour$Behaviour"));var _math=require("module$node_modules$three_nebula$build$esm$math$index"),_ease=require("module$node_modules$three_nebula$build$esm$ease$index"),_types=require("module$node_modules$three_nebula$build$esm$behaviour$types");
class Spring extends global.default{constructor(x,y,z,spring,friction,life,easing,isEnabled=!0){super(life,easing,_types.BEHAVIOUR_TYPE_SPRING,isEnabled);this.reset(x,y,z,spring,friction)}reset(x,y,z,spring,friction){this.pos?this.pos.set(x,y,z):this.pos=new _math.Vector3D(x,y,z);this.spring=spring||.1;this.friction=friction||.98}mutate(particle,time,index){this.energize(particle,time,index);particle.velocity.x+=(this.pos.x-particle.position.x)*this.spring;particle.velocity.y+=(this.pos.y-particle.position.y)*
this.spring;particle.velocity.z+=(this.pos.z-particle.position.z)*this.spring}static fromJSON(json){const {x,y,z,spring,friction,life,easing,isEnabled=!0}=json;return new Spring(x,y,z,spring,friction,life,(0,_ease.getEasingByName)(easing),isEnabled)}}exports.default=Spring}
//# sourceMappingURL=module$node_modules$three_nebula$build$esm$behaviour$Spring.js.map
