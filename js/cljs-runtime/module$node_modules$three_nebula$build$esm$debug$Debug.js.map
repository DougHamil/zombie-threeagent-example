{
"version":3,
"file":"module$node_modules$three_nebula$build$esm$debug$Debug.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/three-nebula/build/esm/debug/Debug.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three_nebula$build$esm$debug$Debug\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _constants = require(\"./constants\");\n\n/**\n * @exports Debug - methods and helpers for debugging System emitters, zones and particles.\n * @requires THREE - { SphereGeometry, BoxGeometry, MeshBasicMaterial, OctahedronGeometry, Mesh }\n */\nvar _default = {\n  /**\n   * Adds an event listener to the system instance's SYSTEM_UPDATE event.\n   *\n   * @param {System} system - the system instance\n   * @param {function} onSystemUpdated - the function to call when system has been updated\n   * @return {Debug}\n   */\n  addEventListener: function (system, onSystemUpdated) {\n    system.eventDispatcher.addEventListener('SYSTEM_UPDATE', onSystemUpdated);\n    return this;\n  },\n\n  /**\n   * Draws a wireframe mesh around the zone for debugging purposes.\n   *\n   * @param {System} system - the system instance\n   * @param {object} container - a three Object3D (usually the scene)\n   * @param {Zone} zone - a Zone instance\n   * @return void\n   */\n  drawZone: function (THREE, system, container, zone = {}) {\n    const color = '#2194ce';\n    const wireframe = true;\n    const {\n      width = _constants.DEFAULT_SIZE,\n      height = _constants.DEFAULT_SIZE,\n      depth = _constants.DEFAULT_SIZE,\n      radius = _constants.DEFAULT_SIZE,\n      x = _constants.DEFAULT_POSITION,\n      y = _constants.DEFAULT_POSITION,\n      z = _constants.DEFAULT_POSITION\n    } = zone;\n    let geometry;\n\n    if (zone.isPointZone()) {\n      geometry = new THREE.SphereGeometry(15);\n    }\n\n    if (zone.isLineZone()) {// TODO\n    }\n\n    if (zone.isBoxZone()) {\n      geometry = new THREE.BoxGeometry(width, height, depth);\n    }\n\n    if (zone.isSphereZone()) {\n      geometry = new THREE.SphereGeometry(radius, _constants.DEFAULT_SIZE, _constants.DEFAULT_SIZE);\n    }\n\n    if (zone.isMeshZone()) {\n      geometry = zone.geometry.geometry ? zone.geometry.geometry.clone() : zone.geometry.clone();\n    }\n\n    if (!geometry) {\n      geometry = new THREE.BoxGeometry(width, height, depth);\n    }\n\n    const material = new THREE.MeshBasicMaterial({\n      color,\n      wireframe\n    }); // NOTE! geometry.clone is required for UNKNOWN reasons,\n    // three does not render the mesh correctly without doing this since r88\n\n    const mesh = new THREE.Mesh(geometry.clone(), material);\n    container.add(mesh);\n    this.addEventListener(system, function () {\n      mesh.position.set(x, y, z);\n    });\n  },\n\n  /**\n   * Draws a mesh for each particle emitted in order to help debug particles.\n   *\n   * @param {object} system - the system instance\n   * @param {object} container - a three Object3D (usually the scene)\n   * @param {object} emitter - the emitter to debug\n   * @param {string} color - the color for the debug mesh material\n   * @return void\n   */\n  drawEmitter: function (THREE, system, container, emitter, color) {\n    const geometry = new THREE.OctahedronGeometry(_constants.DEFAULT_SIZE);\n    const material = new THREE.MeshBasicMaterial({\n      color: color || '#aaa',\n      wireframe: true\n    }); // NOTE! geometry.clone is required for UNKNOWN reasons,\n    // three does not render the mesh correctly without doing this since r88\n\n    const mesh = new THREE.Mesh(geometry.clone(), material);\n    container.add(mesh);\n    this.addEventListener(system, function () {\n      mesh.position.copy(emitter.position);\n      mesh.rotation.set(emitter.rotation.x, emitter.rotation.y, emitter.rotation.z);\n    });\n  },\n\n  /**\n   * Renders emitter / particle information into the info element.\n   *\n   * @param {object} system - the system instance\n   * @param {integer} style - style to apply (see the addInfo method's switch statement)\n   * @return void\n   */\n  renderInfo: function () {\n    function getCreatedNumber(type, system) {\n      var pool = type == 'material' ? '_materialPool' : '_targetPool';\n      var renderer = system.renderers[0];\n      return renderer[pool].cID;\n    }\n\n    function getEmitterPos(system) {\n      var e = system.emitters[0];\n      return Math.round(e.p.x) + ',' + Math.round(e.p.y) + ',' + Math.round(e.p.z);\n    }\n\n    return function (system, style) {\n      this.addInfo(style);\n      var str = '';\n\n      switch (this._infoType) {\n        case 2:\n          str += 'emitter:' + system.emitters.length + '<br>';\n          str += 'em speed:' + system.emitters[0].cID + '<br>';\n          str += 'pos:' + getEmitterPos(system);\n          break;\n\n        case 3:\n          str += system.renderers[0].name + '<br>';\n          str += 'target:' + getCreatedNumber('target') + '<br>';\n          str += 'material:' + getCreatedNumber('material');\n          break;\n\n        default:\n          str += 'particles:' + system.getCount() + '<br>';\n          str += 'pool:' + system.pool.getCount() + '<br>';\n          str += 'total:' + (system.getCount() + system.pool.getCount());\n      }\n\n      this._infoCon.innerHTML = str;\n    };\n  }(),\n\n  /**\n   * Appends the info element into the dom.\n   *\n   * @param {integer} style - the style type to apply\n   * @return void\n   */\n  addInfo: function () {\n    return function (style) {\n      var self = this;\n\n      if (!this._infoCon) {\n        this._infoCon = document.createElement('div');\n        this._infoCon.style.cssText = ['position:fixed;bottom:0px;left:0;cursor:pointer;', 'opacity:0.9;z-index:10000;padding:10px;font-size:12px;', 'width:120px;height:50px;background-color:#002;color:#0ff;'].join('');\n        this._infoType = 1;\n\n        this._infoCon.addEventListener('click', function () {\n          self._infoType++;\n          if (self._infoType > 3) self._infoType = 1;\n        }, false);\n\n        var bg, color;\n\n        switch (style) {\n          case 2:\n            bg = '#201';\n            color = '#f08';\n            break;\n\n          case 3:\n            bg = '#020';\n            color = '#0f0';\n            break;\n\n          default:\n            bg = '#002';\n            color = '#0ff';\n        }\n\n        this._infoCon.style['background-color'] = bg;\n        this._infoCon.style['color'] = color;\n      }\n\n      if (!this._infoCon.parentNode) document.body.appendChild(this._infoCon);\n    };\n  }()\n};\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","_constants","_default","addEventListener","system","onSystemUpdated","eventDispatcher","drawZone","THREE","container","zone","width","DEFAULT_SIZE","height","depth","radius","x","DEFAULT_POSITION","y","z","geometry","isPointZone","SphereGeometry","isLineZone","isBoxZone","BoxGeometry","isSphereZone","isMeshZone","clone","material","MeshBasicMaterial","color","wireframe","mesh","Mesh","add","position","set","drawEmitter","emitter","OctahedronGeometry","copy","rotation","renderInfo","getCreatedNumber","type","renderers","renderer","pool","cID","style","addInfo","str","_infoType","emitters","length","e","Math","round","p","name","getCount","_infoCon","innerHTML","self","document","createElement","cssText","bg","parentNode","body","appendChild"]
}
