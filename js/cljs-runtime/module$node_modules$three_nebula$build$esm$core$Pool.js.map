{
"version":3,
"file":"module$node_modules$three_nebula$build$esm$core$Pool.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/three-nebula/build/esm/core/Pool.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three_nebula$build$esm$core$Pool\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _PUID = _interopRequireDefault(require(\"../utils/PUID\"));\n\nvar _types = require(\"./types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An object pool implementation. Used for pooling objects to avoid unnecessary\n * garbage collection.\n *\n */\nclass Pool {\n  /**\n   * Constructs a Pool instance.\n   *\n   * @return void\n   */\n  constructor() {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = _types.CORE_TYPE_POOL;\n    /**\n     * @desc Incrementing id that keeps a count of the number of objects created\n     * @type {integer}\n     */\n\n    this.cID = 0;\n    /**\n     * @desc Map of pools in the format of PUID<String>: pool<Array>\n     * @type {object}\n     */\n\n    this.list = {};\n  }\n  /**\n   * Attempts to create a new object either by creating a new instance or calling its\n   * clone method.\n   *\n   * TODO COVERAGE - for the constructorArgs\n   * @param {function|object} functionOrObject - The object to instantiate or clone\n   * @return {object|undefined}\n   */\n\n\n  create(functionOrObject, ...constructorArgs) {\n    if (!this.canCreateNewObject(functionOrObject)) {\n      throw new Error('The pool is unable to create or clone the object supplied');\n    }\n\n    this.cID++;\n\n    if (this.canInstantiateObject(functionOrObject)) {\n      return new functionOrObject(...constructorArgs);\n    }\n\n    if (this.canCloneObject(functionOrObject)) {\n      return functionOrObject.clone();\n    }\n  }\n  /**\n   * Determines if the object is able to be instantiated or not.\n   *\n   * @param {object} object - The object to check\n   * @return {boolean}\n   */\n\n\n  canInstantiateObject(object) {\n    return typeof object === 'function';\n  }\n  /**\n   * Determines if the object is able to be cloned or not.\n   *\n   * @param {object} object - The object to check\n   * @return {boolean}\n   */\n\n\n  canCloneObject(object) {\n    return object.clone && typeof object.clone === 'function';\n  }\n  /**\n   * Determines if a new object is able to be created.\n   *\n   * @param {object} object - The object to check\n   * @return {boolean}\n   */\n\n\n  canCreateNewObject(object) {\n    return this.canInstantiateObject(object) || this.canCloneObject(object) ? true : false;\n  }\n  /**\n   * Gets a count of all objects in the pool.\n   *\n   * @return {integer}\n   */\n\n\n  getCount() {\n    var count = 0;\n\n    for (var id in this.list) count += this.list[id].length;\n\n    return count++;\n  }\n  /**\n   * Gets an object either by creating a new one or retrieving it from the pool.\n   *\n   * @param {function|object} obj - The function or object to get\n   * @param {array} args - The args to pass to the function on creation\n   * @return {object}\n   */\n\n\n  get(obj, ...args) {\n    var p,\n        puid = obj.__puid || _PUID.default.id(obj);\n\n    if (this.list[puid] && this.list[puid].length > 0) p = this.list[puid].pop();else p = this.create(obj, ...args);\n    p.__puid = obj.__puid || puid;\n    return p;\n  }\n  /**\n   * Pushes an object into the pool.\n   *\n   * @param {object} obj - The object to expire\n   * @return {integer}\n   */\n\n\n  expire(obj) {\n    return this._getList(obj.__puid).push(obj);\n  }\n  /**\n   * Destroys all pools.\n   *\n   * @return void\n   */\n\n\n  destroy() {\n    for (var id in this.list) {\n      this.list[id].length = 0;\n      delete this.list[id];\n    }\n  }\n  /**\n   * Gets the pool mapped to the UID.\n   *\n   * @param {string} uid - The pool uid\n   * @return {array}\n   */\n\n\n  _getList(uid) {\n    uid = uid || 'default';\n    if (!this.list[uid]) this.list[uid] = [];\n    return this.list[uid];\n  }\n\n}\n\nexports.default = Pool;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","_PUID","_interopRequireDefault","obj","__esModule","_types","Pool","constructor","type","CORE_TYPE_POOL","cID","list","create","functionOrObject","constructorArgs","canCreateNewObject","Error","canInstantiateObject","canCloneObject","clone","object","getCount","count","id","length","get","args","puid","__puid","p","pop","expire","_getList","push","destroy","uid"]
}
