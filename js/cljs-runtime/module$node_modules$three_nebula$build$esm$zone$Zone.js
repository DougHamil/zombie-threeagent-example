shadow$provide.module$node_modules$three_nebula$build$esm$zone$Zone=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _Vector3D=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require("module$node_modules$three_nebula$build$esm$math$Vector3D")),_types=require("module$node_modules$three_nebula$build$esm$zone$types");class Zone{constructor(type=_types.ZONE_TYPE_ABSTRACT){this.type=type;this.vector=new _Vector3D.default(0,
0,0);this.random=0;this.crossType="dead";this.supportsCrossing=this.log=!0}getPosition(){return null}crossing(particle){if(!this.supportsCrossing)return console.warn(`${this.constructor.name} does not support the crossing method`);switch(this.crossType){case "bound":this._bound(particle);break;case "cross":this._cross(particle);break;case "dead":this._dead(particle)}}isBoxZone(){return!1}isLineZone(){return!1}isMeshZone(){return!1}isPointZone(){return!1}isScreenZone(){return!1}isSphereZone(){return!1}_dead(particle){}_bound(particle){}_cross(particle){}}
exports.default=Zone}
//# sourceMappingURL=module$node_modules$three_nebula$build$esm$zone$Zone.js.map
