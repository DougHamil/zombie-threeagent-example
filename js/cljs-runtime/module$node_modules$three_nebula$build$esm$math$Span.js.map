{
"version":3,
"file":"module$node_modules$three_nebula$build$esm$math$Span.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,oDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAcjHC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CAXrCG,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAQQ,CAAAA,UAAR,CAAqBR,OAAQI,CAAAA,OAA7B,CAAuC,IAAK,EAE5C,KAAIK,WAAaR,sBAAA,CAAuBH,OAAA,CAAQ,2DAAR,CAAvB,CAAjB,CAEIY,MAAQT,sBAAA,CAAuBH,OAAA,CAAQ,uDAAR,CAAvB,CAFZ,CAIIa,OAASb,OAAA,CAAQ,uDAAR,CAIb;KAAMc,KAAN,CAeEC,WAAW,CAACC,CAAD,CAAIC,CAAJ,CAAOC,MAAP,CAAe,CACxB,IAAKC,CAAAA,QAAL,CAAgB,CAAA,CAMhB,KAAKC,CAAAA,IAAL,CAAYP,MAAOQ,CAAAA,cAEfT,MAAMN,CAAAA,OAAQgB,CAAAA,OAAd,CAAsBN,CAAtB,CAAJ,EACE,IAAKG,CAAAA,QACL,CADgB,CAAA,CAChB,CAAA,IAAKH,CAAAA,CAAL,CAASA,CAFX,GAIE,IAAKA,CAAAA,CAEL,CAFSJ,KAAMN,CAAAA,OAAQiB,CAAAA,SAAd,CAAwBP,CAAxB,CAA2B,CAA3B,CAET,CADA,IAAKC,CAAAA,CACL,CADSL,KAAMN,CAAAA,OAAQiB,CAAAA,SAAd,CAAwBN,CAAxB,CAA2B,IAAKD,CAAAA,CAAhC,CACT,CAAA,IAAKQ,CAAAA,OAAL,CAAeZ,KAAMN,CAAAA,OAAQiB,CAAAA,SAAd,CAAwBL,MAAxB,CAAgC,CAAA,CAAhC,CANjB,CATwB,CA0B1BO,QAAQ,CAACC,GAAD,CAAM,CACZ,MAAI,KAAKP,CAAAA,QAAT,CACS,IAAKH,CAAAA,CAAL,CAAO,IAAKA,CAAAA,CAAEW,CAAAA,MAAd,CAAuBC,IAAKC,CAAAA,MAAL,EAAvB,EAAwC,CAAxC,CADT,CAGO,IAAKL,CAAAA,OAAV,CAAyFb,UAAWL,CAAAA,OAAQwB,CAAAA,cAAnB,CAAkC,IAAKd,CAAAA,CAAvC,CAA0C,IAAKC,CAAAA,CAA/C,CAAkDS,GAAlD,CAAzF,CAA0Bf,UAAWL,CAAAA,OAAQyB,CAAAA,UAAnB,CAA8B,IAAKf,CAAAA,CAAnC,CAAsC,IAAKC,CAAAA,CAA3C,CAA8CS,GAA9C,CAJhB,CAzChB,CAmDAxB,OAAQI,CAAAA,OAAR,CAAkBQ,IAYlBZ,QAAQQ,CAAAA,UAAR,CAVmB,CAACM,CAAD,CAAIC,CAAJ,CAAOe,CAAP,CAAAtB;AACbM,CAAJ,WAAiBF,KAAjB,CAA8BE,CAA9B,CAEUiB,IAAAA,EAAV,GAAIhB,CAAJ,CACS,IAAIH,IAAJ,CAASE,CAAT,CADT,CAGYiB,IAAAA,EAAV,GAAID,CAAJ,CAA4B,IAAIlB,IAAJ,CAASE,CAAT,CAAYC,CAAZ,CAA5B,CAAuD,IAAIH,IAAJ,CAASE,CAAT,CAAYC,CAAZ,CAAee,CAAf,CA3EsD;",
"sources":["node_modules/three-nebula/build/esm/math/Span.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three_nebula$build$esm$math$Span\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSpan = exports.default = void 0;\n\nvar _MathUtils = _interopRequireDefault(require(\"./MathUtils\"));\n\nvar _Util = _interopRequireDefault(require(\"../utils/Util\"));\n\nvar _types = require(\"./types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass Span {\n  /**\n   * Span Class. Get a random Number from a to b. Or from c-a to c+b\n   * @param {Number|Array} a - min number\n   * @param {Number} b - max number\n   * @param {Number} center - the center's z value\n   * @example\n   * var span = new Span(0,30);\n   * or\n   * var span = new Span([\"#fff\",\"#ff0\",\"#000\"]);\n   * or\n   * var span = new Span(5,1,\"center\");\n   * @extends {Zone}\n   * @constructor\n   */\n  constructor(a, b, center) {\n    this._isArray = false;\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n\n    this.type = _types.MATH_TYPE_SPAN;\n\n    if (_Util.default.isArray(a)) {\n      this._isArray = true;\n      this.a = a;\n    } else {\n      this.a = _Util.default.initValue(a, 1);\n      this.b = _Util.default.initValue(b, this.a);\n      this._center = _Util.default.initValue(center, false);\n    }\n  }\n  /**\n   * Span.getValue function\n   * @name get a random Number from a to b. Or get a random Number from c-a to c+b\n   * @param {number} INT or int\n   * @return {number} a random Number\n   */\n\n\n  getValue(INT) {\n    if (this._isArray) {\n      return this.a[this.a.length * Math.random() >> 0];\n    } else {\n      if (!this._center) return _MathUtils.default.randomAToB(this.a, this.b, INT);else return _MathUtils.default.randomFloating(this.a, this.b, INT);\n    }\n  }\n\n}\n\nexports.default = Span;\n\nconst createSpan = (a, b, c) => {\n  if (a instanceof Span) return a;\n\n  if (b === undefined) {\n    return new Span(a);\n  } else {\n    if (c === undefined) return new Span(a, b);else return new Span(a, b, c);\n  }\n};\n\nexports.createSpan = createSpan;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","createSpan","_MathUtils","_Util","_types","Span","constructor","a","b","center","_isArray","type","MATH_TYPE_SPAN","isArray","initValue","_center","getValue","INT","length","Math","random","randomFloating","randomAToB","c","undefined"]
}
