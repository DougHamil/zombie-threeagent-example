{
"version":3,
"file":"module$node_modules$three_nebula$build$esm$behaviour$Behaviour.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,8DAAA,CAAmF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG3HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAAkB,IAAK,EAEvB,KAAIC,WAAaP,OAAA,CAAQ,gEAAR,CAAjB,CAEIQ,OAASR,OAAA,CAAQ,4DAAR,CAFb,CAIIS,YAAcT,OAAA,CAAQ,4DAAR,CAJlB,CAMIU,UAIJC,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEN,QAASM,GAAX,CAAvC,CAJrB,CAAuBZ,OAAA,CAAQ,qCAAR,CAAvB,CANhB;AAQIc,OAASd,OAAA,CAAQ,wDAAR,CASb,MAAMe,UAAN,CAUEC,WAAW,CAACC,IAAA,CAAOC,QAAR,CAAkBC,MAAA,CAASZ,UAAWa,CAAAA,wBAAtC,CAAgEC,IAAA,CAAOb,MAAOc,CAAAA,uBAA9E,CAAuGC,SAAA,CAAY,CAAA,CAAnH,CAAyH,CAKlI,IAAKF,CAAAA,IAAL,CAAYA,IAMZ,KAAKE,CAAAA,SAAL,CAAiBA,SAMjB,KAAKC,CAAAA,EAAL,CAAU,aAAa,CAAC,CAAA,CAAGV,MAAOW,CAAAA,GAAX,GAAb,EAMV,KAAKR,CAAAA,IAAL,CAAYA,IAMZ,KAAKE,CAAAA,MAAL,CAAcA,MAMd,KAAKO,CAAAA,GAAL,CAAW,CAMX,KAAKC,CAAAA,MAAL,CAAc,CAMd,KAAKC,CAAAA,IAAL,CAAY,CAAA,CA/CsH,CAyDpIC,KAAK,CAACZ,IAAA,CAAOV,UAAWuB,CAAAA,YAAnB,CAAiCX,MAAA,CAASZ,UAAWa,CAAAA,wBAArD,CAA+E,CAClF,IAAKH,CAAAA,IAAL,CAAYA,IACZ,KAAKE,CAAAA,MAAL,CAAcA,MAAd,EAAwBZ,UAAWa,CAAAA,wBAF+C,CAWhF,QAAI,CAACH,IAAD,CAAO,CACb,IAAKc,CAAAA,KAAL;AAAa,CAAC,CAAA,CAAGrB,SAAUJ,CAAAA,OAAd,EAAuBW,IAAvB,CAAA,CAA+BA,IAA/B,CAAsCV,UAAWuB,CAAAA,YADjD,CAUX,QAAO,EAAA,CACT,MAAO,KAAKC,CAAAA,KADH,CAWXC,cAAc,CAACC,KAAD,CAAQ,CACpB,MAAOA,MAAMC,CAAAA,MAAN,CAAazB,WAAY0B,CAAAA,OAAzB,CADa,CAWtBC,cAAc,CAAC/B,KAAD,CAAQ,CACpB,MAAOA,MAAP,CAAeI,WAAY0B,CAAAA,OADP,CAWtBE,UAAU,CAACC,QAAD,CAAW,EAerBC,cAAc,CAACC,MAAD,CAASC,IAAT,CAAeC,KAAf,CAAsB,CAC7B,IAAKnB,CAAAA,SAAV,EAIA,IAAKoB,CAAAA,MAAL,CAAYH,MAAZ,CAAoBC,IAApB,CAA0BC,KAA1B,CALkC,CAiBpCC,MAAM,CAACH,MAAD,CAASC,IAAT,CAAeC,KAAf,CAAsB,EAa5BE,QAAQ,CAACN,QAAD,CAAWG,IAAX,CAAiB,CACnB,IAAKb,CAAAA,IAAT,GAIA,IAAKF,CAAAA,GAEL,EAFYe,IAEZ,CAAI,IAAKf,CAAAA,GAAT,EAAgB,IAAKT,CAAAA,IAArB,EACE,IAAKU,CAAAA,MACL,CADc,CACd,CAAA,IAAKC,CAAAA,IAAL,CAAY,CAAA,CAFd,GAMMiB,QACN,CADc,IAAK1B,CAAAA,MAAL,CAAYmB,QAASZ,CAAAA,GAArB,CAA2BY,QAASrB,CAAAA,IAApC,CACd,CAAA,IAAKU,CAAAA,MAAL,CAAcmB,IAAKC,CAAAA,GAAL,CAAS,CAAT;AAAaF,QAAb,CAAoB,CAApB,CAPd,CANA,CADuB,CAuBzBG,OAAO,EAAG,EAUVC,QAAQ,CAACC,IAAD,CAAO,EAvMjB,CA4MAhD,OAAQI,CAAAA,OAAR,CAAkBS,SArOyG;",
"sources":["node_modules/three-nebula/build/esm/behaviour/Behaviour.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three_nebula$build$esm$behaviour$Behaviour\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _constants = require(\"./constants\");\n\nvar _types = require(\"./types\");\n\nvar _constants2 = require(\"../constants\");\n\nvar _isNumber = _interopRequireDefault(require(\"lodash/isNumber\"));\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The base behaviour class.\n * Behaviours manage a particle's behaviour after they have been emitted.\n *\n */\nclass Behaviour {\n  /**\n   * Constructs a Behaviour instance.\n   *\n   * @param {number} [life=Infinity] - The life of the behaviour\n   * @param {function} [easing=DEFAULT_BEHAVIOUR_EASING] - The behaviour's decaying trend\n   * @param {string} [type=BEHAVIOUR_TYPE_ABSTRACT] - The behaviour type\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(life = Infinity, easing = _constants.DEFAULT_BEHAVIOUR_EASING, type = _types.BEHAVIOUR_TYPE_ABSTRACT, isEnabled = true) {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n    /**\n     * @desc Determines if the behaviour will be applied or not\n     * @type {boolean}\n     */\n\n    this.isEnabled = isEnabled;\n    /**\n     * @desc The behaviour's id\n     * @type {string} id\n     */\n\n    this.id = `behaviour-${(0, _utils.uid)()}`;\n    /**\n     * @desc The life of the behaviour\n     * @type {number}\n     */\n\n    this.life = life;\n    /**\n     * @desc The behaviour's decaying trend\n     * @type {function}\n     */\n\n    this.easing = easing;\n    /**\n     * @desc The age of the behaviour\n     * @type {number}\n     */\n\n    this.age = 0;\n    /**\n     * @desc The energy of the behaviour\n     * @type {number}\n     */\n\n    this.energy = 1;\n    /**\n     * Determines if the behaviour is dead or not\n     * @type {boolean}\n     */\n\n    this.dead = false;\n  }\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @param {number} [life=DEFAULT_LIFE] - The life of the behaviour\n   * @param {function} [easing=DEFAULT_BEHAVIOUR_EASING] - The behaviour's decaying trend\n   */\n\n\n  reset(life = _constants.DEFAULT_LIFE, easing = _constants.DEFAULT_BEHAVIOUR_EASING) {\n    this.life = life;\n    this.easing = easing || _constants.DEFAULT_BEHAVIOUR_EASING;\n  }\n  /**\n   * Ensures that life is infinity if an invalid value is supplied.\n   *\n   * @return void\n   */\n\n\n  set life(life) {\n    this._life = (0, _isNumber.default)(life) ? life : _constants.DEFAULT_LIFE;\n  }\n  /**\n   * Gets the behaviour's life.\n   *\n   * @return {Number}\n   */\n\n\n  get life() {\n    return this._life;\n  }\n  /**\n   * Normalize a force by 1:100;\n   *\n   * @param {Vector3D} force - The force to normalize.\n   * @return {Vector3D}\n   */\n\n\n  normalizeForce(force) {\n    return force.scalar(_constants2.MEASURE);\n  }\n  /**\n   * Normalize a value by 1:100;\n   *\n   * @param {number} value - The value to normalize\n   * @return {number}\n   */\n\n\n  normalizeValue(value) {\n    return value * _constants2.MEASURE;\n  }\n  /**\n   * Set the behaviour's initial properties on the particle.\n   *\n   * @param {Particle} particle\n   * @abstract\n   */\n\n\n  initialize(particle) {} // eslint-disable-line\n\n  /**\n   * Apply behaviour to the target as a factor of time.\n   * Internally calls the mutate method to change properties on the target\n   * Will not do so if the behaviour is disabled\n   *\n   * @abstract\n   * @param {Particle|Emitter} target - The particle or emitter to apply the behaviour to\n   * @param {Number} time - the system integration time\n   * @param {integer} index - the target index\n   * @return mixed\n   */\n\n\n  applyBehaviour(target, time, index) {\n    if (!this.isEnabled) {\n      return;\n    }\n\n    this.mutate(target, time, index);\n  }\n  /**\n   * Change the target's properties according to specific behaviour logic.\n   *\n   * @abstract\n   * @param {Particle|Emitter} target - The particle or emitter to apply the behaviour to\n   * @param {Number} time - the system integration time\n   * @return mixed\n   */\n\n\n  mutate(target, time, index) {} // eslint-disable-line\n\n  /**\n   * Compares the age of the behaviour vs integration time and determines\n   * if the behaviour should be set to dead or not.\n   * Sets the behaviour energy as a factor of particle age and life.\n   *\n   * @param {Particle} particle - The particle to apply the behaviour to\n   * @param {Number} time - the system integration time\n   * @return void\n   */\n\n\n  energize(particle, time) {\n    if (this.dead) {\n      return;\n    }\n\n    this.age += time;\n\n    if (this.age >= this.life) {\n      this.energy = 0;\n      this.dead = true;\n      return;\n    }\n\n    const scale = this.easing(particle.age / particle.life);\n    this.energy = Math.max(1 - scale, 0);\n  }\n  /**\n   * Destory this behaviour.\n   *\n   * @abstract\n   */\n\n\n  destroy() {}\n  /**\n   * Returns a new instance of the behaviour from the JSON object passed.\n   *\n   * @abstract\n   * @param {object} json - JSON object containing the required constructor properties\n   * @return {Behaviour}\n   */\n\n\n  fromJSON(json) {} // eslint-disable-line\n\n\n}\n\nexports.default = Behaviour;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","_constants","_types","_constants2","_isNumber","_interopRequireDefault","obj","__esModule","_utils","Behaviour","constructor","life","Infinity","easing","DEFAULT_BEHAVIOUR_EASING","type","BEHAVIOUR_TYPE_ABSTRACT","isEnabled","id","uid","age","energy","dead","reset","DEFAULT_LIFE","_life","normalizeForce","force","scalar","MEASURE","normalizeValue","initialize","particle","applyBehaviour","target","time","index","mutate","energize","scale","Math","max","destroy","fromJSON","json"]
}
