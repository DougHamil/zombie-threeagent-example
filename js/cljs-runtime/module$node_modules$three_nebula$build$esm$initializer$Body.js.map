{
"version":3,
"file":"module$node_modules$three_nebula$build$esm$initializer$Body.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGxHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAAkB,IAAK,EAEnBC,OAAAA,CAMJC,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEH,QAASG,GAAX,CAAvC,CANlB,CAAuBT,OAAA,CAAQ,oEAAR,CAAvB,CAEnB,KAAIW,MAAQX,OAAA,CAAQ,uDAAR,CAAZ,CAEIY,OAASZ,OAAA,CAAQ,8DAAR,CAQb,MAAMa,KAAN,QAAmBN,OAAaD,CAAAA,OAAhC,CAUEQ,WAAW,CAACC,IAAD;AAAOC,CAAP,CAAUC,CAAV,CAAaC,SAAA,CAAY,CAAA,CAAzB,CAA+B,CACxC,KAAA,CAAMN,MAAOO,CAAAA,qBAAb,CAAoCD,SAApC,CAMA,KAAKH,CAAAA,IAAL,CAAY,CAAC,CAAA,CAAGJ,KAAMS,CAAAA,eAAV,EAA2BL,IAA3B,CAMZ,KAAKC,CAAAA,CAAL,CAASA,CAMT,KAAKC,CAAAA,CAAL,CAASA,CAAT,EAAcD,CAnB0B,CA6B1CK,UAAU,CAACC,QAAD,CAAW,CACnB,IAAIP,KAAO,IAAKA,CAAAA,IAAKQ,CAAAA,QAAV,EAGTD,SAASP,CAAAA,IAAT,CADE,IAAKC,CAAAA,CAAT,CACkB,CACdQ,MAAO,IAAKR,CAAAA,CADE,CAEdS,OAAQ,IAAKR,CAAAA,CAFC,CAGRF,IAHQ,CADlB,CAOkBA,IAVC,CAwBdW,eAAQ,CAACC,IAAD,CAAO,CACpB,MAAM,CACJZ,IADI,CAEJS,KAFI,CAGJC,MAHI,CAIJP,SAAA,CAAY,CAAA,CAJR,CAAA,CAKFS,IACJ,OAAO,KAAId,IAAJ,CAASE,IAAT,CAAeS,KAAf,CAAsBC,MAAtB,CAA8BP,SAA9B,CAPa,CA/DxB,CA2EAhB,OAAQI,CAAAA,OAAR,CAAkBO,IA/FsG;",
"sources":["node_modules/three-nebula/build/esm/initializer/Body.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three_nebula$build$esm$initializer$Body\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Initializer = _interopRequireDefault(require(\"./Initializer\"));\n\nvar _math = require(\"../math\");\n\nvar _types = require(\"./types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Sets the body property on initialized particles.\n *\n */\nclass Body extends _Initializer.default {\n  /**\n   * Constructs a Body initalizer instance.\n   *\n   * @param {string|number|object} body - The content for the particle body, can\n   * be a color or an object (mesh)\n   * @param {?number} w - The width of the particle body\n   * @param {?number} h - The height of the particle body\n   * @return void\n   */\n  constructor(body, w, h, isEnabled = true) {\n    super(_types.INITIALIZER_TYPE_BODY, isEnabled);\n    /**\n     * @desc The content for the particle body\n     * @type {ArraySpan}\n     */\n\n    this.body = (0, _math.createArraySpan)(body);\n    /**\n     * @desc The width of the particle Body\n     * @type {number}\n     */\n\n    this.w = w;\n    /**\n     * @desc The height of the particle Body\n     * @type {number}\n     */\n\n    this.h = h || w;\n  }\n  /**\n   * Sets the particle's initial body.\n   *\n   * @param {Particle} particle - the particle to initialize the property on\n   * @return void\n   */\n\n\n  initialize(particle) {\n    var body = this.body.getValue();\n\n    if (this.w) {\n      particle.body = {\n        width: this.w,\n        height: this.h,\n        body: body\n      };\n    } else {\n      particle.body = body;\n    }\n  }\n  /**\n   * Creates a Body initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.body - The color for the particle body\n   * @property {number} json.width - The width of the particle body\n   * @property {number} json.height - The height of the particle body\n   * @return {Body}\n   */\n\n\n  static fromJSON(json) {\n    const {\n      body,\n      width,\n      height,\n      isEnabled = true\n    } = json;\n    return new Body(body, width, height, isEnabled);\n  }\n\n}\n\nexports.default = Body;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","_Initializer","_interopRequireDefault","obj","__esModule","_math","_types","Body","constructor","body","w","h","isEnabled","INITIALIZER_TYPE_BODY","createArraySpan","initialize","particle","getValue","width","height","fromJSON","json"]
}
