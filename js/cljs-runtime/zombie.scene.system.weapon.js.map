{"version":3,"sources":["zombie/scene/system/weapon.cljs"],"mappings":"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","names":["zombie.scene.system.weapon/*next-id*","p__13206","map__13211","cljs.core/--destructure-map","cljs.core.get","zombie.scene.system.weapon/-semi-auto-entry-fire","bus","local-state","entity-id","_evt","zombie.scene.system.weapon/fire-weapon!","zombie.scene.system.weapon/semi-auto-fsm","firing-rate","G__13227","statecharts.core/machine","zombie.scene.system.weapon/spawn-particles!","type","pos","dir","zombie.util.messaging/send","map__13243","map__13244","physics-system","cljs.core/deref","cljs.core.get_in","damage","aim","world-position","world-direction","ray-start","zombie.util.threejs/tuple->vector3","ray-end","hits","zombie.scene.system.physics.core/raycast-all","zombie.util.threejs/vector3->tuple","p1__13242#","cljs.core.filter","cljs.core.not_EQ_","cljs.core.sort_by","cljs.core.take","cljs.core/not","cljs.core/seq","cljs.core.swap_BANG_","zombie.state.databases/rays","cljs.core/assoc","seq__13251","chunk__13252","count__13253","i__13254","map__13276","temp__5753__auto__","cljs.core/chunked-seq?","c__4638__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","map__13277","cljs.core/first","cljs.core/next","enemy-id","normal","hit-position","zombie.scene.system.weapon/register-listeners!","fsm","p1__13278#","zombie.util.messaging/on","cljs.core/assoc-in","fire?","statecharts.core.send","cljs.core/PROTOCOL_SENTINEL","p__13279","map__13280","p__13281","map__13282","p__13284","map__13285","this__4450__auto__","writer__4451__auto__","opt__4452__auto__","cljs.core/-write","zombie.scene.system.weapon/WeaponSystem","zombie.scene.system.weapon/->WeaponSystem","_","systems","cljs.core/reset!","key","_obj","G__13283","statecharts.core/service","cljs.core.assoc","statecharts.core/start","_key","_delta-time","zombie.scene.system.weapon/create","event-bus","cljs.core.atom"],"sourcesContent":["(ns zombie.scene.system.weapon\r\n  (:require [zombie.scene.system.physics.core :as physics]\r\n            [zombie.util.messaging :as message]\r\n            [zombie.util.threejs :refer [tuple->vector3\r\n                                       vector3->tuple]]\r\n            [zombie.state.databases :as db]\r\n            [statecharts.core :as fsm]\r\n            [threeagent.system :refer [ISystem]]))\r\n\r\n(def ^:private ^:dynamic *next-id* 0)\r\n(declare fire-weapon!)\r\n(defn- -semi-auto-entry-fire [{:keys [bus local-state entity-id]} _evt]\r\n  (fire-weapon! bus local-state entity-id))\r\n\r\n(defn- semi-auto-fsm [firing-rate]\r\n  (fsm/machine {:id :weapon/semi-auto\r\n                :initial :idle\r\n                :on {:start-firing {}\r\n                     :end-firing {}\r\n                     :tick {}}\r\n                :states {:idle {:on {:start-firing :fire}}\r\n                         :fire {:entry [-semi-auto-entry-fire]\r\n                                :after [{:delay (* 1000 (/ 1.0 firing-rate))\r\n                                         :target :idle}]}}}))\r\n\r\n(defn- spawn-particles! [bus type pos dir]\r\n  (message/send bus :particles/spawn {:type type\r\n                                      :position pos\r\n                                      :rotation dir}))\r\n\r\n(defn- fire-weapon! [bus local-state entity-id]\r\n  (let [physics-system (get-in @local-state [:systems :physics])\r\n        {damage :damage\r\n         aim :aim} (get-in @local-state [:weapons entity-id])\r\n        {:keys [world-position\r\n                world-direction]} aim\r\n        ray-start (tuple->vector3 world-position)\r\n        ray-end (-> (tuple->vector3 world-direction)\r\n                    (.multiplyScalar 10)\r\n                    (.add ray-start))\r\n        hits (->> (physics/raycast-all physics-system\r\n                                       (vector3->tuple ray-start)\r\n                                       (vector3->tuple ray-end))\r\n                  (filter #(not= entity-id (:entity-id %)))\r\n                  (sort-by :distance)\r\n                  (take 1))]\r\n    (message/send bus entity-id :audio/play-sound {:type :sfx/laser-large})\r\n    (when (not (seq hits))\r\n       (set! *next-id* (inc *next-id*))\r\n       (swap! db/rays assoc *next-id* {:start-position world-position\r\n                                       :end-position (vector3->tuple ray-end)}))\r\n    (doseq [{enemy-id :entity-id\r\n             normal :hit-normal\r\n             hit-position :hit-position} hits]\r\n       (set! *next-id* (inc *next-id*))\r\n       (swap! db/rays assoc *next-id* {:start-position world-position\r\n                                       :end-position hit-position})\r\n       (if enemy-id\r\n         (message/send bus enemy-id :combat/hit {:damage damage\r\n                                                 :attack-direction world-direction\r\n                                                 :hit-normal normal\r\n                                                 :hit-position hit-position\r\n                                                 :attacker-id entity-id})\r\n         (do\r\n           (message/send bus :audio/play-sound {:type :sfx/impact-plate\r\n                                                :position hit-position})\r\n           (spawn-particles! bus :impact-sparks\r\n                             hit-position\r\n                             normal))))))\r\n\r\n(defn- register-listeners! [bus local-state entity-id fsm]\r\n  (message/on bus entity-id :weapon/set-aim #(swap! local-state assoc-in [:weapons entity-id :aim] %))\r\n  (message/on bus entity-id :weapon/fire\r\n              (fn [fire?]\r\n                (if fire?\r\n                  (fsm/send fsm :start-firing)\r\n                  (fsm/send fsm :end-firing)))))\r\n\r\n(deftype WeaponSystem [bus local-state]\r\n  ISystem\r\n  (init [_ {:keys [systems]}]\r\n    (reset! local-state {:systems systems}))\r\n  (destroy [_ _])\r\n  (on-entity-added [_ _ key _obj {:keys [damage firing-rate]}]\r\n    (let [fsm (fsm/service (assoc (semi-auto-fsm firing-rate)\r\n                                  :context {:entity-id key\r\n                                            :bus bus\r\n                                            :local-state local-state}))]\r\n      (fsm/start fsm)\r\n      (register-listeners! bus local-state key fsm)\r\n      (swap! local-state assoc-in [:weapons key] {:damage damage\r\n                                                  :fsm fsm})))\r\n  (on-entity-removed [_ _ _key _obj {:keys []}])\r\n  (tick [_ _delta-time]))\r\n\r\n(defn create [event-bus]\r\n  (->WeaponSystem event-bus (atom {})))\r\n"]}