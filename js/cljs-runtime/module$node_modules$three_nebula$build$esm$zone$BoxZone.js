shadow$provide.module$node_modules$three_nebula$build$esm$zone$BoxZone=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _MathUtils=_interopRequireDefault(require("module$node_modules$three_nebula$build$esm$math$MathUtils")),_Util=_interopRequireDefault(require("module$node_modules$three_nebula$build$esm$utils$Util"));global=_interopRequireDefault(require("module$node_modules$three_nebula$build$esm$zone$Zone"));
var _types=require("module$node_modules$three_nebula$build$esm$zone$types");class BoxZone extends global.default{constructor(a,b,c,d,e,f){super(_types.ZONE_TYPE_BOX);var y,z;if(_Util.default.isUndefined(b,c,d,e,f)){var x=y=z=0;a=b=d=a||100}else _Util.default.isUndefined(d,e,f)?(x=y=z=0,d=c):(x=a,y=b,z=c,a=d,b=e,d=f);this.x=x;this.y=y;this.z=z;this.width=a;this.height=b;this.depth=d;this.friction=.85;this.max=6}isBoxZone(){return!0}getPosition(){this.vector.x=this.x+_MathUtils.default.randomAToB(-.5,
.5)*this.width;this.vector.y=this.y+_MathUtils.default.randomAToB(-.5,.5)*this.height;this.vector.z=this.z+_MathUtils.default.randomAToB(-.5,.5)*this.depth;return this.vector}_dead(particle){particle.position.x+particle.radius<this.x-this.width/2?particle.dead=!0:particle.position.x-particle.radius>this.x+this.width/2&&(particle.dead=!0);particle.position.y+particle.radius<this.y-this.height/2?particle.dead=!0:particle.position.y-particle.radius>this.y+this.height/2&&(particle.dead=!0);particle.position.z+
particle.radius<this.z-this.depth/2?particle.dead=!0:particle.position.z-particle.radius>this.z+this.depth/2&&(particle.dead=!0)}_bound(particle){particle.position.x-particle.radius<this.x-this.width/2?(particle.position.x=this.x-this.width/2+particle.radius,particle.velocity.x*=-this.friction,this._static(particle,"x")):particle.position.x+particle.radius>this.x+this.width/2&&(particle.position.x=this.x+this.width/2-particle.radius,particle.velocity.x*=-this.friction,this._static(particle,"x"));
particle.position.y-particle.radius<this.y-this.height/2?(particle.position.y=this.y-this.height/2+particle.radius,particle.velocity.y*=-this.friction,this._static(particle,"y")):particle.position.y+particle.radius>this.y+this.height/2&&(particle.position.y=this.y+this.height/2-particle.radius,particle.velocity.y*=-this.friction,this._static(particle,"y"));particle.position.z-particle.radius<this.z-this.depth/2?(particle.position.z=this.z-this.depth/2+particle.radius,particle.velocity.z*=-this.friction,
this._static(particle,"z")):particle.position.z+particle.radius>this.z+this.depth/2&&(particle.position.z=this.z+this.depth/2-particle.radius,particle.velocity.z*=-this.friction,this._static(particle,"z"))}_static(particle,axis){!(0<particle.velocity[axis]*particle.acceleration[axis])&&Math.abs(particle.velocity[axis])<.0167*Math.abs(particle.acceleration[axis])*this.max&&(particle.velocity[axis]=0,particle.acceleration[axis]=0)}_cross(particle){particle.position.x+particle.radius<this.x-this.width/
2&&0>=particle.velocity.x?particle.position.x=this.x+this.width/2+particle.radius:particle.position.x-particle.radius>this.x+this.width/2&&0<=particle.velocity.x&&(particle.position.x=this.x-this.width/2-particle.radius);particle.position.y+particle.radius<this.y-this.height/2&&0>=particle.velocity.y?particle.position.y=this.y+this.height/2+particle.radius:particle.position.y-particle.radius>this.y+this.height/2&&0<=particle.velocity.y&&(particle.position.y=this.y-this.height/2-particle.radius);particle.position.z+
particle.radius<this.z-this.depth/2&&0>=particle.velocity.z?particle.position.z=this.z+this.depth/2+particle.radius:particle.position.z-particle.radius>this.z+this.depth/2&&0<=particle.velocity.z&&(particle.position.z=this.z-this.depth/2-particle.radius)}}exports.default=BoxZone}
//# sourceMappingURL=module$node_modules$three_nebula$build$esm$zone$BoxZone.js.map
