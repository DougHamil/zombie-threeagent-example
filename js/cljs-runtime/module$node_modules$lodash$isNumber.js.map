{
"version":3,
"file":"module$node_modules$lodash$isNumber.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,mCAAA,CAAwD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC5FC,WAAaH,OAAA,CAAQ,wCAAR,CAD+E,CAE5FI,aAAeJ,OAAA,CAAQ,yCAAR,CAoCnBC,OAAOC,CAAAA,OAAP,CALAG,QAAiB,CAACC,KAAD,CAAQ,CACvB,MAAuB,QAAvB,EAAO,MAAOA,MAAd,EACGF,YAAA,CAAaE,KAAb,CADH,EA7BcC,iBA6Bd,EAC0BJ,UAAA,CAAWG,KAAX,CAFH,CAjCuE;",
"sources":["node_modules/lodash/isNumber.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$isNumber\"] = function(global,require,module,exports) {\nvar baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseGetTag","isObjectLike","isNumber","value","numberTag"]
}
