{"version":3,"sources":["zombie/scene/system/camera.cljs"],"mappings":"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","names":["zombie.scene.system.camera/v1","js/module$node_modules$three$build$three_module.Vector3","p__10897","map__10898","cljs.core/--destructure-map","cljs.core.get","zombie.scene.system.camera/tick-camera!","_delta-time","look-at-target","object","temp__5753__auto__","look-at-obj","cljs.core/deref","cljs.core.get_in","zombie.state.databases/entity-objects","pos","cljs.core/PROTOCOL_SENTINEL","p__10906","map__10907","p__10911","map__10912","this__4450__auto__","writer__4451__auto__","opt__4452__auto__","cljs.core/-write","zombie.scene.system.camera/CameraSystem","zombie.scene.system.camera/->CameraSystem","local-state","_","canvas","threejs-renderer","cljs.core.swap_BANG_","cljs.core/assoc","id","obj","ctx","cljs.core/assoc-in","_id","_obj","_config","delta-time","seq__10913","cljs.core/seq","chunk__10914","count__10915","i__10916","vec__10923","cljs.core.nth","cljs.core/chunked-seq?","c__4638__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__10926","cljs.core/first","cljs.core/next","cam","zombie.scene.system.camera/create","cljs.core.atom"],"sourcesContent":["(ns zombie.scene.system.camera\r\n  (:require [zombie.state.databases :as db]\r\n            [threeagent.system :refer [ISystem]]\r\n            [\"three\" :as three]))\r\n\r\n(def ^:private v1 (three/Vector3.))\r\n\r\n(defn- tick-camera! [_delta-time {:keys [look-at-target\r\n                                         object]}]\r\n  (when-let [look-at-obj (get-in @db/entity-objects [look-at-target])]\r\n    (let [pos (.getWorldPosition look-at-obj v1)]\r\n      (.lookAt object pos))))\r\n\r\n(deftype CameraSystem [local-state]\r\n  ISystem\r\n  (init [_ {:keys [canvas threejs-renderer]}]\r\n    (swap! local-state assoc\r\n           :canvas canvas\r\n           :renderer threejs-renderer))\r\n  (destroy [_ _])\r\n  (on-entity-added [_ _ id ^js obj {:keys [look-at-target]}]\r\n    (let [ctx {:object obj\r\n               :look-at-target look-at-target}]\r\n      (swap! local-state assoc-in [:cameras id] ctx)))\r\n  (on-entity-removed [_ _ _id _obj _config])\r\n  (tick [_ delta-time]\r\n    (doseq [[_ cam] (:cameras @local-state)]\r\n      (tick-camera! delta-time cam))))\r\n    \r\n\r\n(defn create []\r\n  (->CameraSystem (atom {})))\r\n"]}