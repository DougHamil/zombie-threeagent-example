{
"version":3,
"file":"module$node_modules$three_nebula$build$esm$math$ColorSpan.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,yDAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgBtHC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CAbrCG,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAQQ,CAAAA,eAAR,CAA0BR,OAAQI,CAAAA,OAAlC,CAA4C,IAAK,EAEjD,KAAIK,WAAaR,sBAAA,CAAuBH,OAAA,CAAQ,2DAAR,CAAvB,CAEbY,OAAAA,CAAQT,sBAAA,CAAuBH,OAAA,CAAQ,sDAAR,CAAvB,CAEZ,KAAIa;AAAUV,sBAAA,CAAuBH,OAAA,CAAQ,mCAAR,CAAvB,CAAd,CAEIc,OAASd,OAAA,CAAQ,uDAAR,CAQb,MAAMe,UAAN,QAAwBH,OAAMN,CAAAA,OAA9B,CAQEU,WAAW,CAACC,MAAD,CAAS,CAClB,KAAA,EAMA,KAAKC,CAAAA,IAAL,CAAYJ,MAAOK,CAAAA,oBAMnB,KAAKC,CAAAA,eAAL,CAAkC,QAAX,GAAAH,MAAA,CAAsB,CAAA,CAAtB,CAA6B,CAAA,CAMpD,KAAKA,CAAAA,MAAL,CAAcI,KAAMC,CAAAA,OAAN,CAAcL,MAAd,CAAA,CAAwBA,MAAxB,CAAiC,CAACA,MAAD,CAnB7B,CA6BpBM,QAAQ,EAAG,CACT,MAAO,KAAKH,CAAAA,eAAL,CAAuBT,UAAWL,CAAAA,OAAQkB,CAAAA,WAAnB,EAAvB,CAA0D,CAAC,CAAA,CAAGX,OAAQP,CAAAA,OAAZ,EAAqB,IAAKW,CAAAA,MAA1B,CADxD,CArCb,CAkDAf,OAAQI,CAAAA,OAAR,CAAkBS,SAelBb,QAAQQ,CAAAA,eAAR,CAbwBO,MAAAP;AAAU,CAC3BO,MAAL,GACEQ,OAAQC,CAAAA,IAAR,CAAa,2BAA2BT,MAA3B,qDAAb,CACA,CAAAA,MAAA,CAAS,QAFX,CAKA,OAAIA,OAAJ,WAAsBF,UAAtB,CACSE,MADT,CAIO,IAAIF,SAAJ,CAAcE,MAAd,CAVyB,CA1EoF;",
"sources":["node_modules/three-nebula/build/esm/math/ColorSpan.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three_nebula$build$esm$math$ColorSpan\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createColorSpan = exports.default = void 0;\n\nvar _MathUtils = _interopRequireDefault(require(\"./MathUtils\"));\n\nvar _Span = _interopRequireDefault(require(\"./Span\"));\n\nvar _sample = _interopRequireDefault(require(\"lodash/sample\"));\n\nvar _types = require(\"./types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Class for storing and interacting with an array of colours.\n *\n */\nclass ColorSpan extends _Span.default {\n  /**\n   * Constructs a ColorSpan instance.\n   *\n   * @param {string|array<string>} colors - A color or array of colors. If the\n   * string 'random' is provided, a random color will be returned from getValue\n   * @return void\n   */\n  constructor(colors) {\n    super();\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n\n    this.type = _types.MATH_TYPE_COLOR_SPAN;\n    /**\n     * @desc Determines if a random color should be returned from the getValue method.\n     * @type {boolean}\n     */\n\n    this.shouldRandomize = colors === 'random' ? true : false;\n    /**\n     * @desc An array of colors to select from\n     * @type {array<string>}\n     */\n\n    this.colors = Array.isArray(colors) ? colors : [colors];\n  }\n  /**\n   * Gets a color from the color array\n   * or a random color if this.shouldRandomize is true.\n   *\n   * @return {string} a hex color\n   */\n\n\n  getValue() {\n    return this.shouldRandomize ? _MathUtils.default.randomColor() : (0, _sample.default)(this.colors);\n  }\n\n}\n/**\n * Attempts to create an ArraySpan from the colors provided.\n *\n * @param {mixed} colors - colors to try and create an ArraySpan from\n * @return {?ColorSpan}\n */\n\n\nexports.default = ColorSpan;\n\nconst createColorSpan = colors => {\n  if (!colors) {\n    console.warn(`Invalid colors argument ${colors} passed to createColorSpan. Defaulting to 'random'.`);\n    colors = 'random';\n  }\n\n  if (colors instanceof ColorSpan) {\n    return colors;\n  }\n\n  return new ColorSpan(colors);\n};\n\nexports.createColorSpan = createColorSpan;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","createColorSpan","_MathUtils","_Span","_sample","_types","ColorSpan","constructor","colors","type","MATH_TYPE_COLOR_SPAN","shouldRandomize","Array","isArray","getValue","randomColor","console","warn"]
}
