{
"version":3,
"file":"module$node_modules$three_nebula$build$esm$renderer$GPURenderer$Desktop$shaders$vertexShader.js",
"lineCount":28,
"mappings":"AAAAA,cAAA,CAAA,4FAAA,CAAiH,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGzJC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,YAAR,CAAuB,IAAK,EAE5B,KAAIC,WAAaP,OAAA,CAAQ,+FAAR,CAAjB,CAEIQ,YAAcR,OAAA,CAAQ,0FAAR,CAiClBE,QAAQI,CAAAA,YAAR,CA/BqB,EAAAA,EACZ;;;;;;;;;;;;;;;;;;;;;;+DAsBsDC,UAAWE,CAAAA,iBAtBjE;;gCAwBuBD,WAAYE,CAAAA,uBAxBnC;;;CAbgJ;",
"sources":["node_modules/three-nebula/build/esm/renderer/GPURenderer/Desktop/shaders/vertexShader.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three_nebula$build$esm$renderer$GPURenderer$Desktop$shaders$vertexShader\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.vertexShader = void 0;\n\nvar _constants = require(\"../../common/TextureAtlas/constants\");\n\nvar _constants2 = require(\"../../common/shaders/constants\");\n\nconst vertexShader = () => {\n  return `\n    uniform sampler2D uTexture;\n    //atlasIndex is a 256x1 float texture of tile rectangles as r=minx g=miny b=maxx a=maxy\n    uniform sampler2D atlasIndex;\n\n    attribute float size;\n    attribute vec3 color;\n    attribute float alpha;\n    attribute float texID;\n\n    varying vec3 targetColor;\n    varying float targetAlpha;\n    varying vec4 tileRect;\n    varying float tileID;\n\n    void main() {\n      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n      targetColor = color;\n      targetAlpha = alpha;\n\n      tileID = texID;\n      //get the tile rectangle from the atlasIndex texture..\n      tileRect = texture2D(atlasIndex, vec2((tileID + 0.5) / ${_constants.DATA_TEXTURE_SIZE}.0, 0.5));\n\n      gl_PointSize = ((size * ${_constants2.SIZE_ATTENUATION_FACTOR}) / -mvPosition.z);\n      gl_Position = projectionMatrix * mvPosition;\n    }\n`;\n};\n\nexports.vertexShader = vertexShader;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","vertexShader","_constants","_constants2","DATA_TEXTURE_SIZE","SIZE_ATTENUATION_FACTOR"]
}
