{
"version":3,
"file":"module$node_modules$three_nebula$build$esm$behaviour$Attraction.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/three-nebula/build/esm/behaviour/Attraction.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three_nebula$build$esm$behaviour$Attraction\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _constants = require(\"./constants\");\n\nvar _Behaviour = _interopRequireDefault(require(\"./Behaviour\"));\n\nvar _math = require(\"../math\");\n\nvar _ease = require(\"../ease\");\n\nvar _types = require(\"./types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Behaviour that causes particles to be attracted to a target position.\n *\n */\nclass Attraction extends _Behaviour.default {\n  /**\n   * Constructs an Attraction behaviour instance.\n   *\n   * @param {Vector3D} targetPosition - The position the particles will be attracted to\n   * @param {number} force - The attraction force scalar multiplier\n   * @param {number} radius - The attraction radius\n   * @param {number} [life=DEFAULT_LIFE] - The life of the particle\n   * @param {function} [easing=DEFAULT_BEHAVIOUR_EASING] - The behaviour's decaying trend\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(targetPosition = new _math.Vector3D(), force = _constants.DEFAULT_ATTRACTION_FORCE_SCALAR, radius = _constants.DEFAULT_ATTRACITON_RADIUS, life = _constants.DEFAULT_LIFE, easing = _constants.DEFAULT_BEHAVIOUR_EASING, isEnabled = true) {\n    super(life, easing, _types.BEHAVIOUR_TYPE_ATTRACTION, isEnabled);\n    /**\n     * @desc The position the particles will be attracted to\n     * @type {Vector3D}\n     */\n\n    this.targetPosition = targetPosition;\n    /**\n     * @desc The attraction radius\n     * @type {number} - the attraction radius\n     */\n\n    this.radius = radius;\n    /**\n     * @desc The attraction force scalar multiplier\n     * @type {number}\n     */\n\n    this.force = this.normalizeValue(force);\n    /**\n     * @desc The radius of the attraction squared\n     * @type {number}\n     */\n\n    this.radiusSq = this.radius * this.radius;\n    /**\n     * @desc The attraction force in 3D space\n     * @type {Vector3D}\n     */\n\n    this.attractionForce = new _math.Vector3D();\n    /**\n     * @desc The linear attraction force\n     * @type {number}\n     */\n\n    this.lengthSq = 0;\n  }\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {Vector3D} targetPosition - the position the particles will be attracted to\n   * @param {number} force - the attraction force multiplier\n   * @param {number} radius - the attraction radius\n   * @param {number} life - the life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @return void\n   */\n\n\n  reset(targetPosition = new _math.Vector3D(), force = _constants.DEFAULT_ATTRACTION_FORCE_SCALAR, radius = _constants.DEFAULT_ATTRACITON_RADIUS, life, easing) {\n    this.targetPosition = targetPosition;\n    this.radius = radius;\n    this.force = this.normalizeValue(force);\n    this.radiusSq = this.radius * this.radius;\n    this.attractionForce = new _math.Vector3D();\n    this.lengthSq = 0;\n    life && super.reset(life, easing);\n  }\n  /**\n   * Mutates particle acceleration.\n   *\n   * @param {Particle} particle - the particle to apply the behaviour to\n   * @param {number} time - particle engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n\n\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n    this.attractionForce.copy(this.targetPosition);\n    this.attractionForce.sub(particle.position);\n    this.lengthSq = this.attractionForce.lengthSq();\n\n    if (this.lengthSq > _constants.PARTICLE_LENGTH_SQ_THRESHOLD && this.lengthSq < this.radiusSq) {\n      this.attractionForce.normalize();\n      this.attractionForce.scalar(1 - this.lengthSq / this.radiusSq);\n      this.attractionForce.scalar(this.force);\n      particle.acceleration.add(this.attractionForce);\n    }\n  }\n  /**\n   * Creates a Body initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.x - The target position x value\n   * @property {number} json.y - The target position y value\n   * @property {number} json.z - The target position z value\n   * @property {number} json.force - The attraction force scalar multiplier\n   * @property {number} json.life - The life of the particle\n   * @property {string} json.easing - The behaviour's decaying trend\n   * @return {Body}\n   */\n\n\n  static fromJSON(json) {\n    const {\n      x,\n      y,\n      z,\n      force,\n      radius,\n      life,\n      easing,\n      isEnabled = true\n    } = json;\n    return new Attraction(new _math.Vector3D(x, y, z), force, radius, life, (0, _ease.getEasingByName)(easing), isEnabled);\n  }\n\n}\n\nexports.default = Attraction;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","_constants","_Behaviour","_interopRequireDefault","obj","__esModule","_math","_ease","_types","Attraction","constructor","targetPosition","Vector3D","force","DEFAULT_ATTRACTION_FORCE_SCALAR","radius","DEFAULT_ATTRACITON_RADIUS","life","DEFAULT_LIFE","easing","DEFAULT_BEHAVIOUR_EASING","isEnabled","BEHAVIOUR_TYPE_ATTRACTION","normalizeValue","radiusSq","attractionForce","lengthSq","reset","mutate","particle","time","index","energize","copy","sub","position","PARTICLE_LENGTH_SQ_THRESHOLD","normalize","scalar","acceleration","add","fromJSON","json","x","y","z","getEasingByName"]
}
