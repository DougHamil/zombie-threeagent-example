{"version":3,"sources":["zombie/scene/system/player.cljs"],"mappings":";;AAgBA,AAAeA,gCAAG,KAAAC;AAClB,AAAeC,gCAAG,KAAAD;AAClB,AAAeE,qCAAQ,KAAAF;AACvB,AAAeG,2CAAc,KAAAH;AAC7B,AAAeI,4CAAe,AAAY,KAAAJ,qDAAA,IAAA,IAAA;AAC1C,AAAeK,yCAAY,AAAY,KAAAL,qDAAA,KAAA,IAAA;AAEvC,mDAAA,2DAAAM,9GAAOI,uHAAiCE;AAAxC,AAAA,IAAAL,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;YAAA,AAAAE,4CAAAF,eAAA,nEAAgCI;AAAhC,AACE,OAAA,yFAAA,AAAAE,gBAAWF;;AAEb,8CAAA,2DAAAG,zGAAOE,oGAAaC,cAA6BL;AAAjD,AAAA,IAAAG,aAAAD;IAAAC,iBAAA,AAAAP,4BAAAO;gBAAA,AAAAN,4CAAAM,eAAA,vEAAiCG;UAAjC,AAAAT,4CAAAM,eAAA,jEAA2CI;AAA3C,AACE,gDAAA,zCAACC,2BAAaD,IAAID,+EAA0BD;;AAE9C,4CAAA,2CAAA,2DAAA,uDAAA,gDAAA,2CAAA,qDAAA,2CAAA,yDAAA,2CAAA,uDAAA,2CAAA,gDAAA,2CAAA,uDAAA,sEAAA,sDAAA,2CAAA,shBAAA,gDAAA,2CAAA,qDAAA,mFAAA,2CAAA,wDAAA,2DAAA,wIAAA,2DAAA,2CAAA,ohBAAA,gDAAA,2CAAA,qDAAA,mFAAA,2CAAA,wDAAA,sDAAA,x5FAAeI,y7BAGuC,4FAAA,2CAAA,wDAAA,uDAAA,gEAAA,sGAAA,sDAAA,ldAACC,gDAAQN,w2BAIIN,6OACV,4FAAA,2CAAA,wDAAA,uDAAA,gEAAA,oGAAA,sDAAA,hdAACY,gDAAQN,i2BAII,AAACO,qBAAWb;AAElF,4CAAA,2CAAA,2DAAA,uDAAA,gDAAA,2CAAA,qDAAA,mCAAA,qEAAA,mFAAA,8CAAA,iEAAA,oEAAA,mFAAA,2CAAA,wDAAA,mFAAA,8CAAA,mEAAA,gHAAA,2CAAA,wDAAA,mFAAA,8CAAA,sFAAA,yDAAA,2CAAA,uDAAA,2CAAA,gDAAA,2CAAA,uDAAA,sEAAA,sDAAA,2CAAA,6oBAAA,gDAAA,2CAAA,qDAAA,mFAAA,2CAAA,wDAAA,2DAAA,wIAAA,yDAAA,2CAAA,+gBAAA,2DAAA,2CAAA,yoBAAA,gDAAA,2CAAA,qDAAA,mFAAA,2CAAA,wDAAA,sDAAA,91JAAec,wnCAI2Cd,w6BAGJ,4FAAA,2CAAA,wDAAA,sDAAA,iEAAA,uDAAA,gEAAA,sGAAA,sDAAA,zkBAACY,gDAAQN,+9BAKIN,2OACV,4FAAA,2CAAA,wDAAA,sDAAA,gEAAA,wFAAA,sDAAA,ncAACY,gDAAQN,qkBAGT,4FAAA,2CAAA,wDAAA,sDAAA,iEAAA,uDAAA,gEAAA,kGAAA,sDAAA,rkBAACM,gDAAQN,s9BAKI,AAACO,qBAAWb;AAElF,AAAee,2CACb,iBAAAC,WAAA,2CAAA,kDAAA,4EAAA,qDAAA,8DAAA,4DAAA,2CAAA,0GAAA,1CAGwBL,4GACAG;AAJxB,AAAA,wHAAAE,+CAAAA,/JAACC,yDAAAA,mEAAAA;;AAMH,qDAAA,iFAAAC,tIAAOE,kHAAoBC,UAAUb;AAArC,AAAA,IAAAW,aAAAD;IAAAC,iBAAA,AAAArB,4BAAAqB;QAAA,AAAApB,4CAAAoB,eAAA,/DAAuDG;QAAvD,AAAAvB,4CAAAoB,eAAA,/DAAyDI;AAAzD,AACE,sDAAA,8GAAA,qFAAA,lPAACb,2BAAaW,UAAUb,2MAA+Cc,MAAMC;;AAE/E,qDAAA,iFAAAC,tIAAOE,kHAAoBL,UAAUb;AAArC,AAAA,IAAAiB,aAAAD;IAAAC,iBAAA,AAAA3B,4BAAA2B;QAAA,AAAA1B,4CAAA0B,eAAA,/DAAuDH;QAAvD,AAAAvB,4CAAA0B,eAAA,/DAAyDF;AAAzD,AACE,sDAAA,8GAAA,qFAAA,lPAACb,2BAAaW,UAAUb,2MAA+Cc,MAAMC;;AAE/E,kDAAA,0DAAAI,5GAAOG;AAAP,AAAA,IAAAF,aAAAD;cAAA,AAAAE,4CAAAD,WAAA,IAAA,rEAA8BG;cAA9B,AAAAF,4CAAAD,WAAA,IAAA,rEAAsCI;AAAtC,AAEE,IAAMC,OAAS,AAAO5C,mCAAGK,nCACV,6FAAiBqC;IAC1BG,OAAS,AAAO3C,mCAAGI,nCACV,0FAAiBqC;IAC1BG,UAAY3C,AACA,wCAAOyC,xCACP,kDAAMC;AANxB,AAOE,OAAYC;;AAEhB,uDAAA,vDAAOC,sHAA2BC,IAAoBC,OAAsBH,QAAQI;AAApF,AACE,GAAI,CAAA,MAAK,AAAWJ;AAClB,AACE,AAAmBG,wBAAOD;;AAC1B,AAAO9C,mCAAG4C;;AACV,AAAiB5C,6CAAGgD;;AACpB,OAAMF,QAAI9C;;AACZ,AACE,AAAmB+C,wBAAOD;;AAC1B,AAAoBC,yBAAO/C;;AAC3B,6CAAA,7CAAiBA;;AACjB,OAAM8C,QAAI9C;;;AAGhB,gDAAA,hDAAOiD,wGAAe/B,IAAID,UAAUiC,MAAqBC;AAAzD,AAEE,6BAAA,AAAAvC,7BAAiBuC,6CAAeD;;AAChC,gDAAA,zCAAC/B,2BAAaD,IAAID,4FAAgC,AAACmC,sCAAeD;;AAEpE,mDAAA,yEAAAE,5HAAOE,8GAAkBrC,IAAID;AAA7B,AAAA,IAAAqC,aAAAD;IAAAC,iBAAA,AAAA/C,4BAAA+C;aAAA,AAAA9C,4CAAA8C,eAAA,pEAA+DP;oBAA/D,AAAAvC,4CAAA8C,eAAA,3EAC+CE;iBAD/C,AAAAhD,4CAAA8C,eAAA,xEAE+CG;yBAF/C,AAAAjD,4CAAA8C,eAAA,hFAG+CI;AAH/C,AAIE,IAAMC,mBAAiB,AAACpB,gDAAqBiB;IACvCI,gBAAc,AAACC,oCACA,sHAAA,tHAAChB,qDAA0B3C,yCAAc6C,OAAOY;IAC/DG,gBAAQ,CAAA,MAAK,AAAWH;AAH9B,AAIE,AAACV,8CAAc/B,IAAID,UAAUwC,WAAWE;;AAJ1C,kDAAA,yHAAA,nDAKkB,EAAIG,eAAQF,cAAcF,+EAChCI;;AAEd,iDAAA,8EAAAC,/HAAOE,0GAAgB/C,IAAID,UAAUiD;AAArC,AAAA,IAAAF,aAAAD;IAAAC,iBAAA,AAAAzD,4BAAAyD;QAAA,AAAAxD,4CAAAwD,eAAA,/DAAoDjC;QAApD,AAAAvB,4CAAAwD,eAAA,/DAAsDhC;AAAtD,AACE,aAAA,TAAMmC;IACApB,SAAO,AAAA,uFAAyBmB;IAChCE,UAAQ,AAAMtE,kCAAGiC,EAAEoC,OAAOnC;IAC1BqC,MAAI,AAAO,AAAkCtB,wBAAO/C,oCACzCmE;IACXG,MAAI,AAAY,AAAMF,YAAQC;AALpC,AAME,gDAAA,qEAAA,2CAAA,oHAAA,7QAAClD,2BAAaD,IAAID,mMAA2C,AAACmC,sCAAeiB,iFACf,AAACjB,sCAAekB;;AAElF,kCAAA,0DAAAC,5FAAOE,4EAAMvD,IAAIP,EAAEM;AAAnB,AAAA,IAAAuD,aAAAD;IAAAC,iBAAA,AAAAjE,4BAAAiE;aAAAA,TAEkCN;oBAFlC,AAAA1D,4CAAAgE,eAAA,3EAAqCE;kBAArC,AAAAlE,4CAAAgE,eAAA,zEAA6CG;aAA7C,AAAAnE,4CAAAgE,eAAA,pEAAmDzB;eAAnD,AAAAvC,4CAAAgE,eAAA,tEAA0DI;YAA1D,AAAApE,4CAAAgE,eAAA,nEACqC9D;AADrC,AAGE,6DAAA,7DAACmE,oDAASD;;AACV,oBAAUD;AAAV;;AAAA,AACE,IAAMG,eAAa,+CAAA,AAAAlE,8CAAA,mFAAA,sDAAA,tOAACmE,+DAAQC;IACtBC,iBAAe,AAAmBlC,wBAAOjD;AAD/C,AAEE,AAAOoF,oDAAwBD;;AAC/B,wGAAA,mJAAA,3PAACE,0DAAMC,8BAAUC,mGACWX,yIACL,AAACtB,sCAAe6B;;AACvC,AAAChB,+CAAe/C,IAAID,UAAUiD,OAAOY;;AACrC,IAAAQ,aAAsC,AAAC/B,iDAAiBrC,IAAID,UAAUiD;IAAtEoB,iBAAA,AAAA/E,4BAAA+E;oBAAA,AAAA9E,4CAAA8E,eAAA,3EAAc1B;oBAAd,AAAApD,4CAAA8E,eAAA,3EAA4BxB;AAA5B,AACE,gFAAA,gJAAA,hOAACqB,0DAAMzE,MAAM2E,gGACczB,2HACXE;;AAEhB,oBAAI,iBAAAyB,mBAAIzB;AAAJ,AAAA,oBAAAyB;AAAAA;;AAAY,OAACC,cAAId;;;AACnB,AAACvC,mDAAmBjB,IAAID,UAAU2C;;AAClC,AAACzB,mDAAmBjB,IAAID,UAAU6D;;;AACpC,oBAAIJ;AACF,OAAC7C,mDAAmBX,IAAID,UAAU6D;;AAClC,OAACjD,mDAAmBX,IAAID,UAAU2C;;;;AAE5C,wCAAA,xCAAO6B,wFAAYvE,IAAIwE,YAAYzE,UAAU0E;AAA7C,AACE,IAAMC,YAAU,AAACC,4CAAwB,+CAAA,AAAAjF,6BAAA,6FAAA,zKAACmE,+DAAQW,gGAAazE;AAA/D,AACE,sCAAA,uEAAA,2CAAA,qDAAA,yEAAA,uDAAA,IAAA,1UAACE,2BAAaD,6WAEgC0E;;AAElD,uCAAA,vCAAOE,sFAAW5E,IAAIwE,YAAYzE,UAAU0E;AAA5C,AACE,oBAAU,+CAAA,AAAA/E,6BAAA,6FAAA,zKAACmE,+DAAQW,gGAAazE;AAAhC;;AAAA,AACE,wBAAA,xBAAC8E,+BAAiB;AAAA,AACE,sGAAA,oEAAA,nKAACZ,mDAAMa,4BAAQX;;;AACnC,IAAMO,YAAU,AAACC,4CAAwB,+CAAA,AAAAjF,6BAAA,6FAAA,zKAACmE,+DAAQW,gGAAazE;AAA/D,AACE,kFAAA,6FAAA,8DAAA,7OAACkE,mDAAMO,YAAYO,sGAAUhF;;AAC7B,yCAAA,kFAAA,mFAAA,IAAA,IAAA,tNAACE,2BAAaD,IAAID;;AAClB,yCAAA,wEAAA,jHAACE,2BAAaD,IAAID;;AAClB,yCAAA,+EAAA,xHAACE,2BAAaD,IAAID;;AAClB,yCAAA,qEAAA,2CAAA,sDAAA,MAAA,qFAAA,KAAA,gEAAA,/WAACE,2BAAaD,IAAID;;AAGlB,sCAAA,uEAAA,2CAAA,qDAAA,yEAAA,uDAAA,IAAA,1UAACE,2BAAaD,6WAEgC0E;;;AAEpD,iDAAA,jDAAOM,0GAAgBhF,IAAIwE,YAAYzE,UAAU2D;AAAjD,AAEE,uCAAA,vCAACuB,yBAAWjF,IAAID,gFAA0B,AAACI,gDAAQoE,sCAAWvE,IAAIwE,YAAYzE;;AAC9E,uCAAA,vCAACkF,yBAAWjF,IAAID,8EAAyB,AAACI,gDAAQyE,qCAAU5E,IAAIwE,YAAYzE;;AAC5E,uCAAA,vCAACkF,yBAAWjF,IAAID,6EAAwB;AAAA,AACE,gDAAA,qEAAA,2CAAA,sDAAA,MAAA,0DAAA,IAAA,gEAAA,nVAACE,2BAAaD,IAAID;;;AAG5D,uCAAA,mFAAA,mEAAA,4DAAA,WAAAmF,pQAACD,yBAAWjF,IACAD;AADZ,AAEkC,AAAI,kFAAA,6FAAA,mEAAAmF,lPAACjB,mDAAMO,YAAYO,sGAAUhF;;AAC7B,yCAAA,uEAAAmF,hHAACjF,2BAAaD,IAAID;;AAClB,OAAC4D,oDAASD,SAAS,kBAAAwB,kBAAA,qEAAA;;;AAGzD,uCAAA,mFAAA,mEAAA,6DAAA,WAAAC,rQAACF,yBAAWjF,IACAD;AADZ,AAEmC,oBAAM,iBAAAqF,oBAAK,+CAAA,AAAA1F,6BAAA,6FAAA,zKAACmE,+DAAQW,gGAAazE;AAA3B,AAAA,oBAAAqF;AACK,OAACd,cAAI,+CAAA,AAAA5E,6BAAA,6FAAA,zKAACmE,+DAAQW,gGAAazE;;AADhCqF;;;AAAN,AAEE,kFAAA,6FAAA,oEAAAD,nPAAClB,mDAAMO,YAAYO,sGAAUhF;;AAC7B,gDAAA,gEAAAoF,zGAAClF,2BAAaD,IAAID;;AAHpB;;;;AAInC,8CAAA,mFAAA,4EAAA,8DAAA,WAAAsF,/QAACJ,yBAAWjF,IACAD;AADZ,AAEwC,yFAAA,6FAAA,gFAAAsF,/PAACpB,mDAAMO,YAAYO,sGAAUhF;;;AAEvE,yCAAA,zCAAOuF,0FAAaC;AAApB,AACE,OAACC,yBAAS;AAAA,AACE,IAAMC,6FAAa,iBAAAC,WAAWxB,hHACZ,gEAAA,IAAA,AAAAxE,pEAACmG,+CAAOC;IADPH,WAAA,mFAAA,6DAAA;AAAA,AAAA,oHAAAD,SAAAC,6CAAAD,SAAAC,3KAACC,uDAAAA,0EAAAA;;AAApB,AAEE,QAAGL,aAAWE;;;AAE9B,AAAA,AAAA,AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAA,CAAA,AAAA,sFAAA,WAAAM,mBAAAC,pHAAWmE;;AAAX,AAAA,IAAApE,yBAAA;AAAA,AAAA,OAAAA,8DAAAC,gBAAA;;;AAAA,CAAA,AAAA,sFAAA,WAAAC,mBAAAC,OAAAC,3HAAWgE;;AAAX,AAAA,IAAAlE,yBAAA;AAAA,AAAA,IAAAG,WAAAF;IAAAE,eAAA,EAAA,CAAAA,oBAAAC,oBAAA,AAAAD,aAAA;AAAA,AAAA,QAAAA;KAAA;AAAApG;;;KAAA;AAAAwE;;;;AAAA,OAAAlF,4CAAAgH,gBAAAJ,OAAAC;;;;;AAAA,CAAA,AAAA,2FAAA,WAAAI,mBAAAC,gBAAAC,zIAAW0D;;AAAX,AAAA,IAAA5D,yBAAA;AAAA,AAAA,OAAAV,+CAAA,WAAAa,kBAAAC;AAAA,AAAA,IAAAC,aAAAD;IAAAE,kBAAA,AAAAzF,4CAAAwF,WAAA,IAAA;IAAAE,kBAAA,AAAA1F,4CAAAwF,WAAA,IAAA;AAAA,AAAA,QAAAJ,gDAAAA,8CAAAE,kBAAAG,gBAAAC,mBAAAN,0BAAAE,kBAAAG,gBAAAC;GAAAL,mBAAAF;;;AAAA,CAAA,AAAA,+EAAAQ,/EAAWoD;;AAAX,CAAA,AAAA,2FAAA,3FAAWA,sGAEF1K,EAAEA;;AAFX,AAAA,YAAA,RAESA;AAFT,AAAA;;;AAAA,CAAA,AAAA,8FAAA,9FAAW0K,yGAGC1K,EAAEA;;AAHd,AAAA,YAAA,RAGYA;AAHZ,AAAA;;;AAAA,CAAA,AAAA,sGAAA,0BAAAuH,hIAAWmD,iHAIS1K,EAAEA,MAAEqL,GACYC;;AALpC,AAAA,IAAA9D,aAAAD;IAAAC,iBAAA,AAAA5H,4BAAA4H;iBAAA,AAAA3H,4CAAA2H,eAAA,xEAM4B1E;AAN5B,AAAA,YAAA,RAIoB9C;AAJpB,AAOI,IAAMuL,IAAE,6CAAA,7CAACC,0BAAYzG,sGAAasG;IAC5BpH,WAAS,iBAAAwH,WAAa,uFAAA,2DAAA,2CAAA,6DAAA,+DAAA,0DAAA,nXAACzB,8CAAMnJ,wMACkByK,wDACH/K,mEACEgL,iEACIF;AAJzC,AAAA,wHAAAI,+CAAAA,/JAACC,yDAAAA,mEAAAA;;AADhB,AAME,AAACC,uBAAU1H;;AACX,AAACsB,+CAAehF,WAAIwE,mBAAYsG,GAAGpH;;AACnC,yFAAA,2CAAA,6DAAA,kEAAA,0DAAA,qEAAA,wEAAA,mFAAA,IAAA,YAAA,7iBAACO,mDAAMO,mBAAYL,gBAAM2G,uGAAYC,mEACGD,2DACJE,8DACGtH,qPAEE,AAAC4B,uCAAY/C;;AAbxD;AAAA,AAcG,oEAAA,7DAACoB,oDAASD;;;;AArBjB,CAAA,AAAA,wGAAA,xGAAWyG,mHAsBW1K,EAAEA,MAAEqL,GAAGO,KAAKC;;AAtBlC,AAAA,YAAA,RAsBsB7L;AAtBtB,AAuBI,OAACwE,mDAAMO,mBAAY+G,iBAAOT;;;AAvB9B,CAAA,AAAA,2FAAA,3FAAWX,sGAwBF1K,EAAE+L;;AAxBX,AAAA,YAAA,RAwBS/L;AAxBT,AAyBI,AAAOgM,yCAAa,CAAG,AAAKA,wCACLD;;AACvB,IAAAE,aAAA,AAAA/B,cAAA,AAAAjK,gBAA4B8E;IAA5BmH,eAAA;IAAAC,eAAA;IAAAC,WAAA;;AAAA,AAAA,GAAA,AAAA,CAAAA,WAAAD;AAAA,IAAAE,aAAA,AAAAH,kDAAAE;gBAAA,AAAAzK,4CAAA0K,WAAA,IAAA,vEAAS/L;aAAT,AAAAqB,4CAAA0K,WAAA,IAAA,pEAAmB9I;AAAnB,AAAA,AACE,AAACO,gCAAKvD,WAAIwE,mBAAYzE,UAAUiD;;AADlC;AAAA,eAAA0I;eAAAC;eAAAC;eAAA,CAAAC,WAAA;;;;;;;AAAA,IAAAE,qBAAA,AAAApC,cAAA+B;AAAA,AAAA,GAAAK;AAAA,AAAA,IAAAL,iBAAAK;AAAA,AAAA,GAAA,AAAAC,6BAAAN;AAAA,IAAAO,kBAAA,AAAAC,sBAAAR;AAAA,AAAA,eAAA,AAAAS,qBAAAT;eAAAO;eAAA,AAAA9D,gBAAA8D;eAAA;;;;;;;AAAA,IAAAG,aAAA,AAAAC,gBAAAX;gBAAA,AAAAtK,4CAAAgL,WAAA,IAAA,vEAASrM;aAAT,AAAAqB,4CAAAgL,WAAA,IAAA,pEAAmBpJ;AAAnB,AAAA,AACE,AAACO,gCAAKvD,WAAIwE,mBAAYzE,UAAUiD;;AADlC;AAAA,eAAA,AAAAsJ,eAAAZ;eAAA;eAAA;eAAA;;;;;;;;AAAA;;;;;;;AA3BJ,CAAA,AAAA,kGAAA,WAAAxE,mBAAAC,qBAAAC,rJAAW+C;;AAAX,AAAA,IAAAjD,yBAAA;AAAA,AAAA,IAAAG,wBAAA,WAAAC;AAAA,AAAA,OAAAC,+BAAAJ,qBAAA,oBAAA,GAAA,IAAA,GAAAC,mBAAAE;;AAAA,AAAA,OAAAC,+BAAAJ,qBAAAE,sBAAA,4CAAA,KAAA,IAAAD,mBAAA,AAAAI,+CAAA,mFAAA,KAAAC,2BAAA,KAAA,EAAA,IAAA,AAAAA,sCAAA,CAAA,oDAAAzH,YAAA,OAAA,KAAAyH,2BAAA,KAAA,EAAA,IAAA,AAAAA,sCAAA,CAAA,mEAAAjD,oBAAA,eAAA8B;;;AAAA,CAAA,AAAA,0FAAA,WAAAoB,rGAAWyC;;AAAX,AAAA,IAAAzC,eAAA;AAAA,AAAA,YAAAC,qBAAA,IAAAD,aAAA,EAAA,mFAAA,oDAAA,2EAAA,kBAAApB,iBAAA,AAAAsB,oBAAAtB,iBAAA,AAAAuB;;;AAAA,CAAA,AAAA,kFAAA,WAAAC,7FAAWqC;;AAAX,AAAA,IAAArC,yBAAA;AAAA,AAAAC;;;AAAA,CAAA,AAAA,wFAAA,WAAAC,nGAAWmC;;AAAX,AAAA,IAAAnC,yBAAA;AAAA,AAAA,oDAAAhI,WAAAwE,mBAAAuD,cAAAzB,gBAAA2B,pGAAWkC;;;AAAX,CAAA,AAAA,sFAAA,WAAAjC,jGAAWiC;;AAAX,AAAA,IAAAjC,yBAAA;AAAA,AAAA,QAAA,IAAA,AAAAC,gBAAA7B;;;AAAA,CAAA,AAAA,kFAAA,WAAA8B,7FAAW+B;;AAAX,AAAA,IAAA/B,yBAAA;AAAA,AAAA,IAAAC,kBAAAJ;AAAA,AAAA,GAAA,GAAA,CAAAI,mBAAA;AAAAA;;AAAA,IAAAA,sBAAA,AAAA,WAAAC;AAAA,AAAA,QAAA,aAAA,AAAAC,8BAAAD;GAAAF;AAAA,AAAA,CAAAH,gBAAAI;;AAAAA;;;;AAAA,CAAA,AAAA,oFAAA,WAAAG,UAAAC,zGAAW0B;;AAAX,AAAA,IAAA3B,gBAAA;AAAA,AAAA,SAAA,GAAA,CAAAC,cAAA,aAAA,EAAA,CAAA,AAAAD,8BAAA,AAAAC,6BAAA,EAAA,AAAAC,6CAAA,AAAAF,kBAAA,AAAAC,qBAAA,EAAA,AAAAC,6CAAA,AAAAF,0BAAA,AAAAC,6BAAA,AAAAC,6CAAA,AAAAF,uBAAA,AAAAC;;;AAAA,CAAA,AAAA,mFAAA,WAAAE,mBAAAC,jHAAWuB;;AAAX,AAAA,IAAAxB,yBAAA;AAAA,AAAA,GAAA,AAAAE,0BAAA,iFAAA,wEAAA,wEAAAD;AAAA,OAAAE,+CAAA,AAAAC,qBAAA,AAAAC,6CAAA,mCAAAL,wBAAAZ,eAAAa;;AAAA,oDAAA5I,WAAAwE,mBAAAuD,cAAA,AAAAkB,oBAAA,AAAAH,+CAAAxC,gBAAAsC,kBAAA,zLAAWuB;;;;AAAX,CAAA,AAAA,wGAAA,WAAAjB,mBAAAhD,tIAAWiE;;AAAX,AAAA,IAAAjB,yBAAA;AAAA,AAAA,IAAAC,WAAAjD;IAAAiD,eAAA,EAAA,CAAAA,oBAAA9C,oBAAA,AAAA8C,aAAA;AAAA,AAAA,QAAAA;KAAA;KAAA;AAAA;;;;AAAA,OAAAN,0BAAAvC,gBAAAJ;;;;;AAAA,CAAA,AAAA,0FAAA,WAAAkD,mBAAAC,gBAAA3B,xIAAWyC;;AAAX,AAAA,IAAAf,yBAAA;AAAA,AAAA,IAAAE,cAAAC;IAAAC,cAAAH;AAAA,AAAA,oBAAA,CAAAC,4CAAAA,0CAAA,oDAAAE,eAAAF,sBAAA,oDAAAE;AAAA,oDAAA9B,SAAAlD,mBAAAuD,cAAAzB,gBAAA,lGAAW6D;;AAAX,oBAAA,CAAAb,4CAAAA,0CAAA,mEAAAE,eAAAF,sBAAA,mEAAAE;AAAA,oDAAAxJ,WAAA0H,SAAAK,cAAAzB,gBAAA,1FAAW6D;;AAAX,oDAAAnK,WAAAwE,mBAAAuD,cAAA,AAAA0B,8CAAAnD,gBAAA+C,gBAAA3B,UAAA,5KAAWyC;;;;;AAAX,CAAA,AAAA,oFAAA,WAAAT,/FAAWS;;AAAX,AAAA,IAAAT,yBAAA;AAAA,AAAA,OAAAC,cAAA,AAAAnC,+CAAA,mFAAA,KAAAoC,mBAAA,oDAAA5J,WAAA,OAAA,KAAA4J,mBAAA,mEAAApF,mBAAA,eAAA8B;;;AAAA,CAAA,AAAA,2FAAA,WAAAuD,mBAAAnC,zHAAWyC;;AAAX,AAAA,IAAAN,yBAAA;AAAA,AAAA,oDAAA7J,WAAAwE,mBAAAkD,SAAApB,gBAAA2B,/FAAWkC;;;AAAX,CAAA,AAAA,wFAAA,WAAAL,mBAAAC,tHAAWI;;AAAX,AAAA,IAAAL,yBAAA;AAAA,AAAA,GAAA,AAAAE,wBAAAD;AAAA,OAAAD,kEAAA,AAAAG,eAAAF,oBAAA,KAAA,AAAAE,eAAAF,oBAAA;;AAAA,OAAAlE,+CAAAqE,gBAAAJ,uBAAAC;;;;AAAA,CAAA,AAAAI,mDAAA;AAAA,AAAA,AAAA;;;AAAA,CAAA,AAAAA,yDAAA;;AAAA,CAAA,AAAAA,8DAAA,WAAAC;AAAA,AAAA,YAAAC,eAAA,KAAA,0CAAA,KAAA,IAAA;;;AAAA,CAAA,AAAAF,iEAAA,WAAAC,mBAAAE;AAAA,AAAA,OAAAC,iBAAAD,qBAAA;;;AAAA;;;+CAAA,/CAAWM,sGAAc5K,IAAIwE;AAA7B,AAAA,YAAA2F,wDAAA,KAAA,KAAA,1BAAyBnK,IAAIwE;;;AAA7B;;;kDAAA,0DAAAgG,5GAAWK;AAAX,AAAA,IAAAJ,uBAAA,iBAAAC,WAAA,AAAA5B,sDAAA0B,SAAA,sGAAA;AAAA,AAAA,GAAA,AAAAG,wBAAAH;AAAA,OAAAxB,6CAAA,mCAAA0B;;AAAAA;;;AAAA,AAAA,YAAAP,wCAAA,AAAA,kFAAAK,UAAA,AAAA,iGAAAA,UAAA,KAAA,AAAAvB,oBAAAwB,sBAAA;;;AAAAN,AA8BA,oCAAA,pCAAMoC,gFAAQ3L;AAAd,AACE,IAAM4D,cAAY,6CAAA,7CAACgI;AAAnB,AACE,OAAC5B,6CAAehK,UAAU4D","names":["zombie.scene.system.player/v1","js/module$node_modules$three$build$three_module.Vector3","zombie.scene.system.player/v2","zombie.scene.system.player/heading","zombie.scene.system.player/look-position","zombie.scene.system.player/move-right-vec","zombie.scene.system.player/move-up-vec","p__12904","map__12905","cljs.core/--destructure-map","cljs.core.get","zombie.scene.system.player/-guard-running?","state","_","cljs.core/deref","p__12906","map__12907","zombie.scene.system.player/-play-anim!","opts","entity-id","bus","zombie.util.messaging/send","zombie.scene.system.player/lower-body-fsm","cljs.core.partial","cljs.core/complement","zombie.scene.system.player/upper-body-fsm","zombie.scene.system.player/animation-fsm","G__12908","statecharts.core/machine","p__12909","map__12910","zombie.scene.system.player/set-upper-look-at!","event-bus","x","z","p__12911","map__12912","zombie.scene.system.player/set-lower-look-at!","p__12913","vec__12914","cljs.core.nth","zombie.scene.system.player/get-movement-heading","input-x","input-y","xvec","yvec","heading","zombie.scene.system.player/get-target-position-world","out","object","dist","zombie.scene.system.player/set-velocity!","speed","local-heading","zombie.util.threejs/vector3->tuple","p__12917","map__12918","zombie.scene.system.player/update-movement!","move-input-xy","move-speed","last-look-position","movement-heading","look-position","zombie.util.threejs/vector3->map","moving?","p__12921","map__12922","zombie.scene.system.player/update-weapon!","player","height","aim-pos","pos","dir","p__12924","map__12925","zombie.scene.system.player/tick","aiming?","dead?","anim-fsm","statecharts.core.send","aim-position","cljs.core.get_in","zombie.state.databases/input","world-position","zombie.assets.material/uniform-player-position","cljs.core.swap_BANG_","zombie.state.databases/player","cljs.core/assoc","map__12926","or__4212__auto__","cljs.core/not","zombie.scene.system.player/on-damaged","local-state","_payload","world-pos","zombie.util.threejs/world-position-as-tuple","zombie.scene.system.player/on-killed","zombie.util.timer/after","zombie.state.databases/game","cljs.core/assoc-in","zombie.scene.system.player/add-listeners!","zombie.util.messaging/on","p1__12935#","p1__12936#","and__4210__auto__","p1__12937#","zombie.scene.system.player/speed-track","base-speed","reagent.core/track!","adjust","G__12942","G__12943","threeagent.core/cursor","cljs.core.reduce","cljs.core/+","this__4461__auto__","k__4462__auto__","this__4463__auto__","k12947","else__4464__auto__","G__12979","cljs.core/Keyword","__extmap","this__4481__auto__","f__4482__auto__","init__4483__auto__","ret__4484__auto__","p__12980","vec__12981","k__4485__auto__","v__4486__auto__","cljs.core/PROTOCOL_SENTINEL","p__12984","map__12985","this__4476__auto__","writer__4477__auto__","opts__4478__auto__","pr-pair__4479__auto__","keyval__4480__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__12946","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4459__auto__","__meta","this__4456__auto__","__hash","this__4465__auto__","cljs.core/count","this__4457__auto__","h__4319__auto__","coll__4458__auto__","cljs.core/hash-unordered-coll","this12948","other12949","cljs.core._EQ_","this__4471__auto__","k__4472__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__4468__auto__","G__13003","this__4469__auto__","k__4470__auto__","pred__13004","cljs.core/keyword-identical?","expr__13005","cljs.core.assoc","this__4474__auto__","cljs.core/seq","cljs.core/MapEntry","this__4460__auto__","this__4466__auto__","entry__4467__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","zombie.scene.system.player/PlayerSystem","this__4505__auto__","cljs.core/List","writer__4506__auto__","cljs.core/-write","G__12978","extmap__4501__auto__","G__13007","cljs.core/record?","zombie.scene.system.player/->PlayerSystem","zombie.scene.system.player/map->PlayerSystem","id","obj","c","zombie.util.common/cursor","G__12986","statecharts.core/service","statecharts.core/start","_obj","_config","cljs.core/dissoc","delta-time","zombie.assets.material/uniform-time","seq__12987","chunk__12988","count__12989","i__12990","vec__12997","temp__5753__auto__","cljs.core/chunked-seq?","c__4638__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","vec__13000","cljs.core/first","cljs.core/next","zombie.scene.system.player/create","cljs.core.atom"],"sourcesContent":["(ns zombie.scene.system.player\r\n  (:require [threeagent.system :refer [ISystem]]\r\n            [threeagent.core :as th]\r\n            [reagent.core :as r]\r\n            [\"three\" :as three]\r\n            [statecharts.core :as fsm]\r\n            [zombie.util.common :as util]\r\n            [zombie.util.threejs :refer [vector3->map\r\n                                       world-position-as-tuple\r\n                                       vector3->tuple]]\r\n            [zombie.util.messaging :as message]\r\n            [zombie.util.timer :as timer]\r\n            [zombie.assets.material :refer [uniform-player-position\r\n                                          uniform-time]]\r\n            [zombie.state.databases :as db]))\r\n\r\n(def ^:private v1 (three/Vector3.))\r\n(def ^:private v2 (three/Vector3.))\r\n(def ^:private heading (three/Vector3.))\r\n(def ^:private look-position (three/Vector3.))\r\n(def ^:private move-right-vec (.normalize (three/Vector3. 0.5 0 -0.5)))\r\n(def ^:private move-up-vec (.normalize (three/Vector3. -0.5 0 -0.5)))\r\n\r\n(defn- -guard-running? [{:keys [state]} _]\r\n  (:moving? @state))\r\n\r\n(defn- -play-anim! [opts {:keys [entity-id bus]} _]\r\n  (message/send bus entity-id :animation/play opts))\r\n\r\n(def ^:private lower-body-fsm {:initial :start\r\n                               :on {:tick {}}\r\n                               :states {:start {:on {:start :idle}}\r\n                                        :idle {:entry (partial -play-anim! {:layer :lower\r\n                                                                            :animation :animation/character-idle-lower\r\n                                                                            :loop? true})\r\n                                               :on {:tick [{:target :running\r\n                                                            :guard -guard-running?}]}}\r\n                                        :running {:entry (partial -play-anim! {:layer :lower\r\n                                                                               :animation :animation/character-run-lower\r\n                                                                               :loop? true})\r\n                                                  :on {:tick [{:target :idle\r\n                                                               :guard (complement -guard-running?)}]}}}})\r\n\r\n(def ^:private upper-body-fsm {:initial :start\r\n                               :on {:tick {}\r\n                                    :start-aiming [:. :aiming]\r\n                                    :stop-aiming [{:target [:. :running]\r\n                                                   :guard -guard-running?}\r\n                                                  {:target [:. :idle]}]}\r\n                               :states {:start {:on {:start :idle}}\r\n                                        :idle {:entry (partial -play-anim! {:layer :upper\r\n                                                                            :sync-layer :lower\r\n                                                                            :animation :animation/character-idle-upper\r\n                                                                            :loop? true})\r\n                                               :on {:tick [{:target :running\r\n                                                            :guard -guard-running?}]}}\r\n                                        :aiming {:entry  (partial -play-anim! {:layer :upper\r\n                                                                               :animation :animation/character-aim\r\n                                                                               :loop? true})}\r\n                                        :running {:entry (partial -play-anim! {:layer :upper\r\n                                                                               :sync-layer :lower\r\n                                                                               :animation :animation/character-run-upper\r\n                                                                               :loop? true})\r\n                                                  :on {:tick [{:target :idle\r\n                                                               :guard (complement -guard-running?)}]}}}})\r\n\r\n(def ^:private animation-fsm\r\n  (fsm/machine\r\n   {:id :player-animation\r\n    :type :parallel\r\n    :regions {:lower-body lower-body-fsm\r\n              :upper-body upper-body-fsm}}))\r\n\r\n(defn- set-upper-look-at! [event-bus entity-id {:keys [x z]}]\r\n  (message/send event-bus entity-id :animation/set-upper-look-at-target [x 0.5 z]))\r\n\r\n(defn- set-lower-look-at! [event-bus entity-id {:keys [x z]}]\r\n  (message/send event-bus entity-id :animation/set-lower-look-at-target [x 0.5 z]))\r\n\r\n(defn- get-movement-heading [[input-x input-y]]\r\n  ;; WARNING: This assumes fixed camera angle\r\n  (let [xvec (-> (.copy v1 move-right-vec)\r\n                 (.multiplyScalar input-x))\r\n        yvec (-> (.copy v2 move-up-vec)\r\n                 (.multiplyScalar input-y))\r\n        heading (-> heading\r\n                    (.copy xvec)\r\n                    (.add yvec))]\r\n    (.normalize heading)))\r\n\r\n(defn- get-target-position-world [out ^three/Object3D object ^three/Vector3 heading dist]\r\n  (if (< 0 (.lengthSq heading))\r\n    (do\r\n      (.getWorldPosition object out)\r\n      (.copy v2 heading)\r\n      (.multiplyScalar v2 dist)\r\n      (.add out v2))\r\n    (do\r\n      (.getWorldPosition object out)\r\n      (.getWorldDirection object v2)\r\n      (.multiplyScalar v2 100)\r\n      (.add out v2))))\r\n\r\n\r\n(defn- set-velocity! [bus entity-id speed ^three/Vector3 local-heading]\r\n  ;; WARNING: This assumes local-heading is in world-space\r\n  (.multiplyScalar local-heading @speed)\r\n  (message/send bus entity-id :physics/set-velocity (vector3->tuple local-heading)))\r\n\r\n(defn- update-movement! [bus entity-id {:keys [^three/Object3D object\r\n                                               move-input-xy\r\n                                               move-speed\r\n                                               last-look-position]}]\r\n  (let [movement-heading (get-movement-heading move-input-xy)\r\n        look-position (vector3->map\r\n                       (get-target-position-world look-position object movement-heading 10.0))\r\n        moving? (< 0 (.lengthSq movement-heading))]\r\n    (set-velocity! bus entity-id move-speed movement-heading)\r\n    {:look-position (if moving? look-position last-look-position)\r\n     :moving? moving?}))\r\n\r\n(defn- update-weapon! [bus entity-id player {:keys [x z]}]\r\n  (let [height 1.5\r\n        object ^three/Object3D (:object player)\r\n        aim-pos (.set v1 x height z)\r\n        pos (.setY ^three/Vector3 (.getWorldPosition object v2)\r\n                   height)\r\n        dir (.normalize (.sub aim-pos pos))]\r\n    (message/send bus entity-id :weapon/set-aim {:world-position (vector3->tuple pos)\r\n                                                 :world-direction (vector3->tuple dir)})))\r\n\r\n(defn- tick [bus _ entity-id {:keys [aiming? dead? object anim-fsm\r\n                                     state]\r\n                              :as player}]\r\n  (fsm/send anim-fsm :tick)\r\n  (when-not dead?\r\n    (let [aim-position (get-in @db/input [:mouse :world-position])\r\n          world-position (.getWorldPosition object v1)]\r\n      (.copy uniform-player-position world-position)\r\n      (swap! db/player assoc\r\n             :lasersight-visible? aiming?\r\n             :world-position (vector3->tuple world-position))\r\n      (update-weapon! bus entity-id player aim-position)\r\n      (let [{:keys [look-position moving?]} (update-movement! bus entity-id player)]\r\n        (swap! state assoc\r\n               :last-look-position look-position\r\n               :moving? moving?)\r\n      ;; Lower body look\r\n        (if (or moving? (not aiming?))\r\n          (set-lower-look-at! bus entity-id look-position)\r\n          (set-lower-look-at! bus entity-id aim-position))\r\n        (if aiming?\r\n          (set-upper-look-at! bus entity-id aim-position)\r\n          (set-upper-look-at! bus entity-id look-position))))))\r\n\r\n(defn- on-damaged [bus local-state entity-id _payload]\r\n  (let [world-pos (world-position-as-tuple (get-in @local-state [entity-id :object]))]\r\n    (message/send bus :particles/spawn {:type :blood-fountain\r\n                                        :scale 0.5\r\n                                        :position world-pos})))\r\n\r\n(defn- on-killed [bus local-state entity-id _payload]\r\n  (when-not (get-in @local-state [entity-id :dead?])\r\n    (timer/after 5000 (fn []\r\n                        (swap! db/game assoc :active-view :title)))\r\n    (let [world-pos (world-position-as-tuple (get-in @local-state [entity-id :object]))]\r\n      (swap! local-state assoc-in [entity-id :dead?] true)\r\n      (message/send bus entity-id :physics/set-velocity [0 0 0])\r\n      (message/send bus entity-id :physics/disable {})\r\n      (message/send bus entity-id :animation/stop-all {})\r\n      (message/send bus entity-id :animation/play {:loop? false\r\n                                                   :clamp-when-finished? true\r\n                                                   :animation :animation/character-death})\r\n      (message/send bus :particles/spawn {:type :blood-fountain\r\n                                          :scale 1.5\r\n                                          :position world-pos}))))\r\n\r\n(defn- add-listeners! [bus local-state entity-id anim-fsm]\r\n\r\n  (message/on bus entity-id :entity/damaged (partial on-damaged bus local-state entity-id))\r\n  (message/on bus entity-id :entity/killed (partial on-killed bus local-state entity-id))\r\n  (message/on bus entity-id :weapon/fired (fn []\r\n                                            (message/send bus entity-id :animation/play {:loop? false\r\n                                                                                         :weight 1\r\n                                                                                         :animation :animation/character-shoot})))\r\n  (message/on bus\r\n              entity-id\r\n              [:input/action :aim] #(do (swap! local-state assoc-in [entity-id :aiming?] %)\r\n                                        (message/send bus entity-id :player/aiming? %)\r\n                                        (fsm/send anim-fsm (if %\r\n                                                             :start-aiming\r\n                                                             :stop-aiming))))\r\n  (message/on bus\r\n              entity-id\r\n              [:input/action :fire] #(when (and (get-in @local-state [entity-id :aiming?])\r\n                                                (not (get-in @local-state [entity-id :dead?])))\r\n                                       (swap! local-state assoc-in [entity-id :firing?] %)\r\n                                       (message/send bus entity-id :weapon/fire %)))\r\n  (message/on bus\r\n              entity-id\r\n              [:input/axis-update :move] #(swap! local-state assoc-in [entity-id :move-input-xy] %)))\r\n\r\n(defn- speed-track [base-speed]\r\n  (r/track! (fn []\r\n              (let [adjust (->> @(th/cursor db/player [:modifiers :speed])\r\n                                (reduce + 0))]\r\n                (+ base-speed adjust)))))\r\n\r\n(defrecord PlayerSystem [bus local-state]\r\n  ISystem\r\n  (init [_ _])\r\n  (destroy [_ _])\r\n  (on-entity-added [_ _ id\r\n                    ^three/Object3D obj\r\n                    {:keys [move-speed]}]\r\n    (let [c (util/cursor local-state [id])\r\n          anim-fsm (fsm/service (assoc animation-fsm\r\n                                       :context {:object obj\r\n                                                 :bus bus\r\n                                                 :state c\r\n                                                 :entity-id id}))]\r\n      (fsm/start anim-fsm)\r\n      (add-listeners! bus local-state id anim-fsm)\r\n      (swap! local-state assoc id {:object obj\r\n                                   :entity-id id\r\n                                   :state c\r\n                                   :anim-fsm anim-fsm\r\n                                   :move-input-xy [0 0]\r\n                                   :move-speed (speed-track move-speed)})\r\n      #(fsm/send anim-fsm :start)))\r\n  (on-entity-removed [_ _ id _obj _config]\r\n    (swap! local-state dissoc id))\r\n  (tick [_ delta-time]\r\n    (.setX uniform-time (+ (.-x uniform-time)\r\n                           delta-time))\r\n    (doseq [[entity-id player] @local-state]\r\n      (tick bus local-state entity-id player))))\r\n\r\n(defn create [event-bus]\r\n  (let [local-state (atom {})]\r\n    (->PlayerSystem event-bus local-state)))\r\n\r\n"]}