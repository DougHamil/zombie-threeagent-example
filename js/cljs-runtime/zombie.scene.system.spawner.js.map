{"version":3,"sources":["zombie/scene/system/spawner.cljs"],"mappings":"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","names":["js/zombie","js/zombie.scene","js/zombie.scene.system","js/zombie.scene.system.spawner","js/zombie.scene.system.spawner.*spawn-id*","zombie.scene.system.spawner/*spawn-id*","zombie.scene.system.spawner/next-id","zombie.scene.system.spawner/on-killed","entity-db","obj","spawnables","seq__13382","cljs.core/seq","chunk__13383","count__13384","i__13385","temp__5753__auto__","cljs.core/chunked-seq?","c__4638__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","spawnable","cljs.core.swap_BANG_","cljs.core/assoc","or__4212__auto__","cljs.core.assoc","zombie.util.threejs/world-position-as-tuple","cljs.core/PROTOCOL_SENTINEL","p__13386","p__13387","map__13388","cljs.core/--destructure-map","cljs.core.get","map__13389","this__4450__auto__","writer__4451__auto__","opt__4452__auto__","cljs.core/-write","zombie.scene.system.spawner/SpawnerSystem","zombie.scene.system.spawner/->SpawnerSystem","bus","local-state","_","key","on-death","zombie.util.messaging/on","cljs.core.partial","zombie.state.databases/entities","_obj","_cfg","zombie.scene.system.spawner/create","event-bus","cljs.core.atom"],"sourcesContent":["(ns zombie.scene.system.spawner\r\n  (:require [threeagent.system :refer [ISystem]]\r\n            [zombie.util.messaging :as message]\r\n            [zombie.util.threejs :refer [world-position-as-tuple]]\r\n            [zombie.state.databases :as db]))\r\n\r\n(defonce ^:private ^:dynamic *spawn-id* 0)\r\n\r\n(defn- next-id []\r\n  (set! *spawn-id* (inc *spawn-id*))\r\n  (str \"spawnable-\" *spawn-id*))\r\n  \r\n(defn- on-killed [entity-db obj spawnables]\r\n  (doseq [spawnable spawnables]\r\n    (swap! entity-db assoc (or (:id spawnable) (next-id))\r\n           (assoc spawnable\r\n                  :initial-position (world-position-as-tuple obj)))))\r\n  \r\n(deftype SpawnerSystem [bus local-state]\r\n  ISystem\r\n  (init [_ _])\r\n  (destroy [_ _])\r\n  (on-entity-added [_ {:keys [entity-db]} key obj {:keys [on-death]}]\r\n    (when on-death\r\n      (message/on bus key :entity/killed\r\n                  (partial on-killed (or entity-db db/entities) obj on-death))))\r\n  (on-entity-removed [_ _ key _obj _cfg])\r\n  (tick [_ _]))\r\n\r\n(defn create [event-bus]\r\n  (->SpawnerSystem event-bus (atom {})))\r\n"]}