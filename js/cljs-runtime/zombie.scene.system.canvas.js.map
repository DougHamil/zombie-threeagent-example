{"version":3,"sources":["zombie/scene/system/canvas.cljs"],"mappings":";AAIA,iDAAA,jDAAOA,0GAAgBC,OAAOC;AAA9B,AACE,IAAMC,IAAE,AAAcC;IAChBC,IAAE,AAAeD;IACjBE,cAAY,AAAoBF;AAFtC,AAGE,CAAM,AAASH,eAAQE;;AACvB,CAAM,AAAUF,gBAAQI;;AACxB,gGAAA,hGAACE,mDAAMC,6BAASC,oGAA2B,CAAGN,IAAEE;;AAChD,gGAAA,hGAACE,mDAAMC,6BAASC,kGAA0BH;;AAC1C,AAAgBJ;;AAAkBI;AAClC,OAAUJ,yBAAiBC,EAAEE;;AAEjC,AAAA;;;;;;;;AAAA,AAAA,CAAA,AAAA,+EAAAK,/EAASS;;AAAT,CAAA,AAAA,2FAAA,aAAAR,xGAASQ,sGAEAG;;AAFT,AAAA,IAAAV,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;aAAA,AAAAE,4CAAAF,eAAA,pEAEmBX;uBAFnB,AAAAa,4CAAAF,eAAA,9EAE0BV;AAF1B,AAAA,YAAA,RAESoB;AAFT,AAGI,IAAMC,cAAY,AAACC,gDAAQxB,+CAAeC,OAAOC;AAAjD,AACE,wBAAA,xBAACuB,iCAAoCF;;AACrC,sFAAA,tFAAChB,mDAAMc,mBAAYZ,4FAAuBc;;AAC1C,OAACA;;;AANP,CAAA,AAAA,8FAAA,9FAASJ,yGAOGG,EAAEA;;AAPd,AAAA,YAAA,RAOYA;AAPZ,AAQI,kCAAA,3BAACI,oCAAuC,AAAA,0GAAA,AAAAC,gBAAmBN;;;AAR/D,CAAA,AAAA,sGAAA,tGAASF,iHASWG,EAAEA,MAAEM,KAAKC,KAAKC;;AATlC,AAAA,YAAA,RASoBR;AATpB,AAAA;;;AAAA,CAAA,AAAA,wGAAA,xGAASH,mHAUaG,EAAEA,MAAEM,KAAKC,KAAKC;;AAVpC,AAAA,YAAA,RAUsBR;AAVtB,AAAA;;;AAAA,CAAA,AAAA,2FAAA,3FAASH,sGAWAG,EAAES;;AAXX,AAAA,YAAA,RAWST;AAXT,AAAA;;;AAAA,CAAA,mDAAA,nDAASH;AAAT,AAAA,AAAA;;;AAAA,CAAA,yDAAA,zDAASA;;AAAT,CAAA,4DAAA,5DAASA;;AAAT,CAAA,iEAAA,WAAAJ,mBAAAC,qBAAAC,pHAASE;AAAT,AAAA,OAAAD,iBAAAF,qBAAA;;;AAAA;;;+CAAA,/CAASI,sGAAcC;AAAvB,AAAA,YAAAF,wCAAuBE;;;AAAdF,AAaT,oCAAA,pCAAMa;AAAN,AACE,OAACZ,6CAAe,6CAAA,7CAACa","names":["zombie.scene.system.canvas/resize-canvas!","canvas","threejs-renderer","w","js/window","h","pixel-ratio","cljs.core.swap_BANG_","zombie.state.databases/scene","cljs.core/assoc","cljs.core/PROTOCOL_SENTINEL","p__10983","map__10984","cljs.core/--destructure-map","cljs.core.get","this__4450__auto__","writer__4451__auto__","opt__4452__auto__","cljs.core/-write","zombie.scene.system.canvas/CanvasSystem","zombie.scene.system.canvas/->CanvasSystem","local-state","_","listener-fn","cljs.core.partial","js/window.addEventListener","js/window.removeEventListener","cljs.core/deref","_key","_obj","_config","_delta-time","zombie.scene.system.canvas/create","cljs.core.atom"],"sourcesContent":["(ns zombie.scene.system.canvas\r\n  (:require [threeagent.system :refer [ISystem]]\r\n            [zombie.state.databases :as db]))\r\n\r\n(defn- resize-canvas! [canvas threejs-renderer]\r\n  (let [w (.-innerWidth js/window)\r\n        h (.-innerHeight js/window)\r\n        pixel-ratio (.-devicePixelRatio js/window)]\r\n    (set! (.-width canvas) w)\r\n    (set! (.-height canvas) h)\r\n    (swap! db/scene assoc :screen-aspect-ratio (/ w h))\r\n    (swap! db/scene assoc :screen-pixel-ratio pixel-ratio)\r\n    (.setPixelRatio threejs-renderer) pixel-ratio\r\n    (.setSize threejs-renderer w h)))\r\n\r\n(deftype CanvasSystem [local-state]\r\n  ISystem\r\n  (init [_ {:keys [canvas threejs-renderer]}]\r\n    (let [listener-fn (partial resize-canvas! canvas threejs-renderer)]\r\n      (js/window.addEventListener \"resize\" listener-fn)\r\n      (swap! local-state assoc :resize-listener listener-fn)\r\n      (listener-fn)))\r\n  (destroy [_ _]\r\n    (js/window.removeEventListener \"resize\" (:resize-listener @local-state)))\r\n  (on-entity-added [_ _ _key _obj _config])\r\n  (on-entity-removed [_ _ _key _obj _config])\r\n  (tick [_ _delta-time]))\r\n\r\n(defn create []\r\n  (->CanvasSystem (atom {})))\r\n"]}