{"version":3,"sources":["threeagent/core.cljs"],"mappings":";AAMA,AAAKA,uBAAKC;AACV,AAAKC,yBAAOC;AACZ,AAAKC,wBAAMC;AAEX,AAAA;;;;;;;;;;;;yBAAA,iCAAAC,1DAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,qDAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,qDAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,uDAAA,vDAAMD,kEAWFE,QAAQC;AAXZ,AAWsB,6EAAA,tEAACC,qDAAOF,QAAQC;;;AAXtC,CAAA,uDAAA,vDAAMH,kEAYFE,QAAQC,SAASE;AAZrB,AAY2B,OAACC,6BAAaJ,QAAQC,SAASE;;;AAZ1D,CAAA,iDAAA,jDAAML;;AAAN","names":["threeagent.core/atom","reagent.ratom/atom","threeagent.core/cursor","reagent.ratom/cursor","threeagent.core/track","reagent.ratom/track","var_args","G__10306","threeagent.core/render","js/Error","root-fn","dom-root","threeagent.core.render","opts","threeagent.impl.scene/render"],"sourcesContent":["(ns threeagent.core\n  (:refer-clojure :exclude [atom])\n  (:require [threeagent.impl.scene :as scene]\n            [threeagent.impl.types :refer [Context]]\n            [reagent.ratom :as ratom]))\n\n(def atom ratom/atom)\n(def cursor ratom/cursor)\n(def track ratom/track)\n\n(defn render\n  \"Renders the threeagent scene at the specified `dom-root` using\n   the `root-fn` as the root component function.\n\n   Additional configuration can be provided through the `opts` parameter\n\n   Example:\n   ```clojure\n    (threeagent/render my-root-fn (js/document.getElementById \\\"app\\\"))\n   ```\n  \"\n  ([root-fn dom-root] (render root-fn dom-root {}))\n  ([root-fn dom-root opts] (scene/render root-fn dom-root opts)))\n\n"]}