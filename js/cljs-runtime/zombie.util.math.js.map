{"version":3,"sources":["zombie/util/math.cljs"],"mappings":";AAEA,GAAA,QAAAA,mCAAAC,wCAAAC,6CAAAC;AAAA;AAAA,AAAA,AAASC,sBAAG,WAAA,VAAGC;;AACf,GAAA,QAAAL,mCAAAC,wCAAAC,6CAAAI;AAAA;AAAA,AAAA,AAASC,uBAAI,WAAA,VAAGF;;AAChB,GAAA,QAAAL,mCAAAC,wCAAAC,6CAAAM;AAAA;AAAA,AAAA,AAASC,uBAAI,WAAA,VAAGJ;;AAEhB,4BAAA,oCAAAK,SAAAC,zEAAMI;AAAN,AAAA,IAAAH,aAAAF;SAAA,AAAAG,4CAAAD,WAAA,IAAA,hEAAiBI;SAAjB,AAAAH,4CAAAD,WAAA,IAAA,hEAAoBK;SAApB,AAAAJ,4CAAAD,WAAA,IAAA,hEAAuBM;IAAvBJ,aAAAH;SAAA,AAAAE,4CAAAC,WAAA,IAAA,hEAA4BK;SAA5B,AAAAN,4CAAAC,WAAA,IAAA,hEAA+BM;SAA/B,AAAAP,4CAAAC,WAAA,IAAA,hEAAkCO;AAAlC,AACE,IAAMC,KAAG,CAAGH,KAAGH;IACTO,KAAG,CAAGH,KAAGH;IACTO,KAAG,CAAGH,KAAGH;AAFf,AAGE,OAACO,UAAU,CAAA,CAAG,CAAGH,KAAGA,MACN,CAAGC,KAAGA,OACN,CAAGC,KAAGA;;AAExB,6BAAA,qCAAAE,SAAAC,3EAAMG;AAAN,AAAA,IAAAF,aAAAF;SAAA,AAAAb,4CAAAe,WAAA,IAAA,hEAAkBZ;SAAlB,AAAAH,4CAAAe,WAAA,IAAA,hEAAqBX;SAArB,AAAAJ,4CAAAe,WAAA,IAAA,hEAAwBV;QAAxBU,JAA+BG;IAA/BF,aAAAF;SAAA,AAAAd,4CAAAgB,WAAA,IAAA,hEAAmCV;SAAnC,AAAAN,4CAAAgB,WAAA,IAAA,hEAAsCT;SAAtC,AAAAP,4CAAAgB,WAAA,IAAA,hEAAyCR;QAAzCQ,JAAgDG;AAAhD,AACE,IAAMV,KAAG,CAAGH,KAAGH;IACTO,KAAG,CAAGH,KAAGH;IACTO,KAAG,CAAGH,KAAGH;IACTe,OAAK,AAAClB,0BAASgB,EAAEC;AAHvB,AAAA,0FAIG,CAAGV,KAAGW,MACN,CAAGV,KAAGU,MACN,CAAGT,KAAGS","names":["js/zombie","js/zombie.util","js/zombie.util.math","js/zombie.util.math.pi","zombie.util.math/pi","js/Math.PI","js/zombie.util.math.pi2","zombie.util.math/pi2","js/zombie.util.math.pi4","zombie.util.math/pi4","p__10521","p__10522","vec__10523","cljs.core.nth","vec__10526","zombie.util.math/distance","ax","ay","az","bx","by","bz","dx","dy","dz","Math/sqrt","p__10529","p__10530","vec__10531","vec__10534","zombie.util.math/direction","a","b","dist"],"sourcesContent":["(ns zombie.util.math)\r\n\r\n(defonce pi (+ js/Math.PI 0))\r\n(defonce pi2 (/ js/Math.PI 2.0))\r\n(defonce pi4 (/ js/Math.PI 4.0))\r\n\r\n(defn distance [[ax ay az] [bx by bz]]\r\n  (let [dx (- bx ax)\r\n        dy (- by ay)\r\n        dz (- bz az)]\r\n    (Math/sqrt (+ (* dx dx)\r\n                  (* dy dy)\r\n                  (* dz dz)))))\r\n\r\n(defn direction [[ax ay az :as a] [bx by bz :as b]]\r\n  (let [dx (- bx ax)\r\n        dy (- by ay)\r\n        dz (- bz az)\r\n        dist (distance a b)]\r\n    [(/ dx dist)\r\n     (/ dy dist)\r\n     (/ dz dist)]))\r\n"]}