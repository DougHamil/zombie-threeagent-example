{
"version":3,
"file":"module$node_modules$matter_js$build$matter.js",
"lineCount":245,
"mappings":"AAAAA,cAAA,CAAA,0CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,eAAhB,CAAuBC,gBAAvB,CAAgC,CA4BtGC,SAAyC,CAACC,IAAD,CAAOC,OAAP,CAAgB,CACnC,QAAtB,GAAG,MAAOH,iBAAV,EAAoD,QAApD,GAAkC,MAAOD,gBAAzC,CACCA,eAAOC,CAAAA,OADR,CACkBG,OAAA,EADlB,CAE0B,UAArB,GAAG,MAAOC,OAAV,EAAmCA,MAAOC,CAAAA,GAA1C,CACJD,MAAA,CAAO,QAAP,CAAiB,EAAjB,CAAqBD,OAArB,CADI,CAEsB,QAAtB,GAAG,MAAOH,iBAAV,CACJA,gBAAA,CAAA,MADI,CACgBG,OAAA,EADhB,CAGJD,IAAA,CAAA,MAHI,CAGaC,OAAA,EARuC,CAAzDF,CAAD,CASG,IATH,CASS,QAAQ,EAAG,CACpB,MAAiB,SAAQ,CAACK,OAAD,CAAU,CAKzBC,QAASA,oBAAmB,CAACC,QAAD,CAAW,CAGtC,GAAGC,gBAAA,CAAiBD,QAAjB,CAAH,CACC,MAAOC,iBAAA,CAAiBD,QAAjB,CAA2BR,CAAAA,OAGnC;IAAID,OAASU,gBAAA,CAAiBD,QAAjB,CAATT,CAAsC,CACzCW,EAAGF,QADsC,CAEzCG,EAAG,CAAA,CAFsC,CAGzCX,QAAS,EAHgC,CAO1CM,QAAA,CAAQE,QAAR,CAAkBI,CAAAA,IAAlB,CAAuBb,MAAOC,CAAAA,OAA9B,CAAuCD,MAAvC,CAA+CA,MAAOC,CAAAA,OAAtD,CAA+DO,mBAA/D,CAGAR,OAAOY,CAAAA,CAAP,CAAW,CAAA,CAGX,OAAOZ,OAAOC,CAAAA,OApBwB,CAHvC,IAAIS,iBAAmB,EA4BvBF,oBAAoBM,CAAAA,CAApB,CAAwBP,OAGxBC,oBAAoBO,CAAAA,CAApB,CAAwBL,gBAGxBF,oBAAoBQ,CAAAA,CAApB,CAAwBC,QAAQ,CAAChB,OAAD,CAAUiB,IAAV,CAAgBC,MAAhB,CAAwB,CACnDX,mBAAoBY,CAAAA,CAApB,CAAsBnB,OAAtB,CAA+BiB,IAA/B,CAAJ,EACCG,MAAOC,CAAAA,cAAP,CAAsBrB,OAAtB,CAA+BiB,IAA/B,CAAqC,CAAEK,WAAY,CAAA,CAAd,CAAoBC,IAAKL,MAAzB,CAArC,CAFsD,CAOxDX,oBAAoBiB,CAAAA,CAApB,CAAwBC,QAAQ,CAACzB,OAAD,CAAU,CACpB,WAArB,GAAG,MAAO0B,OAAV,EAAoCA,MAAOC,CAAAA,WAA3C;AACCP,MAAOC,CAAAA,cAAP,CAAsBrB,OAAtB,CAA+B0B,MAAOC,CAAAA,WAAtC,CAAmD,CAAEC,MAAO,QAAT,CAAnD,CAEDR,OAAOC,CAAAA,cAAP,CAAsBrB,OAAtB,CAA+B,YAA/B,CAA6C,CAAE4B,MAAO,CAAA,CAAT,CAA7C,CAJyC,CAY1CrB,oBAAoBsB,CAAAA,CAApB,CAAwBC,QAAQ,CAACF,KAAD,CAAQG,IAAR,CAAc,CAC1CA,IAAH,CAAU,CAAV,GAAaH,KAAb,CAAqBrB,mBAAA,CAAoBqB,KAApB,CAArB,CAEA,IADGG,IACH,CADU,CACV,EAAIA,IAAJ,CAAW,CAAX,EAAkC,QAAlC,GAAiB,MAAOH,MAAxB,EAA8CA,KAA9C,EAAuDA,KAAMI,CAAAA,UAA7D,CAAyE,MAAOJ,MAChF,KAAIK,GAAKb,MAAOc,CAAAA,MAAP,CAAc,IAAd,CACT3B,oBAAoBiB,CAAAA,CAApB,CAAsBS,EAAtB,CACAb,OAAOC,CAAAA,cAAP,CAAsBY,EAAtB,CAA0B,SAA1B,CAAqC,CAAEX,WAAY,CAAA,CAAd,CAA2BM,KAA3B,CAArC,CACA,IAAGG,IAAH,CAAU,CAAV,EAA+B,QAA/B,EAAe,MAAOH,MAAtB,CAAyC,IAAIO,IAAIA,YAAR,GAAeP,MAAf,CAAsBrB,mBAAoBQ,CAAAA,CAApB,CAAsBkB,EAAtB,CAA0BE,YAA1B;AAA+B,QAAQ,CAACA,GAAD,CAAM,CAAE,MAAOP,MAAA,CAAMO,GAAN,CAAT,CAAuBC,CAAAA,IAArC,CAA0C,IAA1C,CAAgDD,YAAhD,CAA/B,CAC/D,OAAOF,GARsC,CAY9C1B,oBAAoB8B,CAAAA,CAApB,CAAwBC,QAAQ,CAACvC,MAAD,CAAS,CACxC,IAAImB,OAASnB,MAAA,EAAUA,MAAOiC,CAAAA,UAAjB,CACZO,QAAmB,EAAG,CAAE,MAAOxC,OAAA,CAAO,SAAP,CAAT,CADV,CAEZyC,QAAyB,EAAG,CAAE,MAAOzC,OAAT,CAC7BQ,oBAAoBQ,CAAAA,CAApB,CAAsBG,MAAtB,CAA8B,GAA9B,CAAmCA,MAAnC,CACA,OAAOA,OALiC,CASzCX,oBAAoBY,CAAAA,CAApB,CAAwBsB,QAAQ,CAACC,MAAD,CAASC,QAAT,CAAmB,CAAE,MAAOvB,OAAOwB,CAAAA,SAAUC,CAAAA,cAAejC,CAAAA,IAAhC,CAAqC8B,MAArC,CAA6CC,QAA7C,CAAT,CAGnDpC,oBAAoBuC,CAAAA,CAApB,CAAwB,EAIxB,OAAOvC,oBAAA,CAAoBA,mBAAoBwC,CAAAA,CAAxC,CAA4C,EAA5C,CAnFkB,CAAnB,CAsFN,CAEH,QAAQ,CAAChD,MAAD,CAASC,OAAT,CAAkB,CAQjC,IAAIgD,OAAS,EAEbjD,OAAOC,CAAAA,OAAP;AAAiBgD,MAEhB,UAAQ,EAAG,CAERA,MAAOC,CAAAA,OAAP,CAAiB,CACjBD,OAAOE,CAAAA,KAAP,CAAe,CACfF,OAAOG,CAAAA,aAAP,CAAuB,CAAE,IAAIC,IAC7BJ,OAAOK,CAAAA,WAAP,CAAqB,EACrBL,OAAOM,CAAAA,OAAP,CAAiB,IASjBN,OAAOO,CAAAA,MAAP,CAAgBC,QAAQ,CAACC,GAAD,CAAMC,IAAN,CAAY,CAKhC,GAAoB,SAApB,GAAI,MAAOA,KAAX,CAA+B,CAC3B,IAAAC,UAAY,CACZ,KAAAC,UAAYF,IAFe,CAA/B,IAIIC,UACA,CADY,CACZ,CAAAC,SAAA,CAAY,CAAA,CAGhB,KAAA,CAAwBlD,SAAxB,CAA4BmD,SAAUC,CAAAA,MAAtC,CAA8CpD,SAAA,EAA9C,CAAmD,CAC/C,IAAIqD,OAASF,SAAA,CAAUnD,SAAV,CAEb,IAAIqD,MAAJ,CACI,IAAKC,IAAIA,IAAT,GAAiBD,OAAjB,CACQH,SAAJ,EAAiBG,MAAA,CAAOC,IAAP,CAAjB,EAAiCD,MAAA,CAAOC,IAAP,CAAaC,CAAAA,WAA9C,GAA8D7C,MAA9D,CACSqC,GAAA,CAAIO,IAAJ,CAAL,EAAkBP,GAAA,CAAIO,IAAJ,CAAUC,CAAAA,WAA5B,GAA4C7C,MAA5C,CAIIqC,GAAA,CAAIO,IAAJ,CAJJ,CAIgBD,MAAA,CAAOC,IAAP,CAJhB,EACIP,GAAA,CAAIO,IAAJ,CACA,CADYP,GAAA,CAAIO,IAAJ,CACZ;AADyB,EACzB,CAAAhB,MAAOO,CAAAA,MAAP,CAAcE,GAAA,CAAIO,IAAJ,CAAd,CAAyBJ,SAAzB,CAAoCG,MAAA,CAAOC,IAAP,CAApC,CAFJ,CADJ,CAQIP,GAAA,CAAIO,IAAJ,CARJ,CAQgBD,MAAA,CAAOC,IAAP,CAbuB,CAmBnD,MAAOP,IAhCyB,CA0CpCT,OAAOkB,CAAAA,KAAP,CAAeC,QAAQ,CAACV,GAAD,CAAMC,IAAN,CAAY,CAC/B,MAAOV,OAAOO,CAAAA,MAAP,CAAc,EAAd,CAAkBG,IAAlB,CAAwBD,GAAxB,CADwB,CAUnCT,OAAOoB,CAAAA,IAAP,CAAcC,QAAQ,CAACZ,GAAD,CAAM,CACxB,GAAIrC,MAAOgD,CAAAA,IAAX,CACI,MAAOhD,OAAOgD,CAAAA,IAAP,CAAYX,GAAZ,CAGX,KAAIW,KAAO,EAAX,CACSjC,GAAT,KAASA,GAAT,GAAgBsB,IAAhB,CACIW,IAAKE,CAAAA,IAAL,CAAUnC,GAAV,CACJ,OAAOiC,KARiB,CAiB5BpB,OAAOuB,CAAAA,MAAP,CAAgBC,QAAQ,CAACf,GAAD,CAAM,CAC1B,IAAIc,OAAS,EAEb,IAAInD,MAAOgD,CAAAA,IAAX,CAAiB,CAEb,IADA,IAAIA,KAAOhD,MAAOgD,CAAAA,IAAP,CAAYX,GAAZ,CAAX,CACS/C,EAAI,CAAb,CAAgBA,CAAhB,CAAoB0D,IAAKN,CAAAA,MAAzB,CAAiCpD,CAAA,EAAjC,CACI6D,MAAOD,CAAAA,IAAP,CAAYb,GAAA,CAAIW,IAAA,CAAK1D,CAAL,CAAJ,CAAZ,CAEJ,OAAO6D,OALM,CASjB,IAASpC,IAAT,GAAgBsB,IAAhB,CACIc,MAAOD,CAAAA,IAAP,CAAYb,GAAA,CAAItB,IAAJ,CAAZ,CACJ,OAAOoC,OAdmB,CA0B9BvB,OAAOzB,CAAAA,GAAP,CAAakD,QAAQ,CAAChB,GAAD;AAAMiB,IAAN,CAAYC,KAAZ,CAAmBC,GAAnB,CAAwB,CACzCF,IAAA,CAAOA,IAAKG,CAAAA,KAAL,CAAW,GAAX,CAAgBC,CAAAA,KAAhB,CAAsBH,KAAtB,CAA6BC,GAA7B,CAEP,KAASlE,KAAT,CAAa,CAAb,CAAgBA,KAAhB,CAAoBgE,IAAKZ,CAAAA,MAAzB,CAAiCpD,KAAjC,EAAsC,CAAtC,CACI+C,GAAA,CAAMA,GAAA,CAAIiB,IAAA,CAAKhE,KAAL,CAAJ,CAGV,OAAO+C,IAPkC,CAoB7CT,OAAO+B,CAAAA,GAAP,CAAaC,QAAQ,CAACvB,GAAD,CAAMiB,IAAN,CAAYO,GAAZ,CAAiBN,KAAjB,CAAwBC,GAAxB,CAA6B,CAC1CM,KAAAA,CAAQR,IAAKG,CAAAA,KAAL,CAAW,GAAX,CAAgBC,CAAAA,KAAhB,CAAsBH,KAAtB,CAA6BC,GAA7B,CAEZ,OADA5B,OAAOzB,CAAAA,GAAP,CAAWkC,GAAX,CAAgBiB,IAAhB,CAAsB,CAAtB,CAAyB,EAAzB,CAAA,CAA6BQ,KAAA,CAAMA,KAAMpB,CAAAA,MAAZ,CAAqB,CAArB,CAA7B,CACA,CADwDmB,GAFV,CAalDjC,OAAOmC,CAAAA,OAAP,CAAiBC,QAAQ,CAACC,KAAD,CAAQ,CAC7B,IAAK,IAAI3E,EAAI2E,KAAMvB,CAAAA,MAAVpD,CAAmB,CAA5B,CAAmC,CAAnC,CAA+BA,CAA/B,CAAsCA,CAAA,EAAtC,CAA2C,CACvC,IAAI4E,EAAIC,IAAKC,CAAAA,KAAL,CAAWxC,MAAOyC,CAAAA,MAAP,EAAX,EAA8B/E,CAA9B,CAAkC,CAAlC,EAAR,CACIgF,KAAOL,KAAA,CAAM3E,CAAN,CACX2E,MAAA,CAAM3E,CAAN,CAAA,CAAW2E,KAAA,CAAMC,CAAN,CACXD,MAAA,CAAMC,CAAN,CAAA,CAAWI,IAJ4B,CAM3C,MAAOL,MAPsB,CAiBjCrC,OAAO2C,CAAAA,MAAP,CAAgBC,QAAQ,CAACC,OAAD,CAAU,CAC9B,MAAOA,QAAA,CAAQN,IAAKC,CAAAA,KAAL,CAAWxC,MAAOyC,CAAAA,MAAP,EAAX;AAA6BI,OAAQ/B,CAAAA,MAArC,CAAR,CADuB,CAUlCd,OAAO8C,CAAAA,SAAP,CAAmBC,QAAQ,CAACtC,GAAD,CAAM,CAC7B,MAA2B,WAA3B,GAAI,MAAOuC,YAAX,CACWvC,GADX,WAC0BuC,YAD1B,CAIO,CAAC,EAAEvC,GAAF,EAASA,GAAIwC,CAAAA,QAAb,EAAyBxC,GAAIyC,CAAAA,QAA7B,CALqB,CAcjClD,OAAOmD,CAAAA,OAAP,CAAiBC,QAAQ,CAAC3C,GAAD,CAAM,CAC3B,MAA+C,gBAA/C,GAAOrC,MAAOwB,CAAAA,SAAUyD,CAAAA,QAASzF,CAAAA,IAA1B,CAA+B6C,GAA/B,CADoB,CAU/BT,OAAOsD,CAAAA,UAAP,CAAoBC,QAAQ,CAAC9C,GAAD,CAAM,CAC9B,MAAsB,UAAtB,GAAO,MAAOA,IADgB,CAUlCT,OAAOwD,CAAAA,aAAP,CAAuBC,QAAQ,CAAChD,GAAD,CAAM,CACjC,MAAsB,QAAtB,GAAO,MAAOA,IAAd,EAAkCA,GAAIQ,CAAAA,WAAtC,GAAsD7C,MADrB,CAUrC4B,OAAO0D,CAAAA,QAAP,CAAkBC,QAAQ,CAAClD,GAAD,CAAM,CAC5B,MAA8B,iBAA9B,GAAO4C,QAASzF,CAAAA,IAAT,CAAc6C,GAAd,CADqB,CAYhCT,OAAO4D,CAAAA,KAAP,CAAeC,QAAQ,CAACjF,KAAD,CAAQkF,GAAR;AAAaC,GAAb,CAAkB,CACrC,MAAInF,MAAJ,CAAYkF,GAAZ,CACWA,GADX,CAEIlF,KAAJ,CAAYmF,GAAZ,CACWA,GADX,CAEOnF,KAL8B,CAczCoB,OAAOgE,CAAAA,IAAP,CAAcC,QAAQ,CAACrF,KAAD,CAAQ,CAC1B,MAAe,EAAR,CAAAA,KAAA,CAAY,EAAZ,CAAiB,CADE,CAU9BoB,OAAOkE,CAAAA,GAAP,CAAaC,QAAQ,EAAG,CACpB,GAAsB,WAAtB,GAAI,MAAOC,OAAX,EAAqCA,MAAOC,CAAAA,WAA5C,CAAyD,CACrD,GAAID,MAAOC,CAAAA,WAAYH,CAAAA,GAAvB,CACI,MAAOE,OAAOC,CAAAA,WAAYH,CAAAA,GAAnB,EACJ,IAAIE,MAAOC,CAAAA,WAAYC,CAAAA,SAAvB,CACH,MAAOF,OAAOC,CAAAA,WAAYC,CAAAA,SAAnB,EAJ0C,CAQzD,MAAIlE,KAAK8D,CAAAA,GAAT,CACW9D,IAAK8D,CAAAA,GAAL,EADX,CAIQ,IAAI9D,IAJZ,CAIsBJ,MAAOG,CAAAA,aAbT,CAwBxBH,OAAOyC,CAAAA,MAAP,CAAgB8B,QAAQ,CAACT,GAAD,CAAMC,GAAN,CAAW,CAC/BD,GAAA,CAAsB,WAAhB,GAAC,MAAOA,IAAR,CAA+BA,GAA/B,CAAqC,CAO3C9D,OAAOE,CAAAA,KAAP,EAA+B,IAA/B,CAAgBF,MAAOE,CAAAA,KAAvB,CAAsC,KAAtC,EAA+C,MAL/C,OAAO4D,IAAP,CAMO9D,MAAOE,CAAAA,KANd,CAMsB,MANtB,GADsB,WAAhB6D;AAAC,MAAOA,IAARA,CAA+BA,GAA/BA,CAAqC,CAC3C,EAAsCD,GAAtC,CAH+B,CAkBnC9D,OAAOwE,CAAAA,aAAP,CAAuBC,QAAQ,CAACC,WAAD,CAAc,CACzCA,WAAA,CAAcA,WAAYC,CAAAA,OAAZ,CAAoB,GAApB,CAAwB,EAAxB,CAEY,EAA1B,EAAID,WAAY5D,CAAAA,MAAhB,GACI4D,WADJ,CACkBA,WAAYE,CAAAA,MAAZ,CAAmB,CAAnB,CADlB,CAC0CF,WAAYE,CAAAA,MAAZ,CAAmB,CAAnB,CAD1C,CAEkBF,WAAYE,CAAAA,MAAZ,CAAmB,CAAnB,CAFlB,CAE0CF,WAAYE,CAAAA,MAAZ,CAAmB,CAAnB,CAF1C,CAGkBF,WAAYE,CAAAA,MAAZ,CAAmB,CAAnB,CAHlB,CAG0CF,WAAYE,CAAAA,MAAZ,CAAmB,CAAnB,CAH1C,CAMA,OAAOC,SAAA,CAASH,WAAT,CAAsB,EAAtB,CATkC,CA0B7C1E,OAAO8E,CAAAA,QAAP,CAAkB,CAQlB9E,OAAO+E,CAAAA,GAAP,CAAaC,QAAQ,EAAG,CAChBC,OAAJ,EAAiC,CAAjC,CAAejF,MAAO8E,CAAAA,QAAtB,EAAyD,CAAzD,EAAsC9E,MAAO8E,CAAAA,QAA7C,EACIG,OAAQF,CAAAA,GAAIG,CAAAA,KAAZ,CAAkBD,OAAlB,CAA2B,CAAC,YAAD,CAAeE,CAAAA,MAAf,CAAsBC,KAAMxF,CAAAA,SAAUkC,CAAAA,KAAMlE,CAAAA,IAAtB,CAA2BiD,SAA3B,CAAtB,CAA3B,CAFgB,CAYxBb,OAAOqF,CAAAA,IAAP,CAAcC,QAAQ,EAAG,CACjBL,OAAJ;AAAiC,CAAjC,CAAejF,MAAO8E,CAAAA,QAAtB,EAAyD,CAAzD,EAAsC9E,MAAO8E,CAAAA,QAA7C,EACIG,OAAQI,CAAAA,IAAKH,CAAAA,KAAb,CAAmBD,OAAnB,CAA4B,CAAC,YAAD,CAAeE,CAAAA,MAAf,CAAsBC,KAAMxF,CAAAA,SAAUkC,CAAAA,KAAMlE,CAAAA,IAAtB,CAA2BiD,SAA3B,CAAtB,CAA5B,CAFiB,CAYzBb,OAAOuF,CAAAA,IAAP,CAAcC,QAAQ,EAAG,CACjBP,OAAJ,EAAiC,CAAjC,CAAejF,MAAO8E,CAAAA,QAAtB,EAAyD,CAAzD,EAAsC9E,MAAO8E,CAAAA,QAA7C,EACIG,OAAQM,CAAAA,IAAKL,CAAAA,KAAb,CAAmBD,OAAnB,CAA4B,CAAC,YAAD,CAAeE,CAAAA,MAAf,CAAsBC,KAAMxF,CAAAA,SAAUkC,CAAAA,KAAMlE,CAAAA,IAAtB,CAA2BiD,SAA3B,CAAtB,CAA5B,CAFiB,CAWzBb,OAAOyF,CAAAA,QAAP,CAAkBC,QAAQ,EAAG,CACzB,IAAIC,QAAUP,KAAMxF,CAAAA,SAAUkC,CAAAA,KAAMlE,CAAAA,IAAtB,CAA2BiD,SAA3B,CAAsC+E,CAAAA,IAAtC,CAA2C,GAA3C,CAET5F,OAAOK,CAAAA,WAAP,CAAmBsF,OAAnB,CAAL,GACI3F,MAAOuF,CAAAA,IAAP,CAAYI,OAAZ,CACA,CAAA3F,MAAOK,CAAAA,WAAP,CAAmBsF,OAAnB,CAAA,CAA8B,CAAA,CAFlC,CAHyB,CAkB7B3F,OAAO6F,CAAAA,UAAP,CAAoBC,QAAQ,CAACrF,GAAD,CAAMO,IAAN,CAAY+E,OAAZ,CAAqB,CAC7CtF,GAAA,CAAIO,IAAJ,CAAA;AAAYhB,MAAOgG,CAAAA,KAAP,CAAa,QAAQ,EAAG,CAChChG,MAAOyF,CAAAA,QAAP,CAAgB,sCAAhB,CAAoCM,OAApC,CADgC,CAAxB,CAETtF,GAAA,CAAIO,IAAJ,CAFS,CADiC,CAWjDhB,OAAOiG,CAAAA,MAAP,CAAgBC,QAAQ,EAAG,CACvB,MAAOlG,OAAOC,CAAAA,OAAP,EADgB,CAW3BD,OAAOmG,CAAAA,OAAP,CAAiBC,QAAQ,CAACC,QAAD,CAAWC,MAAX,CAAmB,CACxC,GAAID,QAASF,CAAAA,OAAb,CACI,MAAOE,SAASF,CAAAA,OAAT,CAAiBG,MAAjB,CAEX,KAAK,IAAI5I,EAAI,CAAb,CAAgBA,CAAhB,CAAoB2I,QAASvF,CAAAA,MAA7B,CAAqCpD,CAAA,EAArC,CACI,GAAI2I,QAAA,CAAS3I,CAAT,CAAJ,GAAoB4I,MAApB,CACI,MAAO5I,EAGf,OAAO,EATiC,CAmB5CsC,OAAOuG,CAAAA,GAAP,CAAaC,QAAQ,CAACC,IAAD,CAAOC,IAAP,CAAa,CAC9B,GAAID,IAAKF,CAAAA,GAAT,CACI,MAAOE,KAAKF,CAAAA,GAAL,CAASG,IAAT,CAKX,KAFA,IAAIC,OAAS,EAAb,CAESjJ,EAAI,CAAb,CAAgBA,CAAhB,CAAoB+I,IAAK3F,CAAAA,MAAzB,CAAiCpD,CAAjC,EAAsC,CAAtC,CACIiJ,MAAOrF,CAAAA,IAAP,CAAYoF,IAAA,CAAKD,IAAA,CAAK/I,CAAL,CAAL,CAAZ,CAGJ,OAAOiJ,OAXuB,CAqBlC3G,OAAO4G,CAAAA,eAAP,CAAyBC,QAAQ,CAACC,KAAD,CAAQ,CAAA,IAIjCC;AAAS,EAJwB,CAKjCC,QAAU,EALuB,CAMjCtE,KAAO,EAN0B,CAQ5BuE,IAAT,KAASA,IAAT,GAAiBH,MAAjB,CACSE,OAAA,CAAQC,IAAR,CAAL,EAAuBvE,IAAA,CAAKuE,IAAL,CAAvB,EACIjH,MAAOkH,CAAAA,gBAAP,CAAwBD,IAAxB,CAA8BD,OAA9B,CAAuCtE,IAAvC,CAA6CoE,KAA7C,CAAoDC,MAApD,CAIR,OAAOA,OAd8B,CAiBzC/G,OAAOkH,CAAAA,gBAAP,CAA0BC,QAAQ,CAACF,IAAD,CAAOD,OAAP,CAAgBtE,IAAhB,CAAsBoE,KAAtB,CAA6BC,MAA7B,CAAqC,CACnE,IAAIK,UAAYN,KAAA,CAAMG,IAAN,CAAZG,EAA2B,EAC/B1E,KAAA,CAAKuE,IAAL,CAAA,CAAa,CAAA,CAEb,KAAK,IAAIvJ,EAAI,CAAb,CAAgBA,CAAhB,CAAoB0J,SAAUtG,CAAAA,MAA9B,CAAsCpD,CAAtC,EAA2C,CAA3C,CAA8C,CAC1C,IAAI2J,SAAWD,SAAA,CAAU1J,CAAV,CAEXgF,KAAA,CAAK2E,QAAL,CAAJ,EAKKL,OAAA,CAAQK,QAAR,CALL,EAMIrH,MAAOkH,CAAAA,gBAAP,CAAwBG,QAAxB,CAAkCL,OAAlC,CAA2CtE,IAA3C,CAAiDoE,KAAjD,CAAwDC,MAAxD,CATsC,CAa9CrE,IAAA,CAAKuE,IAAL,CAAA,CAAa,CAAA,CACbD,QAAA,CAAQC,IAAR,CAAA,CAAgB,CAAA,CAEhBF,OAAOzF,CAAAA,IAAP,CAAY2F,IAAZ,CApBmE,CAkCvEjH,OAAOgG,CAAAA,KAAP,CAAesB,QAAQ,EAAG,CAGtB,IAFA,IAAIC,MAAQ,EAAZ;AAES7J,WAAI,CAAb,CAAgBA,UAAhB,CAAoBmD,SAAUC,CAAAA,MAA9B,CAAsCpD,UAAtC,EAA2C,CAA3C,CAA8C,CAC1C,IAAIgJ,KAAO7F,SAAA,CAAUnD,UAAV,CAEPgJ,KAAKc,CAAAA,QAAT,CAEID,KAAMjG,CAAAA,IAAK4D,CAAAA,KAAX,CAAiBqC,KAAjB,CAAwBb,IAAKc,CAAAA,QAA7B,CAFJ,CAIID,KAAMjG,CAAAA,IAAN,CAAWoF,IAAX,CAPsC,CAW1CV,UAAAA,CAAQA,QAAQ,EAAG,CAKnB,IALmB,IAEfyB,UAFe,CAGfC,KAAWtC,KAAJ,CAAUvE,SAAUC,CAAAA,MAApB,CAHQ,CAKVpD,EAAI,CALM,CAKHC,EAAIkD,SAAUC,CAAAA,MAA9B,CAAsCpD,CAAtC,CAA0CC,CAA1C,CAA6CD,CAAA,EAA7C,CACIgK,IAAA,CAAKhK,CAAL,CAAA,CAAUmD,SAAA,CAAUnD,CAAV,CAGd,KAAKA,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB6J,KAAMzG,CAAAA,MAAtB,CAA8BpD,CAA9B,EAAmC,CAAnC,CACQqJ,CAEJ,CAFaQ,KAAA,CAAM7J,CAAN,CAASwH,CAAAA,KAAT,CAAeuC,UAAf,CAA2BC,IAA3B,CAEb,CAAsB,WAAtB,GAAI,MAAOX,EAAX,GACIU,UADJ,CACiBV,CADjB,CAKJ,OAAOU,WAjBY,CAoBvBzB,WAAMwB,CAAAA,QAAN,CAAiBD,KAEjB,OAAOvB,WApCe,CAgD1BhG,OAAO2H,CAAAA,eAAP,CAAyBC,QAAQ,CAACC,IAAD,CAAOnG,IAAP,CAAagF,IAAb,CAAmB,CAChD,MAAO1G,OAAO+B,CAAAA,GAAP,CAAW8F,IAAX;AAAiBnG,IAAjB,CAAuB1B,MAAOgG,CAAAA,KAAP,CAC1BU,IAD0B,CAE1B1G,MAAOzB,CAAAA,GAAP,CAAWsJ,IAAX,CAAiBnG,IAAjB,CAF0B,CAAvB,CADyC,CAgBpD1B,OAAO8H,CAAAA,cAAP,CAAwBC,QAAQ,CAACF,IAAD,CAAOnG,IAAP,CAAagF,IAAb,CAAmB,CAC/C,MAAO1G,OAAO+B,CAAAA,GAAP,CAAW8F,IAAX,CAAiBnG,IAAjB,CAAuB1B,MAAOgG,CAAAA,KAAP,CAC1BhG,MAAOzB,CAAAA,GAAP,CAAWsJ,IAAX,CAAiBnG,IAAjB,CAD0B,CAE1BgF,IAF0B,CAAvB,CADwC,CAanD1G,OAAOgI,CAAAA,SAAP,CAAmBC,QAAQ,CAACC,MAAD,CAAS,CAChClI,MAAOM,CAAAA,OAAP,CAAiB4H,MADe,CAUpClI,OAAOmI,CAAAA,SAAP,CAAmBC,QAAQ,EAAG,CAE1B,IAAIF,OAASlI,MAAOM,CAAAA,OAEpB,IAAI,CAEK4H,MAKL,EALiC,WAKjC,GALe,MAAO9D,OAKtB,GAJI8D,MAIJ,CAJa9D,MAAO8D,CAAAA,MAIpB,EAAKA,MAAL,EAAiC,WAAjC,GAAe,MAAOrL,OAAtB,GACIqL,MADJ,CACarL,MAAOqL,CAAAA,MADpB,CAPA,CAUF,MAAOG,CAAP,CAAU,CAERH,MAAA,CAAS,IAFD,CAKZ,MAAOA,OAnBmB,CAnkBtB,CAAX,CAAD,EAZiC,CAFvB,CA2mBH,QAAQ,CAACnL,MAAD,CAASC,OAAT,CAAkB,CAQjC,IAAIsL,OAAS,EAEbvL,OAAOC,CAAAA,OAAP,CAAiBsL,MAEhB;SAAQ,EAAG,CAQRA,MAAOpJ,CAAAA,MAAP,CAAgBqJ,QAAQ,CAACC,QAAD,CAAW,CAC/B,IAAIC,OAAS,CACT3E,IAAK,CAAE4E,EAAG,CAAL,CAAQC,EAAG,CAAX,CADI,CAET5E,IAAK,CAAE2E,EAAG,CAAL,CAAQC,EAAG,CAAX,CAFI,CAKTH,SAAJ,EACIF,MAAOM,CAAAA,MAAP,CAAcH,MAAd,CAAsBD,QAAtB,CAEJ,OAAOC,OATwB,CAmBnCH,OAAOM,CAAAA,MAAP,CAAgBC,QAAQ,CAACJ,MAAD,CAASD,QAAT,CAAmBM,QAAnB,CAA6B,CACjDL,MAAO3E,CAAAA,GAAI4E,CAAAA,CAAX,CAAeK,QACfN,OAAO1E,CAAAA,GAAI2E,CAAAA,CAAX,CAAe,CAACK,QAChBN,OAAO3E,CAAAA,GAAI6E,CAAAA,CAAX,CAAeI,QACfN,OAAO1E,CAAAA,GAAI4E,CAAAA,CAAX,CAAe,CAACI,QAEhB,KAAK,IAAIrL,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8K,QAAS1H,CAAAA,MAA7B,CAAqCpD,CAAA,EAArC,CAA0C,CACtC,IAAIsL,OAASR,QAAA,CAAS9K,CAAT,CACTsL,OAAON,CAAAA,CAAX,CAAeD,MAAO1E,CAAAA,GAAI2E,CAAAA,CAA1B,GAA6BD,MAAO1E,CAAAA,GAAI2E,CAAAA,CAAxC,CAA4CM,MAAON,CAAAA,CAAnD,CACIM,OAAON,CAAAA,CAAX,CAAeD,MAAO3E,CAAAA,GAAI4E,CAAAA,CAA1B,GAA6BD,MAAO3E,CAAAA,GAAI4E,CAAAA,CAAxC,CAA4CM,MAAON,CAAAA,CAAnD,CACIM,OAAOL,CAAAA,CAAX,CAAeF,MAAO1E,CAAAA,GAAI4E,CAAAA,CAA1B,GAA6BF,MAAO1E,CAAAA,GAAI4E,CAAAA,CAAxC,CAA4CK,MAAOL,CAAAA,CAAnD,CACIK,OAAOL,CAAAA,CAAX,CAAeF,MAAO3E,CAAAA,GAAI6E,CAAAA,CAA1B;CAA6BF,MAAO3E,CAAAA,GAAI6E,CAAAA,CAAxC,CAA4CK,MAAOL,CAAAA,CAAnD,CALsC,CAQtCG,QAAJ,GACqB,CAAjB,CAAIA,QAASJ,CAAAA,CAAb,CACID,MAAO1E,CAAAA,GAAI2E,CAAAA,CADf,EACoBI,QAASJ,CAAAA,CAD7B,CAGID,MAAO3E,CAAAA,GAAI4E,CAAAA,CAHf,EAGoBI,QAASJ,CAAAA,CAG7B,CAAiB,CAAjB,CAAII,QAASH,CAAAA,CAAb,CACIF,MAAO1E,CAAAA,GAAI4E,CAAAA,CADf,EACoBG,QAASH,CAAAA,CAD7B,CAGIF,MAAO3E,CAAAA,GAAI6E,CAAAA,CAHf,EAGoBG,QAASH,CAAAA,CAVjC,CAdiD,CAoCrDL,OAAOW,CAAAA,QAAP,CAAkBC,QAAQ,CAACT,MAAD,CAASU,KAAT,CAAgB,CACtC,MAAOA,MAAMT,CAAAA,CAAb,EAAkBD,MAAO3E,CAAAA,GAAI4E,CAAAA,CAA7B,EAAkCS,KAAMT,CAAAA,CAAxC,EAA6CD,MAAO1E,CAAAA,GAAI2E,CAAAA,CAAxD,EACUS,KAAMR,CAAAA,CADhB,EACqBF,MAAO3E,CAAAA,GAAI6E,CAAAA,CADhC,EACqCQ,KAAMR,CAAAA,CAD3C,EACgDF,MAAO1E,CAAAA,GAAI4E,CAAAA,CAFrB,CAY1CL,OAAOc,CAAAA,QAAP,CAAkBC,QAAQ,CAACC,OAAD,CAAUC,OAAV,CAAmB,CACzC,MAAQD,QAAQxF,CAAAA,GAAI4E,CAAAA,CAApB,EAAyBa,OAAQxF,CAAAA,GAAI2E,CAAAA,CAArC,EAA0CY,OAAQvF,CAAAA,GAAI2E,CAAAA,CAAtD,EAA2Da,OAAQzF,CAAAA,GAAI4E,CAAAA,CAAvE,EACWY,OAAQvF,CAAAA,GAAI4E,CAAAA,CADvB,EAC4BY,OAAQzF,CAAAA,GAAI6E,CAAAA,CADxC,EAC6CW,OAAQxF,CAAAA,GAAI6E,CAAAA,CADzD,EAC8DY,OAAQxF,CAAAA,GAAI4E,CAAAA,CAFjC,CAW7CL,OAAOkB,CAAAA,SAAP,CAAmBC,QAAQ,CAAChB,MAAD;AAASiB,MAAT,CAAiB,CACxCjB,MAAO3E,CAAAA,GAAI4E,CAAAA,CAAX,EAAgBgB,MAAOhB,CAAAA,CACvBD,OAAO1E,CAAAA,GAAI2E,CAAAA,CAAX,EAAgBgB,MAAOhB,CAAAA,CACvBD,OAAO3E,CAAAA,GAAI6E,CAAAA,CAAX,EAAgBe,MAAOf,CAAAA,CACvBF,OAAO1E,CAAAA,GAAI4E,CAAAA,CAAX,EAAgBe,MAAOf,CAAAA,CAJiB,CAa5CL,OAAOqB,CAAAA,KAAP,CAAeC,QAAQ,CAACnB,MAAD,CAASoB,QAAT,CAAmB,CAAA,IAClCC,OAASrB,MAAO1E,CAAAA,GAAI2E,CAAAA,CAApBoB,CAAwBrB,MAAO3E,CAAAA,GAAI4E,CAAAA,CADD,CAElCqB,OAAStB,MAAO1E,CAAAA,GAAI4E,CAAAA,CAApBoB,CAAwBtB,MAAO3E,CAAAA,GAAI6E,CAAAA,CAEvCF,OAAO3E,CAAAA,GAAI4E,CAAAA,CAAX,CAAemB,QAASnB,CAAAA,CACxBD,OAAO1E,CAAAA,GAAI2E,CAAAA,CAAX,CAAemB,QAASnB,CAAAA,CAAxB,CAA4BoB,MAC5BrB,OAAO3E,CAAAA,GAAI6E,CAAAA,CAAX,CAAekB,QAASlB,CAAAA,CACxBF,OAAO1E,CAAAA,GAAI4E,CAAAA,CAAX,CAAekB,QAASlB,CAAAA,CAAxB,CAA4BoB,MAPU,CAnGlC,CAAX,CAAD,EAZiC,CA3mBvB,CAyuBH,QAAQ,CAAChN,MAAD,CAASC,OAAT,CAAkB,CAcjC,IAAIgN,OAAS,EAEbjN,OAAOC,CAAAA,OAAP,CAAiBgN,MAEhB,UAAQ,EAAG,CASRA,MAAO9K,CAAAA,MAAP,CAAgB+K,QAAQ,CAACvB,CAAD,CAAIC,CAAJ,CAAO,CAC3B,MAAO,CAAED,EAAGA,CAAHA,EAAQ,CAAV,CAAaC,EAAGA,CAAHA,EAAQ,CAArB,CADoB,CAU/BqB,OAAO9I,CAAAA,KAAP,CAAegJ,QAAQ,CAACR,MAAD,CAAS,CAC5B,MAAO,CAAEhB,EAAGgB,MAAOhB,CAAAA,CAAZ,CAAeC,EAAGe,MAAOf,CAAAA,CAAzB,CADqB,CAUhCqB;MAAOG,CAAAA,SAAP,CAAmBC,QAAQ,CAACV,MAAD,CAAS,CAChC,MAAOnH,KAAK8H,CAAAA,IAAL,CAAWX,MAAOhB,CAAAA,CAAlB,CAAsBgB,MAAOhB,CAAAA,CAA7B,CAAmCgB,MAAOf,CAAAA,CAA1C,CAA8Ce,MAAOf,CAAAA,CAArD,CADyB,CAUpCqB,OAAOM,CAAAA,gBAAP,CAA0BC,QAAQ,CAACb,MAAD,CAAS,CACvC,MAAQA,OAAOhB,CAAAA,CAAf,CAAmBgB,MAAOhB,CAAAA,CAA1B,CAAgCgB,MAAOf,CAAAA,CAAvC,CAA2Ce,MAAOf,CAAAA,CADX,CAY3CqB,OAAOQ,CAAAA,MAAP,CAAgBC,QAAQ,CAACf,MAAD,CAASgB,KAAT,CAAgBC,MAAhB,CAAwB,CAAA,IACxCC,IAAMrI,IAAKqI,CAAAA,GAAL,CAASF,KAAT,CAAiBG,MAAAA,CAAMtI,IAAKsI,CAAAA,GAAL,CAASH,KAAT,CAC5BC,OAAL,GAAaA,MAAb,CAAsB,EAAtB,CACA,KAAIjC,EAAIgB,MAAOhB,CAAAA,CAAXA,CAAekC,GAAflC,CAAqBgB,MAAOf,CAAAA,CAA5BD,CAAgCmC,KACpCF,OAAOhC,CAAAA,CAAP,CAAWe,MAAOhB,CAAAA,CAAlB,CAAsBmC,KAAtB,CAA4BnB,MAAOf,CAAAA,CAAnC,CAAuCiC,GACvCD,OAAOjC,CAAAA,CAAP,CAAWA,CACX,OAAOiC,OANqC,CAkBhDX,OAAOc,CAAAA,WAAP,CAAqBC,QAAQ,CAACrB,MAAD,CAASgB,KAAT,CAAgBvB,KAAhB,CAAuBwB,MAAvB,CAA+B,CAAA,IACpDC,IAAMrI,IAAKqI,CAAAA,GAAL,CAASF,KAAT,CAAiBG,MAAAA,CAAMtI,IAAKsI,CAAAA,GAAL,CAASH,KAAT,CAC5BC,OAAL,GAAaA,MAAb,CAAsB,EAAtB,CACA;IAAIjC,EAAIS,KAAMT,CAAAA,CAAVA,GAAgBgB,MAAOhB,CAAAA,CAAvBA,CAA2BS,KAAMT,CAAAA,CAAjCA,EAAsCkC,GAAtClC,EAA6CgB,MAAOf,CAAAA,CAApDD,CAAwDS,KAAMR,CAAAA,CAA9DD,EAAmEmC,KAAnEnC,CACJiC,OAAOhC,CAAAA,CAAP,CAAWQ,KAAMR,CAAAA,CAAjB,GAAuBe,MAAOhB,CAAAA,CAA9B,CAAkCS,KAAMT,CAAAA,CAAxC,EAA6CmC,KAA7C,EAAoDnB,MAAOf,CAAAA,CAA3D,CAA+DQ,KAAMR,CAAAA,CAArE,EAA0EiC,GAA1E,CACAD,OAAOjC,CAAAA,CAAP,CAAWA,CACX,OAAOiC,OANiD,CAe5DX,OAAOgB,CAAAA,SAAP,CAAmBC,QAAQ,CAACvB,MAAD,CAAS,CAChC,IAAIS,UAAYH,MAAOG,CAAAA,SAAP,CAAiBT,MAAjB,CAChB,OAAkB,EAAlB,GAAIS,SAAJ,CACW,CAAEzB,EAAG,CAAL,CAAQC,EAAG,CAAX,CADX,CAEO,CAAED,EAAGgB,MAAOhB,CAAAA,CAAVA,CAAcyB,SAAhB,CAA2BxB,EAAGe,MAAOf,CAAAA,CAAVA,CAAcwB,SAAzC,CAJyB,CAcpCH,OAAOkB,CAAAA,GAAP,CAAaC,QAAQ,CAACC,OAAD,CAAUC,OAAV,CAAmB,CACpC,MAAQD,QAAQ1C,CAAAA,CAAhB,CAAoB2C,OAAQ3C,CAAAA,CAA5B,CAAkC0C,OAAQzC,CAAAA,CAA1C,CAA8C0C,OAAQ1C,CAAAA,CADlB,CAWxCqB,OAAOsB,CAAAA,KAAP,CAAeC,QAAQ,CAACH,OAAD,CAAUC,OAAV,CAAmB,CACtC,MAAQD,QAAQ1C,CAAAA,CAAhB,CAAoB2C,OAAQ1C,CAAAA,CAA5B,CAAkCyC,OAAQzC,CAAAA,CAA1C,CAA8C0C,OAAQ3C,CAAAA,CADhB,CAY1CsB,OAAOwB,CAAAA,MAAP,CAAgBC,QAAQ,CAACL,OAAD;AAAUC,OAAV,CAAmBK,OAAnB,CAA4B,CAChD,OAAQL,OAAQ3C,CAAAA,CAAhB,CAAoB0C,OAAQ1C,CAAAA,CAA5B,GAAkCgD,OAAQ/C,CAAAA,CAA1C,CAA8CyC,OAAQzC,CAAAA,CAAtD,GAA4D0C,OAAQ1C,CAAAA,CAApE,CAAwEyC,OAAQzC,CAAAA,CAAhF,GAAsF+C,OAAQhD,CAAAA,CAA9F,CAAkG0C,OAAQ1C,CAAAA,CAA1G,CADgD,CAYpDsB,OAAO2B,CAAAA,GAAP,CAAaC,QAAQ,CAACR,OAAD,CAAUC,OAAV,CAAmBV,MAAnB,CAA2B,CACvCA,MAAL,GAAaA,MAAb,CAAsB,EAAtB,CACAA,OAAOjC,CAAAA,CAAP,CAAW0C,OAAQ1C,CAAAA,CAAnB,CAAuB2C,OAAQ3C,CAAAA,CAC/BiC,OAAOhC,CAAAA,CAAP,CAAWyC,OAAQzC,CAAAA,CAAnB,CAAuB0C,OAAQ1C,CAAAA,CAC/B,OAAOgC,OAJqC,CAehDX,OAAO6B,CAAAA,GAAP,CAAaC,QAAQ,CAACV,OAAD,CAAUC,OAAV,CAAmBV,MAAnB,CAA2B,CACvCA,MAAL,GAAaA,MAAb,CAAsB,EAAtB,CACAA,OAAOjC,CAAAA,CAAP,CAAW0C,OAAQ1C,CAAAA,CAAnB,CAAuB2C,OAAQ3C,CAAAA,CAC/BiC,OAAOhC,CAAAA,CAAP,CAAWyC,OAAQzC,CAAAA,CAAnB,CAAuB0C,OAAQ1C,CAAAA,CAC/B,OAAOgC,OAJqC,CAchDX,OAAO+B,CAAAA,IAAP,CAAcC,QAAQ,CAACtC,MAAD,CAASuC,MAAT,CAAiB,CACnC,MAAO,CAAEvD,EAAGgB,MAAOhB,CAAAA,CAAVA,CAAcuD,MAAhB,CAAwBtD,EAAGe,MAAOf,CAAAA,CAAVA,CAAcsD,MAAtC,CAD4B,CAWvCjC,OAAOkC,CAAAA,GAAP,CAAaC,QAAQ,CAACzC,MAAD,CAASuC,MAAT,CAAiB,CAClC,MAAO,CAAEvD,EAAGgB,MAAOhB,CAAAA,CAAVA;AAAcuD,MAAhB,CAAwBtD,EAAGe,MAAOf,CAAAA,CAAVA,CAAcsD,MAAtC,CAD2B,CAWtCjC,OAAOoC,CAAAA,IAAP,CAAcC,QAAQ,CAAC3C,MAAD,CAAS4C,MAAT,CAAiB,CACnCA,MAAA,CAAoB,CAAA,CAAX,GAAAA,MAAA,CAAkB,EAAlB,CAAuB,CAChC,OAAO,CAAE5D,EAAG4D,MAAH5D,CAAY,CAACgB,MAAOf,CAAAA,CAAtB,CAAyBA,EAAG2D,MAAH3D,CAAYe,MAAOhB,CAAAA,CAA5C,CAF4B,CAWvCsB,OAAOuC,CAAAA,GAAP,CAAaC,QAAQ,CAAC9C,MAAD,CAAS,CAC1B,MAAO,CAAEhB,EAAG,CAACgB,MAAOhB,CAAAA,CAAb,CAAgBC,EAAG,CAACe,MAAOf,CAAAA,CAA3B,CADmB,CAW9BqB,OAAOU,CAAAA,KAAP,CAAe+B,QAAQ,CAACrB,OAAD,CAAUC,OAAV,CAAmB,CACtC,MAAO9I,KAAKmK,CAAAA,KAAL,CAAWrB,OAAQ1C,CAAAA,CAAnB,CAAuByC,OAAQzC,CAAAA,CAA/B,CAAkC0C,OAAQ3C,CAAAA,CAA1C,CAA8C0C,OAAQ1C,CAAAA,CAAtD,CAD+B,CAU1CsB,OAAO2C,CAAAA,KAAP,CAAe,CACX3C,MAAO9K,CAAAA,MAAP,EADW,CACM8K,MAAO9K,CAAAA,MAAP,EADN,CAEX8K,MAAO9K,CAAAA,MAAP,EAFW,CAEM8K,MAAO9K,CAAAA,MAAP,EAFN,CAGX8K,MAAO9K,CAAAA,MAAP,EAHW,CAGM8K,MAAO9K,CAAAA,MAAP,EAHN,CAxNP,CAAX,CAAD,EAlBiC,CAzuBvB,CA69BH,QAAQ,CAACnC,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAYtD,IAAIqP,SAAW,EAEf7P,OAAOC,CAAAA,OAAP,CAAiB4P,QAEjB,KAAI5C;AAASzM,mBAAA,CAAoB,CAApB,CAAb,CACIyC,OAASzC,mBAAA,CAAoB,CAApB,CAEZ,UAAQ,EAAG,CAmBRqP,QAAS1N,CAAAA,MAAT,CAAkB2N,QAAQ,CAACC,MAAD,CAASC,IAAT,CAAe,CAGrC,IAFA,IAAIvE,SAAW,EAAf,CAES9K,EAAI,CAAb,CAAgBA,CAAhB,CAAoBoP,MAAOhM,CAAAA,MAA3B,CAAmCpD,CAAA,EAAnC,CAAwC,CAAA,IAChCyL,MAAQ2D,MAAA,CAAOpP,CAAP,CASZ8K,SAASlH,CAAAA,IAAT,CARa0H,CACLN,EAAGS,KAAMT,CAAAA,CADJM,CAELL,EAAGQ,KAAMR,CAAAA,CAFJK,CAGLgE,MAAOtP,CAHFsL,CAIC+D,IAJD/D,CAKLiE,WAAY,CAAA,CALPjE,CAQb,CAVoC,CAaxC,MAAOR,SAhB8B,CA4BzCoE,SAASM,CAAAA,QAAT,CAAoBC,QAAQ,CAACzL,IAAD,CAAOqL,IAAP,CAAa,CACrC,IACID,OAAS,EAEbpL,KAAKiD,CAAAA,OAAL,CAHkByI,oCAGlB,CAA0B,QAAQ,CAACC,KAAD,CAAQ3E,CAAR,CAAWC,CAAX,CAAc,CAC5CmE,MAAOxL,CAAAA,IAAP,CAAY,CAAEoH,EAAG4E,UAAA,CAAW5E,CAAX,CAAL,CAAoBC,EAAG2E,UAAA,CAAW3E,CAAX,CAAvB,CAAZ,CAD4C,CAAhD,CAIA,OAAOiE,SAAS1N,CAAAA,MAAT,CAAgB4N,MAAhB,CAAwBC,IAAxB,CAR8B,CAiBzCH,SAASW,CAAAA,MAAT,CAAkBC,QAAQ,CAAChF,QAAD,CAAW,CAOjC,IAPiC,IAC7BiF;AAAOb,QAASa,CAAAA,IAAT,CAAcjF,QAAd,CAAwB,CAAA,CAAxB,CADsB,CAE7B+E,OAAS,CAAE7E,EAAG,CAAL,CAAQC,EAAG,CAAX,CAFoB,CAG7B2C,KAH6B,CAK7BhJ,CAL6B,CAOxB5E,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8K,QAAS1H,CAAAA,MAA7B,CAAqCpD,CAAA,EAArC,CACI4E,CAGA,EAHK5E,CAGL,CAHS,CAGT,EAHc8K,QAAS1H,CAAAA,MAGvB,CAFAwK,KAEA,CAFQtB,MAAOsB,CAAAA,KAAP,CAAa9C,QAAA,CAAS9K,CAAT,CAAb,CAA0B8K,QAAA,CAASlG,CAAT,CAA1B,CAER,CADAI,KACA,CADOsH,MAAO+B,CAAAA,IAAP,CAAY/B,MAAO2B,CAAAA,GAAP,CAAWnD,QAAA,CAAS9K,CAAT,CAAX,CAAwB8K,QAAA,CAASlG,CAAT,CAAxB,CAAZ,CAAkDgJ,KAAlD,CACP,CAAAiC,MAAA,CAASvD,MAAO2B,CAAAA,GAAP,CAAW4B,MAAX,CAAmB7K,KAAnB,CAGb,OAAOsH,OAAOkC,CAAAA,GAAP,CAAWqB,MAAX,CAAmB,CAAnB,CAAuBE,IAAvB,CAd0B,CAuBrCb,SAASc,CAAAA,IAAT,CAAgBC,QAAQ,CAACnF,QAAD,CAAW,CAG/B,IAFA,IAAIoF,QAAU,CAAElF,EAAG,CAAL,CAAQC,EAAG,CAAX,CAAd,CAESjL,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8K,QAAS1H,CAAAA,MAA7B,CAAqCpD,CAAA,EAArC,CACIkQ,OAAQlF,CAAAA,CACR,EADaF,QAAA,CAAS9K,CAAT,CAAYgL,CAAAA,CACzB,CAAAkF,OAAQjF,CAAAA,CAAR,EAAaH,QAAA,CAAS9K,CAAT,CAAYiL,CAAAA,CAG7B,OAAOqB,OAAOkC,CAAAA,GAAP,CAAW0B,OAAX,CAAoBpF,QAAS1H,CAAAA,MAA7B,CARwB,CAkBnC8L,SAASa,CAAAA,IAAT,CAAgBI,QAAQ,CAACrF,QAAD,CAAWsF,MAAX,CAAmB,CAIvC,IAJuC,IACnCL;AAAO,CAD4B,CAEnCnL,EAAIkG,QAAS1H,CAAAA,MAAbwB,CAAsB,CAFa,CAI9B5E,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8K,QAAS1H,CAAAA,MAA7B,CAAqCpD,CAAA,EAArC,CACI+P,IACA,GADSjF,QAAA,CAASlG,CAAT,CAAYoG,CAAAA,CACrB,CADyBF,QAAA,CAAS9K,CAAT,CAAYgL,CAAAA,CACrC,GAD2CF,QAAA,CAASlG,CAAT,CAAYqG,CAAAA,CACvD,CAD2DH,QAAA,CAAS9K,CAAT,CAAYiL,CAAAA,CACvE,EAAArG,CAAA,CAAI5E,CAGR,OAAIoQ,OAAJ,CACWL,IADX,CACkB,CADlB,CAGOlL,IAAKwL,CAAAA,GAAL,CAASN,IAAT,CAHP,CAGwB,CAZe,CAsB3Cb,SAASoB,CAAAA,OAAT,CAAmBC,QAAQ,CAACzF,QAAD,CAAW0F,IAAX,CAAiB,CASxC,IATwC,IACpCC,UAAY,CADwB,CAEpCC,YAAc,CAFsB,CAIpC9C,KAJoC,CAKpChJ,CALoC,CAS/BjD,EAAI,CAAb,CAAgBA,CAAhB,CANQmJ,QAMc1H,CAAAA,MAAtB,CAA8BzB,CAAA,EAA9B,CACIiD,CAGA,EAHKjD,CAGL,CAHS,CAGT,EAVImJ,QAOY1H,CAAAA,MAGhB,CAFAwK,KAEA,CAFQ/I,IAAKwL,CAAAA,GAAL,CAAS/D,MAAOsB,CAAAA,KAAP,CARb9C,QAQ0B,CAAElG,CAAF,CAAb,CARbkG,QAQgC,CAAEnJ,CAAF,CAAnB,CAAT,CAER,CADA8O,SACA,EADa7C,KACb,EADsBtB,MAAOkB,CAAAA,GAAP,CATlB1C,QAS6B,CAAElG,CAAF,CAAX,CATlBkG,QASmC,CAAElG,CAAF,CAAjB,CACtB,CAD+C0H,MAAOkB,CAAAA,GAAP,CAT3C1C,QASsD,CAAElG,CAAF,CAAX,CAT3CkG,QAS4D,CAAEnJ,CAAF,CAAjB,CAC/C,CADwE2K,MAAOkB,CAAAA,GAAP,CATpE1C,QAS+E,CAAEnJ,CAAF,CAAX,CATpEmJ,QASqF,CAAEnJ,CAAF,CAAjB,CACxE,EAAA+O,WAAA,EAAe9C,KAGnB,OAAQ4C,KAAR;AAAe,CAAf,EAAqBC,SAArB,CAAiCC,WAAjC,CAhBwC,CA0B5CxB,SAASpD,CAAAA,SAAT,CAAqB6E,QAAQ,CAAC7F,QAAD,CAAWkB,MAAX,CAAmBuC,MAAnB,CAA2B,CACpD,IAAIvO,CACJ,IAAIuO,MAAJ,CACI,IAAKvO,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB8K,QAAS1H,CAAAA,MAAzB,CAAiCpD,CAAA,EAAjC,CACI8K,QAAA,CAAS9K,CAAT,CAAYgL,CAAAA,CACZ,EADiBgB,MAAOhB,CAAAA,CACxB,CAD4BuD,MAC5B,CAAAzD,QAAA,CAAS9K,CAAT,CAAYiL,CAAAA,CAAZ,EAAiBe,MAAOf,CAAAA,CAAxB,CAA4BsD,MAHpC,KAMI,KAAKvO,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB8K,QAAS1H,CAAAA,MAAzB,CAAiCpD,CAAA,EAAjC,CACI8K,QAAA,CAAS9K,CAAT,CAAYgL,CAAAA,CACZ,EADiBgB,MAAOhB,CAAAA,CACxB,CAAAF,QAAA,CAAS9K,CAAT,CAAYiL,CAAAA,CAAZ,EAAiBe,MAAOf,CAAAA,CAIhC,OAAOH,SAd6C,CAwBxDoE,SAASpC,CAAAA,MAAT,CAAkB8D,QAAQ,CAAC9F,QAAD,CAAWkC,KAAX,CAAkBvB,KAAlB,CAAyB,CAC/C,GAAc,CAAd,GAAIuB,KAAJ,CAAA,CAD+C,IAI3CE,IAAMrI,IAAKqI,CAAAA,GAAL,CAASF,KAAT,CACNG,MAAAA,CAAMtI,IAAKsI,CAAAA,GAAL,CAASH,KAAT,CAEV,KAAK,IAAIhN,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8K,QAAS1H,CAAAA,MAA7B,CAAqCpD,CAAA,EAArC,CAA0C,CAAA,IAClC6Q,QAAU/F,QAAA,CAAS9K,CAAT,CADwB,CAElC8Q,GAAKD,OAAQ7F,CAAAA,CAAb8F,CAAiBrF,KAAMT,CAAAA,CAFW,CAGlC+F,GAAKF,OAAQ5F,CAAAA,CAAb8F,CAAiBtF,KAAMR,CAAAA,CAE3B4F,QAAQ7F,CAAAA,CAAR;AAAYS,KAAMT,CAAAA,CAAlB,EAAuB8F,EAAvB,CAA4B5D,GAA5B,CAAkC6D,EAAlC,CAAuC5D,KAAvC,CACA0D,QAAQ5F,CAAAA,CAAR,CAAYQ,KAAMR,CAAAA,CAAlB,EAAuB6F,EAAvB,CAA4B3D,KAA5B,CAAkC4D,EAAlC,CAAuC7D,GAAvC,CANsC,CAS1C,MAAOpC,SAfP,CAD+C,CA0BnDoE,SAAS3D,CAAAA,QAAT,CAAoByF,QAAQ,CAAClG,QAAD,CAAWW,KAAX,CAAkB,CAC1C,IAAK,IAAIzL,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8K,QAAS1H,CAAAA,MAA7B,CAAqCpD,CAAA,EAArC,CAA0C,CAAA,IAClC6Q,QAAU/F,QAAA,CAAS9K,CAAT,CADwB,CAElCiR,YAAcnG,QAAA,EAAU9K,CAAV,CAAc,CAAd,EAAmB8K,QAAS1H,CAAAA,MAA5B,CAClB,IAAgH,CAAhH,EAAKqI,KAAMT,CAAAA,CAAX,CAAe6F,OAAQ7F,CAAAA,CAAvB,GAA6BiG,WAAYhG,CAAAA,CAAzC,CAA6C4F,OAAQ5F,CAAAA,CAArD,GAA2DQ,KAAMR,CAAAA,CAAjE,CAAqE4F,OAAQ5F,CAAAA,CAA7E,GAAmF4F,OAAQ7F,CAAAA,CAA3F,CAA+FiG,WAAYjG,CAAAA,CAA3G,EACI,MAAO,CAAA,CAJ2B,CAQ1C,MAAO,CAAA,CATmC,CAoB9CkE,SAASgC,CAAAA,KAAT,CAAiBC,QAAQ,CAACrG,QAAD,CAAWsG,MAAX,CAAmBC,MAAnB,CAA2B5F,KAA3B,CAAkC,CACvD,GAAe,CAAf,GAAI2F,MAAJ,EAA+B,CAA/B,GAAoBC,MAApB,CACI,MAAOvG,SAEXW,MAAA,CAAQA,KAAR,EAAiByD,QAASW,CAAAA,MAAT,CAAgB/E,QAAhB,CAKjB,KATuD,IAMnDQ,MANmD,CAS9CtL,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8K,QAAS1H,CAAAA,MAA7B,CAAqCpD,CAAA,EAArC,CACIsL,MAGA;AAHSR,QAAA,CAAS9K,CAAT,CAGT,CAFAsR,MAEA,CAFQhF,MAAO6B,CAAAA,GAAP,CAAW7C,MAAX,CAAmBG,KAAnB,CAER,CADAX,QAAA,CAAS9K,CAAT,CAAYgL,CAAAA,CACZ,CADgBS,KAAMT,CAAAA,CACtB,CAD0BsG,MAAMtG,CAAAA,CAChC,CADoCoG,MACpC,CAAAtG,QAAA,CAAS9K,CAAT,CAAYiL,CAAAA,CAAZ,CAAgBQ,KAAMR,CAAAA,CAAtB,CAA0BqG,MAAMrG,CAAAA,CAAhC,CAAoCoG,MAGxC,OAAOvG,SAhBgD,CA6B3DoE,SAASqC,CAAAA,OAAT,CAAmBC,QAAQ,CAAC1G,QAAD,CAAW2G,MAAX,CAAmBC,OAAnB,CAA4BC,UAA5B,CAAwCC,UAAxC,CAAoD,CAEvEH,MAAA,CADkB,QAAtB,GAAI,MAAOA,OAAX,CACa,CAACA,MAAD,CADb,CAGaA,MAHb,EAGuB,CAAC,CAAD,CAIvBC,QAAA,CAA8B,WAApB,GAAC,MAAOA,QAAR,CAAmCA,OAAnC,CAA6C,EACvDC,WAAA,CAAaA,UAAb,EAA2B,CAC3BC,WAAA,CAAaA,UAAb,EAA2B,EAI3B,KAFA,IAAIC,YAAc,EAAlB,CAES7R,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8K,QAAS1H,CAAAA,MAA7B,CAAqCpD,CAAA,EAArC,CAA0C,CAAA,IAClC8R,WAAahH,QAAA,CAAkB,CAAT,EAAA9K,CAAA,CAAI,CAAJ,CAAaA,CAAb,CAAiB,CAAjB,CAAqB8K,QAAS1H,CAAAA,MAA9B,CAAuC,CAAhD,CADqB,CAElCkI,OAASR,QAAA,CAAS9K,CAAT,CAFyB,CAGlC+R,WAAajH,QAAA,EAAU9K,CAAV;AAAc,CAAd,EAAmB8K,QAAS1H,CAAAA,MAA5B,CAHqB,CAIlC4O,cAAgBP,MAAA,CAAOzR,CAAA,CAAIyR,MAAOrO,CAAAA,MAAX,CAAoBpD,CAApB,CAAwByR,MAAOrO,CAAAA,MAA/B,CAAwC,CAA/C,CAEpB,IAAsB,CAAtB,GAAI4O,aAAJ,CACIH,WAAYjO,CAAAA,IAAZ,CAAiB0H,MAAjB,CADJ,KAAA,CAKI2G,UAAAA,CAAa3F,MAAOgB,CAAAA,SAAP,CAAiB,CAC9BtC,EAAGM,MAAOL,CAAAA,CAAVD,CAAc8G,UAAW7G,CAAAA,CADK,CAE9BA,EAAG6G,UAAW9G,CAAAA,CAAdC,CAAkBK,MAAON,CAAAA,CAFK,CAAjB,CAKjB,KAAIkH,WAAa5F,MAAOgB,CAAAA,SAAP,CAAiB,CAC9BtC,EAAG+G,UAAW9G,CAAAA,CAAdD,CAAkBM,MAAOL,CAAAA,CADK,CAE9BA,EAAGK,MAAON,CAAAA,CAAVC,CAAc8G,UAAW/G,CAAAA,CAFK,CAAjB,CAAjB,CAKImH,eAAiBtN,IAAK8H,CAAAA,IAAL,CAAU,CAAV,CAAc9H,IAAKuN,CAAAA,GAAL,CAASJ,aAAT,CAAwB,CAAxB,CAAd,CACjBK,WAAAA,CAAe/F,MAAO+B,CAAAA,IAAP,CAAY/L,MAAOkB,CAAAA,KAAP,CAAayO,UAAb,CAAZ,CAAsCD,aAAtC,CAtBmB,KAuBlCM,UAAYhG,MAAOgB,CAAAA,SAAP,CAAiBhB,MAAO+B,CAAAA,IAAP,CAAY/B,MAAO2B,CAAAA,GAAP,CAAWgE,UAAX,CAAuBC,UAAvB,CAAZ,CAAgD,EAAhD,CAAjB,CACZK,OAAAA,CAAejG,MAAO6B,CAAAA,GAAP,CAAW7C,MAAX;AAAmBgB,MAAO+B,CAAAA,IAAP,CAAYiE,SAAZ,CAAuBH,cAAvB,CAAnB,CAEfK,eAAAA,CAAYd,OAEA,GAAhB,GAAIA,OAAJ,GAEIc,cAFJ,CAEgD,IAFhD,CAEgB3N,IAAKuN,CAAAA,GAAL,CAASJ,aAAT,CAAwB,GAAxB,CAFhB,CAKAQ,eAAA,CAAYlQ,MAAO4D,CAAAA,KAAP,CAAasM,cAAb,CAAwBb,UAAxB,CAAoCC,UAApC,CAGU,EAAtB,GAAIY,cAAJ,CAAgB,CAAhB,GACIA,cADJ,EACiB,CADjB,CAIIC,cAAAA,CADQ5N,IAAK6N,CAAAA,IAALC,CAAUrG,MAAOkB,CAAAA,GAAP,CAAWyE,UAAX,CAAuBC,UAAvB,CAAVS,CACRF,CAAgBD,cAEpB,KAAS5N,UAAT,CAAa,CAAb,CAAgBA,UAAhB,CAAoB4N,cAApB,CAA+B5N,UAAA,EAA/B,CACIiN,WAAYjO,CAAAA,IAAZ,CAAiB0I,MAAO2B,CAAAA,GAAP,CAAW3B,MAAOQ,CAAAA,MAAP,CAAcuF,UAAd,CAA4BI,aAA5B,CAAoC7N,UAApC,CAAX,CAAmD2N,MAAnD,CAAjB,CArCJ,CANsC,CA+C1C,MAAOV,YA7DoE,CAsE/E3C,SAAS0D,CAAAA,aAAT,CAAyBC,QAAQ,CAAC/H,QAAD,CAAW,CACxC,IAAI+E;AAASX,QAASc,CAAAA,IAAT,CAAclF,QAAd,CAEbA,SAASgI,CAAAA,IAAT,CAAc,QAAQ,CAACC,OAAD,CAAUC,OAAV,CAAmB,CACrC,MAAO1G,OAAOU,CAAAA,KAAP,CAAa6C,MAAb,CAAqBkD,OAArB,CAAP,CAAuCzG,MAAOU,CAAAA,KAAP,CAAa6C,MAAb,CAAqBmD,OAArB,CADF,CAAzC,CAIA,OAAOlI,SAPiC,CAgB5CoE,SAAS+D,CAAAA,QAAT,CAAoBC,QAAQ,CAACpI,QAAD,CAAW,CAAA,IAI/BqI,KAAO,CAJwB,CAK/BxR,EAAImJ,QAAS1H,CAAAA,MALkB,CAM/BpD,CAKJ,IAAQ,CAAR,CAAI2B,CAAJ,CACI,MAAO,KAEX,KAAK3B,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB2B,CAAhB,CAAmB3B,CAAA,EAAnB,CAAwB,CACpB,IAAA4E,GAAK5E,CAAL4E,CAAS,CAATA,EAAcjD,CACd,KAAAyR,GAAKpT,CAALoT,CAAS,CAATA,EAAczR,CACd,KAAA0R,GAAKvI,QAAA,CAASlG,CAAT,CAAYoG,CAAAA,CAAjBqI,CAAqBvI,QAAA,CAAS9K,CAAT,CAAYgL,CAAAA,CAAjCqI,GAAuCvI,QAAA,CAASsI,CAAT,CAAYnI,CAAAA,CAAnDoI,CAAuDvI,QAAA,CAASlG,CAAT,CAAYqG,CAAAA,CAAnEoI,CACAA,EAAA,GAAMvI,QAAA,CAASlG,CAAT,CAAYqG,CAAAA,CAAlB,CAAsBH,QAAA,CAAS9K,CAAT,CAAYiL,CAAAA,CAAlC,GAAwCH,QAAA,CAASsI,CAAT,CAAYpI,CAAAA,CAApD,CAAwDF,QAAA,CAASlG,CAAT,CAAYoG,CAAAA,CAApE,CAEQ,EAAR,CAAIqI,CAAJ,CACIF,IADJ,EACY,CADZ,CAEe,CAFf,CAEWE,CAFX,GAGIF,IAHJ,EAGY,CAHZ,CAMA,IAAa,CAAb,GAAIA,IAAJ,CACI,MAAO,CAAA,CAbS,CAiBxB,MAAa,EAAb,GAAIA,IAAJ,CACW,CAAA,CADX,CAGW,IAlCwB,CA4CvCjE,SAASoE,CAAAA,IAAT,CAAgBC,QAAQ,CAACzI,QAAD,CAAW,CAAA,IAG3B0I;AAAQ,EAHmB,CAI3BC,MAAQ,EAJmB,CAK3BnI,MAL2B,CAM3BtL,CAGJ8K,SAAA,CAAWA,QAAS1G,CAAAA,KAAT,CAAe,CAAf,CACX0G,SAASgI,CAAAA,IAAT,CAAc,QAAQ,CAACC,OAAD,CAAUC,OAAV,CAAmB,CACrC,IAAIlC,GAAKiC,OAAQ/H,CAAAA,CAAb8F,CAAiBkC,OAAQhI,CAAAA,CAC7B,OAAc,EAAP,GAAA8F,EAAA,CAAWA,EAAX,CAAgBiC,OAAQ9H,CAAAA,CAAxB,CAA4B+H,OAAQ/H,CAAAA,CAFN,CAAzC,CAMA,KAAKjL,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB8K,QAAS1H,CAAAA,MAAzB,CAAiCpD,CAAjC,EAAsC,CAAtC,CAAyC,CAGrC,IAFAsL,MAEA,CAFSR,QAAA,CAAS9K,CAAT,CAET,CAAuB,CAAvB,EAAOyT,KAAMrQ,CAAAA,MAAb,EACqF,CADrF,EACUkJ,MAAOwB,CAAAA,MAAP,CAAc2F,KAAA,CAAMA,KAAMrQ,CAAAA,MAAZ,CAAqB,CAArB,CAAd,CAAuCqQ,KAAA,CAAMA,KAAMrQ,CAAAA,MAAZ,CAAqB,CAArB,CAAvC,CAAgEkI,MAAhE,CADV,CAAA,CAEImI,KAAMC,CAAAA,GAAN,EAGJD,MAAM7P,CAAAA,IAAN,CAAW0H,MAAX,CARqC,CAYzC,IAAKtL,CAAL,CAAS8K,QAAS1H,CAAAA,MAAlB,CAA2B,CAA3B,CAAmC,CAAnC,EAA8BpD,CAA9B,CAAsC,EAAAA,CAAtC,CAA8C,CAG1C,IAFAsL,MAEA,CAFSR,QAAA,CAAS9K,CAAT,CAET,CAAuB,CAAvB,EAAOwT,KAAMpQ,CAAAA,MAAb,EACqF,CADrF,EACUkJ,MAAOwB,CAAAA,MAAP,CAAc0F,KAAA,CAAMA,KAAMpQ,CAAAA,MAAZ,CAAqB,CAArB,CAAd,CAAuCoQ,KAAA,CAAMA,KAAMpQ,CAAAA,MAAZ,CAAqB,CAArB,CAAvC,CAAgEkI,MAAhE,CADV,CAAA,CAEIkI,KAAME,CAAAA,GAAN,EAGJF,MAAM5P,CAAAA,IAAN,CAAW0H,MAAX,CAR0C,CAa9CkI,KAAME,CAAAA,GAAN,EACAD;KAAMC,CAAAA,GAAN,EAEA,OAAOF,MAAM/L,CAAAA,MAAN,CAAagM,KAAb,CA5CwB,CA9X3B,CAAX,CAAD,EAnBsD,CA79B5C,CAk6CH,QAAQ,CAACpU,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAUtD,IAAI8T,OAAS,EAEbtU,OAAOC,CAAAA,OAAP,CAAiBqU,MAEjB,KAAIrR,OAASzC,mBAAA,CAAoB,CAApB,CAEZ,UAAQ,EAAG,CASR8T,MAAOC,CAAAA,EAAP,CAAYC,QAAQ,CAAC7R,MAAD,CAAS8R,UAAT,CAAqBC,QAArB,CAA+B,CAC3CC,UAAAA,CAAQF,UAAW3P,CAAAA,KAAX,CAAiB,GAAjB,CAGZ,KAHA,IACI5D,IADJ,CAGSP,EAAI,CAAb,CAAgBA,CAAhB,CAAoBgU,UAAM5Q,CAAAA,MAA1B,CAAkCpD,CAAA,EAAlC,CACIO,IAGA,CAHOyT,UAAA,CAAMhU,CAAN,CAGP,CAFAgC,MAAOiS,CAAAA,MAEP,CAFgBjS,MAAOiS,CAAAA,MAEvB,EAFiC,EAEjC,CADAjS,MAAOiS,CAAAA,MAAP,CAAc1T,IAAd,CACA,CADsByB,MAAOiS,CAAAA,MAAP,CAAc1T,IAAd,CACtB,EAD6C,EAC7C,CAAAyB,MAAOiS,CAAAA,MAAP,CAAc1T,IAAd,CAAoBqD,CAAAA,IAApB,CAAyBmQ,QAAzB,CAGJ,OAAOA,SAXwC,CAqBnDJ,OAAOO,CAAAA,GAAP,CAAaC,QAAQ,CAACnS,MAAD,CAAS8R,UAAT,CAAqBC,QAArB,CAA+B,CAChD,GAAKD,UAAL,CAAA,CAM0B,UAA1B;AAAI,MAAOA,WAAX,GACIC,QACA,CADWD,UACX,CAAAA,UAAA,CAAaxR,MAAOoB,CAAAA,IAAP,CAAY1B,MAAOiS,CAAAA,MAAnB,CAA2B/L,CAAAA,IAA3B,CAAgC,GAAhC,CAFjB,CAKI8L,WAAAA,CAAQF,UAAW3P,CAAAA,KAAX,CAAiB,GAAjB,CAEZ,KAAK,IAAInE,EAAI,CAAb,CAAgBA,CAAhB,CAAoBgU,UAAM5Q,CAAAA,MAA1B,CAAkCpD,CAAA,EAAlC,CAAuC,CAAA,IAC/BoU,UAAYpS,MAAOiS,CAAAA,MAAP,CAAcD,UAAA,CAAMhU,CAAN,CAAd,CADmB,CAE/BqU,aAAe,EAEnB,IAAIN,QAAJ,EAAgBK,SAAhB,CACI,IAAK,IAAIxP,EAAI,CAAb,CAAgBA,CAAhB,CAAoBwP,SAAUhR,CAAAA,MAA9B,CAAsCwB,CAAA,EAAtC,CACQwP,SAAA,CAAUxP,CAAV,CAAJ,GAAqBmP,QAArB,EACIM,YAAazQ,CAAAA,IAAb,CAAkBwQ,SAAA,CAAUxP,CAAV,CAAlB,CAIZ5C,OAAOiS,CAAAA,MAAP,CAAcD,UAAA,CAAMhU,CAAN,CAAd,CAAA,CAA0BqU,YAXS,CAbvC,CAAA,IACIrS,OAAOiS,CAAAA,MAAP,CAAgB,EAF4B,CAoCpDN,OAAOW,CAAAA,OAAP,CAAiBC,QAAQ,CAACvS,MAAD,CAAS8R,UAAT,CAAqBU,KAArB,CAA4B,CAAA,IAG7CJ,SAH6C,CAM7CH,OAASjS,MAAOiS,CAAAA,MAEpB,IAAIA,MAAJ,EAA2C,CAA3C,CAAc3R,MAAOoB,CAAAA,IAAP,CAAYuQ,MAAZ,CAAoB7Q,CAAAA,MAAlC,CAA8C,CACrCoR,KAAL;CACIA,KADJ,CACY,EADZ,CAGAR,WAAA,CAAQF,UAAW3P,CAAAA,KAAX,CAAiB,GAAjB,CAER,KAAK,IAAInE,EAAI,CAAb,CAAgBA,CAAhB,CAAoBgU,UAAM5Q,CAAAA,MAA1B,CAAkCpD,CAAA,EAAlC,CAAuC,CACnC,IAAAO,KAAOyT,UAAA,CAAMhU,CAAN,CAGP,IAFAoU,SAEA,CAFYH,MAAA,CAAO1T,IAAP,CAEZ,CAAe,CACX,IAAAkU,WAAanS,MAAOkB,CAAAA,KAAP,CAAagR,KAAb,CAAoB,CAAA,CAApB,CACbC,WAAWlU,CAAAA,IAAX,CAAkBA,IAClBkU,WAAWpR,CAAAA,MAAX,CAAoBrB,MAEpB,KAAS4C,IAAT,CAAa,CAAb,CAAgBA,IAAhB,CAAoBwP,SAAUhR,CAAAA,MAA9B,CAAsCwB,IAAA,EAAtC,CACIwP,SAAA,CAAUxP,IAAV,CAAa4C,CAAAA,KAAb,CAAmBxF,MAAnB,CAA2B,CAACyS,UAAD,CAA3B,CANO,CAJoB,CANG,CARG,CAlE7C,CAAX,CAAD,EAhBsD,CAl6C5C,CAwhDH,QAAQ,CAACpV,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAetD,IAAI6U,UAAY,EAEhBrV,OAAOC,CAAAA,OAAP,CAAiBoV,SAEjB,KAAIf,OAAS9T,mBAAA,CAAoB,CAApB,CAAb,CACIyC,OAASzC,mBAAA,CAAoB,CAApB,CADb,CAEI+K,OAAS/K,mBAAA,CAAoB,CAApB,CAFb,CAGI8U,KAAO9U,mBAAA,CAAoB,CAApB,CAEV;SAAQ,EAAG,CASR6U,SAAUlT,CAAAA,MAAV,CAAmBoT,QAAQ,CAACC,OAAD,CAAU,CACjC,MAAOvS,OAAOO,CAAAA,MAAP,CAAc,CACjBiS,GAAIxS,MAAOiG,CAAAA,MAAP,EADa,CAEjBwM,KAAM,WAFW,CAGjBC,OAAQ,IAHS,CAIjBC,WAAY,CAAA,CAJK,CAKjBC,OAAQ,EALS,CAMjBC,YAAa,EANI,CAOjBC,WAAY,EAPK,CAQjBC,MAAO,WARU,CASjBC,OAAQ,EATS,CAAd,CAUJT,OAVI,CAD0B,CAwBrCH,UAAUa,CAAAA,WAAV,CAAwBC,QAAQ,CAACC,SAAD,CAAYR,UAAZ,CAAwBS,aAAxB,CAAuCC,cAAvC,CAAuD,CACnFF,SAAUR,CAAAA,UAAV,CAAuBA,UAEnBS,cAAJ,EAAqBD,SAAUT,CAAAA,MAA/B,EACIN,SAAUa,CAAAA,WAAV,CAAsBE,SAAUT,CAAAA,MAAhC,CAAwCC,UAAxC,CAAoDS,aAApD,CAAmEC,cAAnE,CAGJ,IAAIA,cAAJ,CACI,IAAI,IAAI3V,EAAI,CAAZ,CAAeA,CAAf,CAAmByV,SAAUL,CAAAA,UAAWhS,CAAAA,MAAxC,CAAgDpD,CAAA,EAAhD,CAEI0U,SAAUa,CAAAA,WAAV,CADqBE,SAAUL,CAAAA,UAAVQ,CAAqB5V,CAArB4V,CACrB;AAAsCX,UAAtC,CAAkDS,aAAlD,CAAiEC,cAAjE,CAV2E,CAuBvFjB,UAAUzG,CAAAA,GAAV,CAAgB4H,QAAQ,CAACJ,SAAD,CAAYzT,MAAZ,CAAoB,CACxC,IAAI8T,QAAU,EAAGrO,CAAAA,MAAH,CAAUzF,MAAV,CAEd2R,OAAOW,CAAAA,OAAP,CAAemB,SAAf,CAA0B,WAA1B,CAAuC,CAAUzT,MAAV,CAAvC,CAEA,KAAK,IAAIhC,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8V,OAAQ1S,CAAAA,MAA5B,CAAoCpD,CAAA,EAApC,CAAyC,CACrC,IAAI+C,IAAM+S,OAAA,CAAQ9V,CAAR,CAEV,QAAQ+C,GAAIgS,CAAAA,IAAZ,EAEA,KAAK,MAAL,CAEI,GAAIhS,GAAIiS,CAAAA,MAAR,GAAmBjS,GAAnB,CAAwB,CACpBT,MAAOuF,CAAAA,IAAP,CAAY,sFAAZ,CACA,MAFoB,CAKxB6M,SAAUqB,CAAAA,OAAV,CAAkBN,SAAlB,CAA6B1S,GAA7B,CACA,MACJ,MAAK,YAAL,CACI2R,SAAUsB,CAAAA,aAAV,CAAwBP,SAAxB,CAAmC1S,GAAnC,CACA,MACJ,MAAK,WAAL,CACI2R,SAAUuB,CAAAA,YAAV,CAAuBR,SAAvB;AAAkC1S,GAAlC,CACA,MACJ,MAAK,iBAAL,CACI2R,SAAUsB,CAAAA,aAAV,CAAwBP,SAAxB,CAAmC1S,GAAImT,CAAAA,UAAvC,CAlBJ,CAHqC,CA2BzCvC,MAAOW,CAAAA,OAAP,CAAemB,SAAf,CAA0B,UAA1B,CAAsC,CAAUzT,MAAV,CAAtC,CAEA,OAAOyT,UAlCiC,CA+C5Cf,UAAUyB,CAAAA,MAAV,CAAmBC,QAAQ,CAACX,SAAD,CAAYzT,MAAZ,CAAoBgB,IAApB,CAA0B,CACjD,IAAI8S,QAAU,EAAGrO,CAAAA,MAAH,CAAUzF,MAAV,CAEd2R,OAAOW,CAAAA,OAAP,CAAemB,SAAf,CAA0B,cAA1B,CAA0C,CAAUzT,MAAV,CAA1C,CAEA,KAAK,IAAIhC,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8V,OAAQ1S,CAAAA,MAA5B,CAAoCpD,CAAA,EAApC,CAAyC,CACrC,IAAI+C,IAAM+S,OAAA,CAAQ9V,CAAR,CAEV,QAAQ+C,GAAIgS,CAAAA,IAAZ,EAEA,KAAK,MAAL,CACIL,SAAU2B,CAAAA,UAAV,CAAqBZ,SAArB,CAAgC1S,GAAhC,CAAqCC,IAArC,CACA,MACJ,MAAK,YAAL,CACI0R,SAAU4B,CAAAA,gBAAV,CAA2Bb,SAA3B,CAAsC1S,GAAtC,CAA2CC,IAA3C,CACA,MACJ,MAAK,WAAL,CACI0R,SAAU6B,CAAAA,eAAV,CAA0Bd,SAA1B;AAAqC1S,GAArC,CAA0CC,IAA1C,CACA,MACJ,MAAK,iBAAL,CACI0R,SAAU4B,CAAAA,gBAAV,CAA2Bb,SAA3B,CAAsC1S,GAAImT,CAAAA,UAA1C,CAZJ,CAHqC,CAqBzCvC,MAAOW,CAAAA,OAAP,CAAemB,SAAf,CAA0B,aAA1B,CAAyC,CAAUzT,MAAV,CAAzC,CAEA,OAAOyT,UA5B0C,CAuCrDf,UAAUuB,CAAAA,YAAV,CAAyBO,QAAQ,CAACC,UAAD,CAAaC,UAAb,CAAyB,CACtDD,UAAWrB,CAAAA,UAAWxR,CAAAA,IAAtB,CAA2B8S,UAA3B,CACAA,WAAW1B,CAAAA,MAAX,CAAoByB,UACpB/B,UAAUa,CAAAA,WAAV,CAAsBkB,UAAtB,CAAkC,CAAA,CAAlC,CAAwC,CAAA,CAAxC,CAA8C,CAAA,CAA9C,CACA,OAAOA,WAJ+C,CAgB1D/B,UAAU6B,CAAAA,eAAV,CAA4BI,QAAQ,CAACF,UAAD,CAAaC,UAAb,CAAyB1T,IAAzB,CAA+B,CAC/D,IAAImJ,SAAW7J,MAAOmG,CAAAA,OAAP,CAAegO,UAAWrB,CAAAA,UAA1B,CAAsCsB,UAAtC,CACE,GAAjB,GAAIvK,QAAJ,GACIuI,SAAUkC,CAAAA,iBAAV,CAA4BH,UAA5B;AAAwCtK,QAAxC,CACA,CAAAuI,SAAUa,CAAAA,WAAV,CAAsBkB,UAAtB,CAAkC,CAAA,CAAlC,CAAwC,CAAA,CAAxC,CAA8C,CAAA,CAA9C,CAFJ,CAKA,IAAIzT,IAAJ,CACI,IAAShD,IAAT,CAAa,CAAb,CAAgBA,IAAhB,CAAoByW,UAAWrB,CAAAA,UAAWhS,CAAAA,MAA1C,CAAkDpD,IAAA,EAAlD,CACI0U,SAAU6B,CAAAA,eAAV,CAA0BE,UAAWrB,CAAAA,UAAX,CAAsBpV,IAAtB,CAA1B,CAAoD0W,UAApD,CAAgE,CAAA,CAAhE,CAIR,OAAOD,WAbwD,CAwBnE/B,UAAUkC,CAAAA,iBAAV,CAA8BC,QAAQ,CAACpB,SAAD,CAAYtJ,QAAZ,CAAsB,CACxDsJ,SAAUL,CAAAA,UAAW0B,CAAAA,MAArB,CAA4B3K,QAA5B,CAAsC,CAAtC,CACAuI,UAAUa,CAAAA,WAAV,CAAsBE,SAAtB,CAAiC,CAAA,CAAjC,CAAuC,CAAA,CAAvC,CAA6C,CAAA,CAA7C,CACA,OAAOA,UAHiD,CAc5Df,UAAUqB,CAAAA,OAAV,CAAoBgB,QAAQ,CAACtB,SAAD,CAAYpG,IAAZ,CAAkB,CAC1CoG,SAAUP,CAAAA,MAAOtR,CAAAA,IAAjB,CAAsByL,IAAtB,CACAqF,UAAUa,CAAAA,WAAV,CAAsBE,SAAtB,CAAiC,CAAA,CAAjC,CAAuC,CAAA,CAAvC,CAA6C,CAAA,CAA7C,CACA,OAAOA,UAHmC,CAe9Cf,UAAU2B,CAAAA,UAAV;AAAuBW,QAAQ,CAACvB,SAAD,CAAYpG,IAAZ,CAAkBrM,IAAlB,CAAwB,CACnD,IAAImJ,SAAW7J,MAAOmG,CAAAA,OAAP,CAAegN,SAAUP,CAAAA,MAAzB,CAAiC7F,IAAjC,CACE,GAAjB,GAAIlD,QAAJ,GACIuI,SAAUuC,CAAAA,YAAV,CAAuBxB,SAAvB,CAAkCtJ,QAAlC,CACA,CAAAuI,SAAUa,CAAAA,WAAV,CAAsBE,SAAtB,CAAiC,CAAA,CAAjC,CAAuC,CAAA,CAAvC,CAA6C,CAAA,CAA7C,CAFJ,CAKA,IAAIzS,IAAJ,CACI,IAAShD,IAAT,CAAa,CAAb,CAAgBA,IAAhB,CAAoByV,SAAUL,CAAAA,UAAWhS,CAAAA,MAAzC,CAAiDpD,IAAA,EAAjD,CACI0U,SAAU2B,CAAAA,UAAV,CAAqBZ,SAAUL,CAAAA,UAAV,CAAqBpV,IAArB,CAArB,CAA8CqP,IAA9C,CAAoD,CAAA,CAApD,CAIR,OAAOoG,UAb4C,CAwBvDf,UAAUuC,CAAAA,YAAV,CAAyBC,QAAQ,CAACzB,SAAD,CAAYtJ,QAAZ,CAAsB,CACnDsJ,SAAUP,CAAAA,MAAO4B,CAAAA,MAAjB,CAAwB3K,QAAxB,CAAkC,CAAlC,CACAuI,UAAUa,CAAAA,WAAV,CAAsBE,SAAtB,CAAiC,CAAA,CAAjC,CAAuC,CAAA,CAAvC,CAA6C,CAAA,CAA7C,CACA,OAAOA,UAH4C,CAcvDf,UAAUsB,CAAAA,aAAV,CAA0BmB,QAAQ,CAAC1B,SAAD;AAAYS,UAAZ,CAAwB,CACtDT,SAAUN,CAAAA,WAAYvR,CAAAA,IAAtB,CAA2BsS,UAA3B,CACAxB,UAAUa,CAAAA,WAAV,CAAsBE,SAAtB,CAAiC,CAAA,CAAjC,CAAuC,CAAA,CAAvC,CAA6C,CAAA,CAA7C,CACA,OAAOA,UAH+C,CAe1Df,UAAU4B,CAAAA,gBAAV,CAA6Bc,QAAQ,CAAC3B,SAAD,CAAYS,UAAZ,CAAwBlT,IAAxB,CAA8B,CAC/D,IAAImJ,SAAW7J,MAAOmG,CAAAA,OAAP,CAAegN,SAAUN,CAAAA,WAAzB,CAAsCe,UAAtC,CACE,GAAjB,GAAI/J,QAAJ,EACIuI,SAAU2C,CAAAA,kBAAV,CAA6B5B,SAA7B,CAAwCtJ,QAAxC,CAGJ,IAAInJ,IAAJ,CACI,IAAShD,IAAT,CAAa,CAAb,CAAgBA,IAAhB,CAAoByV,SAAUL,CAAAA,UAAWhS,CAAAA,MAAzC,CAAiDpD,IAAA,EAAjD,CACI0U,SAAU4B,CAAAA,gBAAV,CAA2Bb,SAAUL,CAAAA,UAAV,CAAqBpV,IAArB,CAA3B,CAAoDkW,UAApD,CAAgE,CAAA,CAAhE,CAIR,OAAOT,UAZwD,CAuBnEf,UAAU2C,CAAAA,kBAAV,CAA+BC,QAAQ,CAAC7B,SAAD,CAAYtJ,QAAZ,CAAsB,CACzDsJ,SAAUN,CAAAA,WAAY2B,CAAAA,MAAtB,CAA6B3K,QAA7B;AAAuC,CAAvC,CACAuI,UAAUa,CAAAA,WAAV,CAAsBE,SAAtB,CAAiC,CAAA,CAAjC,CAAuC,CAAA,CAAvC,CAA6C,CAAA,CAA7C,CACA,OAAOA,UAHkD,CAc7Df,UAAU6C,CAAAA,KAAV,CAAkBC,QAAQ,CAAC/B,SAAD,CAAYgC,UAAZ,CAAwBzU,IAAxB,CAA8B,CACpD,GAAIA,IAAJ,CACI,IAAShD,IAAT,CAAa,CAAb,CAAgBA,IAAhB,CAAoByV,SAAUL,CAAAA,UAAWhS,CAAAA,MAAzC,CAAiDpD,IAAA,EAAjD,CACI0U,SAAU6C,CAAAA,KAAV,CAAgB9B,SAAUL,CAAAA,UAAV,CAAqBpV,IAArB,CAAhB,CAAyCyX,UAAzC,CAAqD,CAAA,CAArD,CAIJA,WAAJ,CACIhC,SAAUP,CAAAA,MADd,CACuBO,SAAUP,CAAAA,MAAOwC,CAAAA,MAAjB,CAAwB,QAAQ,CAACrI,IAAD,CAAO,CAAE,MAAOA,KAAKsI,CAAAA,QAAd,CAAvC,CADvB,CAGIlC,SAAUP,CAAAA,MAAO9R,CAAAA,MAHrB,CAG8B,CAG9BqS,UAAUN,CAAAA,WAAY/R,CAAAA,MAAtB,CAA+B,CAC/BqS,UAAUL,CAAAA,UAAWhS,CAAAA,MAArB,CAA8B,CAC9BsR,UAAUa,CAAAA,WAAV,CAAsBE,SAAtB,CAAiC,CAAA,CAAjC,CAAuC,CAAA,CAAvC,CAA6C,CAAA,CAA7C,CAEA,OAAOA,UAjB6C,CA0BxDf,UAAUkD,CAAAA,SAAV,CAAsBC,QAAQ,CAACpC,SAAD,CAAY,CAGtC,IAFA,IAAIP;AAAS,EAAGzN,CAAAA,MAAH,CAAUgO,SAAUP,CAAAA,MAApB,CAAb,CAESlV,EAAI,CAAb,CAAgBA,CAAhB,CAAoByV,SAAUL,CAAAA,UAAWhS,CAAAA,MAAzC,CAAiDpD,CAAA,EAAjD,CACIkV,MAAA,CAASA,MAAOzN,CAAAA,MAAP,CAAciN,SAAUkD,CAAAA,SAAV,CAAoBnC,SAAUL,CAAAA,UAAV,CAAqBpV,CAArB,CAApB,CAAd,CAEb,OAAOkV,OAN+B,CAe1CR,UAAUoD,CAAAA,cAAV,CAA2BC,QAAQ,CAACtC,SAAD,CAAY,CAG3C,IAFA,IAAIN,YAAc,EAAG1N,CAAAA,MAAH,CAAUgO,SAAUN,CAAAA,WAApB,CAAlB,CAESnV,EAAI,CAAb,CAAgBA,CAAhB,CAAoByV,SAAUL,CAAAA,UAAWhS,CAAAA,MAAzC,CAAiDpD,CAAA,EAAjD,CACImV,WAAA,CAAcA,WAAY1N,CAAAA,MAAZ,CAAmBiN,SAAUoD,CAAAA,cAAV,CAAyBrC,SAAUL,CAAAA,UAAV,CAAqBpV,CAArB,CAAzB,CAAnB,CAElB,OAAOmV,YANoC,CAe/CT,UAAUsD,CAAAA,aAAV,CAA0BC,QAAQ,CAACxC,SAAD,CAAY,CAG1C,IAFA,IAAIL,WAAa,EAAG3N,CAAAA,MAAH,CAAUgO,SAAUL,CAAAA,UAApB,CAAjB,CAESpV,EAAI,CAAb,CAAgBA,CAAhB,CAAoByV,SAAUL,CAAAA,UAAWhS,CAAAA,MAAzC,CAAiDpD,CAAA,EAAjD,CACIoV,UAAA;AAAaA,UAAW3N,CAAAA,MAAX,CAAkBiN,SAAUsD,CAAAA,aAAV,CAAwBvC,SAAUL,CAAAA,UAAV,CAAqBpV,CAArB,CAAxB,CAAlB,CAEjB,OAAOoV,WANmC,CAiB9CV,UAAU7T,CAAAA,GAAV,CAAgBqX,QAAQ,CAACzC,SAAD,CAAYX,EAAZ,CAAgBC,IAAhB,CAAsB,CAI1C,OAAQA,IAAR,EACA,KAAK,MAAL,CACI,IAAAe,QAAUpB,SAAUkD,CAAAA,SAAV,CAAoBnC,SAApB,CACV,MACJ,MAAK,YAAL,CACIK,OAAA,CAAUpB,SAAUoD,CAAAA,cAAV,CAAyBrC,SAAzB,CACV,MACJ,MAAK,WAAL,CACIK,OAAA,CAAUpB,SAAUsD,CAAAA,aAAV,CAAwBvC,SAAxB,CAAmChO,CAAAA,MAAnC,CAA0CgO,SAA1C,CARd,CAYA,GAAI,CAACK,OAAL,CACI,MAAO,KAEX9T,UAAA,CAAS8T,OAAQ4B,CAAAA,MAAR,CAAe,QAAQ,CAAC1V,MAAD,CAAS,CACrC,MAAOA,OAAO8S,CAAAA,EAAGnP,CAAAA,QAAV,EAAP,GAAgCmP,EAAGnP,CAAAA,QAAH,EADK,CAAhC,CAIT,OAAyB,EAAlB,GAAA3D,SAAOoB,CAAAA,MAAP,CAAsB,IAAtB,CAA6BpB,SAAA,CAAO,CAAP,CAvBM,CAkC9C0S;SAAUyD,CAAAA,IAAV,CAAiBC,QAAQ,CAAC3B,UAAD,CAAaX,OAAb,CAAsBY,UAAtB,CAAkC,CACvDhC,SAAUyB,CAAAA,MAAV,CAAiBM,UAAjB,CAA6BX,OAA7B,CACApB,UAAUzG,CAAAA,GAAV,CAAcyI,UAAd,CAA0BZ,OAA1B,CACA,OAAOW,WAHgD,CAY3D/B,UAAU2D,CAAAA,MAAV,CAAmBC,QAAQ,CAAC7C,SAAD,CAAY,CAKnC,IAJA,IAAIK,QAAUpB,SAAUkD,CAAAA,SAAV,CAAoBnC,SAApB,CACThO,CAAAA,MADS,CACFiN,SAAUoD,CAAAA,cAAV,CAAyBrC,SAAzB,CADE,CAEThO,CAAAA,MAFS,CAEFiN,SAAUsD,CAAAA,aAAV,CAAwBvC,SAAxB,CAFE,CAAd,CAISzV,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8V,OAAQ1S,CAAAA,MAA5B,CAAoCpD,CAAA,EAApC,CACI8V,OAAA,CAAQ9V,CAAR,CAAW8U,CAAAA,EAAX,CAAgBxS,MAAOiG,CAAAA,MAAP,EAGpBmM,UAAUa,CAAAA,WAAV,CAAsBE,SAAtB,CAAiC,CAAA,CAAjC,CAAuC,CAAA,CAAvC,CAA6C,CAAA,CAA7C,CAEA,OAAOA,UAX4B,CAsBvCf,UAAU5I,CAAAA,SAAV,CAAsByM,QAAQ,CAAC9C,SAAD,CAAY+C,WAAZ,CAAyBC,SAAzB,CAAoC,CAC1DvD,SAAAA;AAASuD,SAAA,CAAY/D,SAAUkD,CAAAA,SAAV,CAAoBnC,SAApB,CAAZ,CAA6CA,SAAUP,CAAAA,MAEpE,KAAK,IAAIlV,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkV,SAAO9R,CAAAA,MAA3B,CAAmCpD,CAAA,EAAnC,CACI2U,IAAK7I,CAAAA,SAAL,CAAeoJ,SAAA,CAAOlV,CAAP,CAAf,CAA0BwY,WAA1B,CAGJ9D,UAAUa,CAAAA,WAAV,CAAsBE,SAAtB,CAAiC,CAAA,CAAjC,CAAuC,CAAA,CAAvC,CAA6C,CAAA,CAA7C,CAEA,OAAOA,UATuD,CAoBlEf,UAAU5H,CAAAA,MAAV,CAAmB4L,QAAQ,CAACjD,SAAD,CAAYkD,QAAZ,CAAsBlN,KAAtB,CAA6BgN,SAA7B,CAAwC,CAAA,IAC3DvL,IAAMrI,IAAKqI,CAAAA,GAAL,CAASyL,QAAT,CADqD,CAE3DxL,IAAMtI,IAAKsI,CAAAA,GAAL,CAASwL,QAAT,CACNzD,UAAAA,CAASuD,SAAA,CAAY/D,SAAUkD,CAAAA,SAAV,CAAoBnC,SAApB,CAAZ,CAA6CA,SAAUP,CAAAA,MAEpE,KAAK,IAAIlV,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkV,SAAO9R,CAAAA,MAA3B,CAAmCpD,CAAA,EAAnC,CAAwC,CAAA,IAChCqP,KAAO6F,SAAA,CAAOlV,CAAP,CADyB,CAEhC8Q,GAAKzB,IAAKlD,CAAAA,QAASnB,CAAAA,CAAnB8F,CAAuBrF,KAAMT,CAAAA,CAFG,CAGhC+F,GAAK1B,IAAKlD,CAAAA,QAASlB,CAAAA,CAAnB8F,CAAuBtF,KAAMR,CAAAA,CAEjC0J,KAAKiE,CAAAA,WAAL,CAAiBvJ,IAAjB;AAAuB,CACnBrE,EAAGS,KAAMT,CAAAA,CAATA,EAAc8F,EAAd9F,CAAmBkC,GAAnBlC,CAAyB+F,EAAzB/F,CAA8BmC,GAA9BnC,CADmB,CAEnBC,EAAGQ,KAAMR,CAAAA,CAATA,EAAc6F,EAAd7F,CAAmBkC,GAAnBlC,CAAyB8F,EAAzB9F,CAA8BiC,GAA9BjC,CAFmB,CAAvB,CAKA0J,KAAK7H,CAAAA,MAAL,CAAYuC,IAAZ,CAAkBsJ,QAAlB,CAVoC,CAaxCjE,SAAUa,CAAAA,WAAV,CAAsBE,SAAtB,CAAiC,CAAA,CAAjC,CAAuC,CAAA,CAAvC,CAA6C,CAAA,CAA7C,CAEA,OAAOA,UApBwD,CAgCnEf,UAAUxD,CAAAA,KAAV,CAAkB2H,QAAQ,CAACpD,SAAD,CAAYrE,MAAZ,CAAoBC,MAApB,CAA4B5F,KAA5B,CAAmCgN,SAAnC,CAA8C,CAChEvD,SAAAA,CAASuD,SAAA,CAAY/D,SAAUkD,CAAAA,SAAV,CAAoBnC,SAApB,CAAZ,CAA6CA,SAAUP,CAAAA,MAEpE,KAAK,IAAIlV,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkV,SAAO9R,CAAAA,MAA3B,CAAmCpD,CAAA,EAAnC,CAAwC,CAAA,IAChCqP,KAAO6F,SAAA,CAAOlV,CAAP,CAIX2U,KAAKiE,CAAAA,WAAL,CAAiBvJ,IAAjB,CAAuB,CACnBrE,EAAGS,KAAMT,CAAAA,CAATA,EAJKqE,IAAKlD,CAAAA,QAASnB,CAAAA,CAInBA,CAJuBS,KAAMT,CAAAA,CAI7BA,EAAkBoG,MADC,CAEnBnG,EAAGQ,KAAMR,CAAAA,CAATA,EAJKoE,IAAKlD,CAAAA,QAASlB,CAAAA,CAInBA,CAJuBQ,KAAMR,CAAAA,CAI7BA,EAAkBoG,MAFC,CAAvB,CAKAsD,KAAKzD,CAAAA,KAAL,CAAW7B,IAAX,CAAiB+B,MAAjB,CAAyBC,MAAzB,CAVoC,CAaxCqD,SAAUa,CAAAA,WAAV,CAAsBE,SAAtB;AAAiC,CAAA,CAAjC,CAAuC,CAAA,CAAvC,CAA6C,CAAA,CAA7C,CAEA,OAAOA,UAlB6D,CA2BxEf,UAAU3J,CAAAA,MAAV,CAAmB+N,QAAQ,CAACrD,SAAD,CAAY,CAC/BP,SAAAA,CAASR,SAAUkD,CAAAA,SAAV,CAAoBnC,SAApB,CAGb,KAHA,IACI3K,SAAW,EADf,CAGS9K,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkV,SAAO9R,CAAAA,MAA3B,CAAmCpD,CAAnC,EAAwC,CAAxC,CAA2C,CACvC,IAAIqP,KAAO6F,SAAA,CAAOlV,CAAP,CACX8K,SAASlH,CAAAA,IAAT,CAAcyL,IAAKtE,CAAAA,MAAO3E,CAAAA,GAA1B,CAA+BiJ,IAAKtE,CAAAA,MAAO1E,CAAAA,GAA3C,CAFuC,CAK3C,MAAOuE,OAAOpJ,CAAAA,MAAP,CAAcsJ,QAAd,CAT4B,CAzgB/B,CAAX,CAAD,EAxBsD,CAxhD5C,CA6sEH,QAAQ,CAACzL,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAYtD,IAAI8U,KAAO,EAEXtV,OAAOC,CAAAA,OAAP,CAAiBqV,IAEjB,KAAIzF,SAAWrP,mBAAA,CAAoB,CAApB,CAAf,CACIyM,OAASzM,mBAAA,CAAoB,CAApB,CADb,CAEIkZ,SAAWlZ,mBAAA,CAAoB,CAApB,CACFA,oBAAA,CAAoB,EAApB,CACb,KAAIyC,OAASzC,mBAAA,CAAoB,CAApB,CAAb,CACI+K;AAAS/K,mBAAA,CAAoB,CAApB,CADb,CAEImZ,KAAOnZ,mBAAA,CAAoB,EAApB,CAEV,UAAQ,EAAG,CAER8U,IAAKsE,CAAAA,aAAL,CAAqB,CACrBtE,KAAKuE,CAAAA,qBAAL,CAA6B,CAC7BvE,KAAKwE,CAAAA,wBAAL,CAAgC,EAChCxE,KAAKyE,CAAAA,aAAL,CAAqB,CAWrBzE,KAAKnT,CAAAA,MAAL,CAAc6X,QAAQ,CAACxE,OAAD,CAAU,CAC5B,IAAIyE,SAAW,CACXxE,GAAIxS,MAAOiG,CAAAA,MAAP,EADO,CAEXwM,KAAM,MAFK,CAGXM,MAAO,MAHI,CAIX7Q,MAAO,EAJI,CAKX8Q,OAAQ,EALG,CAMXtI,MAAO,CANI,CAOXlC,SAAUoE,QAASM,CAAAA,QAAT,CAAkB,6BAAlB,CAPC,CAQXrD,SAAU,CAAEnB,EAAG,CAAL,CAAQC,EAAG,CAAX,CARC,CASXsO,MAAO,CAAEvO,EAAG,CAAL,CAAQC,EAAG,CAAX,CATI,CAUXuO,OAAQ,CAVG,CAWXC,gBAAiB,CAAEzO,EAAG,CAAL,CAAQC,EAAG,CAAX,CAXN,CAYXyO,kBAAmB,CAAE1O,EAAG,CAAL,CAAQC,EAAG,CAAX,CAAc+B,MAAO,CAArB,CAZR,CAaX2M,cAAe,CAbJ,CAcXC,MAAO,CAdI,CAeXC,aAAc,CAfH,CAgBXzO,SAAU,CAAEJ,EAAG,CAAL,CAAQC,EAAG,CAAX,CAhBC;AAiBX6O,gBAAiB,CAjBN,CAkBXC,SAAU,CAAA,CAlBC,CAmBXpC,SAAU,CAAA,CAnBC,CAoBXqC,WAAY,CAAA,CApBD,CAqBXC,OAAQ,CArBG,CAsBXC,eAAgB,EAtBL,CAuBXC,QAAS,IAvBE,CAwBXC,YAAa,CAxBF,CAyBXC,SAAU,EAzBC,CA0BXC,eAAgB,EA1BL,CA2BXC,YAAa,GA3BF,CA4BXC,gBAAiB,CACbC,SAAU,CADG,CAEbC,KAAM,UAFO,CAGbC,MAAO,CAHM,CA5BN,CAiCXC,KAAM,GAjCK,CAkCXC,UAAW,CAlCA,CAmCXC,OAAQ,CACJC,QAAS,CAAA,CADL,CAEJC,QAAS,CAFL,CAGJC,YAAa,IAHT,CAIJC,UAAW,IAJP,CAKJC,UAAW,IALP,CAMJC,OAAQ,CACJC,OAAQ,CADJ,CAEJC,OAAQ,CAFJ,CAGJC,QAAS,CAHL,CAIJC,QAAS,CAJL,CANJ,CAnCG,CAgDXvH,OAAQ,IAhDG,CAiDXlJ,OAAQ,IAjDG,CAkDXwG,QAAS,IAlDE,CAmDXkK,aAAc,CAnDH,CAoDXC,aAAc,IApDH,CAqDXC,UAAW,CArDA,CAsDX3G,OAAQ,IAtDG,CAuDX4G,KAAM,IAvDK,CAwDX7L,KAAM,CAxDK,CAyDXS,KAAM,CAzDK,CA0DXF,QAAS,CA1DE,CA2DXuL,UAAW,IA3DA,CA8DXxM,SAAAA;AAAO/M,MAAOO,CAAAA,MAAP,CAAcyW,QAAd,CAAwBzE,OAAxB,CAyCXA,QAAA,CAvCsBA,OAuCtB,EAAqB,EAGrBF,KAAKtQ,CAAAA,GAAL,CA1CgBgL,QA0ChB,CAAe,CACXtE,OA3CYsE,QA2CCtE,CAAAA,MAAbA,EAAuBH,MAAOpJ,CAAAA,MAAP,CA3CX6N,QA2C8BvE,CAAAA,QAAnB,CADZ,CAEX4Q,aA5CYrM,QA4COqM,CAAAA,YAAnBA,EAAmCpP,MAAO9I,CAAAA,KAAP,CA5CvB6L,QA4CyClD,CAAAA,QAAlB,CAFxB,CAGXwP,UA7CYtM,QA6CIsM,CAAAA,SAAhBA,EA7CYtM,QA6CsBrC,CAAAA,KAHvB,CAIXlC,SA9CYuE,QA8CGvE,CAAAA,QAJJ,CAKXtG,MA/CY6K,QA+CA7K,CAAAA,KAAZA,EAAqB,CA/CT6K,QA+CS,CALV,CAMXsI,SAhDYtI,QAgDGsI,CAAAA,QANJ,CAOXqC,WAjDY3K,QAiDK2K,CAAAA,UAPN,CAQXhF,OAlDY3F,QAkDC2F,CAAAA,MAAbA,EAlDY3F,QA0CD,CAAf,CAWAH,SAASpC,CAAAA,MAAT,CArDgBuC,QAqDKvE,CAAAA,QAArB,CArDgBuE,QAqDoBrC,CAAAA,KAApC,CArDgBqC,QAqDgClD,CAAAA,QAAhD,CACA6M,KAAKlM,CAAAA,MAAL,CAtDgBuC,QAsDCuM,CAAAA,IAAjB,CAtDgBvM,QAsDYrC,CAAAA,KAA5B,CACApC;MAAOM,CAAAA,MAAP,CAvDgBmE,QAuDGtE,CAAAA,MAAnB,CAvDgBsE,QAuDgBvE,CAAAA,QAAhC,CAvDgBuE,QAuD+BjE,CAAAA,QAA/C,CAGAuJ,KAAKtQ,CAAAA,GAAL,CA1DgBgL,QA0DhB,CAAe,CACXuM,KAAM/G,OAAQ+G,CAAAA,IAAdA,EA3DYvM,QA2DeuM,CAAAA,IADhB,CAEX7L,KAAM8E,OAAQ9E,CAAAA,IAAdA,EA5DYV,QA4DeU,CAAAA,IAFhB,CAGXS,KAAMqE,OAAQrE,CAAAA,IAAdA,EA7DYnB,QA6DemB,CAAAA,IAHhB,CAIXF,QAASuE,OAAQvE,CAAAA,OAAjBA,EA9DYjB,QA8DqBiB,CAAAA,OAJtB,CAAf,CAQIwL,QAAAA,CAlEYzM,QAkEasI,CAAAA,QAAL,CAAgB,SAAhB,CAA4BrV,MAAO2C,CAAAA,MAAP,CAAc,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,SAA7C,CAAd,CA5BV,KA6BtC8W,mBAnEY1M,QAmEcsI,CAAAA,QAAL,CAAgB,MAAhB,CAAyB,MA7BR,CA8BtCqE,iBApEY3M,QAoEYsI,CAAAA,QAAL,EAA2C,IAA3C,GApEPtI,QAoE6ByL,CAAAA,MAAOI,CAAAA,SAA7B,CAAkD,CAAlD,CAAsD,CApE7D7L,SAqEXyL,CAAAA,MAAOI,CAAAA,SAAZ,CArEgB7L,QAqEayL,CAAAA,MAAOI,CAAAA,SAApC;AAAiDY,OArEjCzM,SAsEXyL,CAAAA,MAAOG,CAAAA,WAAZ,CAtEgB5L,QAsEeyL,CAAAA,MAAOG,CAAAA,WAAtC,EAAqDc,kBAtErC1M,SAuEXyL,CAAAA,MAAOK,CAAAA,SAAZ,CAvEgB9L,QAuEayL,CAAAA,MAAOK,CAAAA,SAApC,EAAiDa,gBAvEjC3M,SAwEXyL,CAAAA,MAAOM,CAAAA,MAAOG,CAAAA,OAAnB,EAA8B,EAxEdlM,QAwEqBtE,CAAAA,MAAO3E,CAAAA,GAAI4E,CAAAA,CAAlB,CAxEdqE,QAwEyClD,CAAAA,QAASnB,CAAAA,CAApC,CAA9B,EAxEgBqE,QAwE6DtE,CAAAA,MAAO1E,CAAAA,GAAI2E,CAAAA,CAAxF,CAxEgBqE,QAwEiFtE,CAAAA,MAAO3E,CAAAA,GAAI4E,CAAAA,CAA5G,CAxEgBqE,SAyEXyL,CAAAA,MAAOM,CAAAA,MAAOI,CAAAA,OAAnB,EAA8B,EAzEdnM,QAyEqBtE,CAAAA,MAAO3E,CAAAA,GAAI6E,CAAAA,CAAlB,CAzEdoE,QAyEyClD,CAAAA,QAASlB,CAAAA,CAApC,CAA9B,EAzEgBoE,QAyE6DtE,CAAAA,MAAO1E,CAAAA,GAAI4E,CAAAA,CAAxF,CAzEgBoE,QAyEiFtE,CAAAA,MAAO3E,CAAAA,GAAI6E,CAAAA,CAA5G,CAvEA,OAAOoE,SAnEqB,CA8EhCsF,KAAKsH,CAAAA,SAAL,CAAiBC,QAAQ,CAACC,cAAD,CAAiB,CACtC,MAAIA,eAAJ,CACWxH,IAAKwE,CAAAA,wBAAL,EADX;AAGOxE,IAAKuE,CAAAA,qBAAL,EAJ+B,CAa1CvE,KAAKyH,CAAAA,YAAL,CAAoBC,QAAQ,EAAG,CAC3B1H,IAAKyE,CAAAA,aAAL,GAA2C,CAC3C,OAAOzE,KAAKyE,CAAAA,aAFe,CA0D/BzE,KAAKtQ,CAAAA,GAAL,CAAWiY,QAAQ,CAACjN,IAAD,CAAOkN,QAAP,CAAiBrb,KAAjB,CAAwB,CAGvC,GAAwB,QAAxB,GAAI,MAAOqb,SAAX,CAAkC,CAC9B,IAAAta,SAAWsa,QACXA,SAAA,CAAW,EACXA,SAAA,CAASta,QAAT,CAAA,CAAqBf,KAHS,CAMlC,IAAKe,QAAL,GAAiBsa,SAAjB,CACI,GAAK7b,MAAOwB,CAAAA,SAAUC,CAAAA,cAAejC,CAAAA,IAAhC,CAAqCqc,QAArC,CAA+Cta,QAA/C,CAAL,CAIA,OADAf,KACQe,CADAsa,QAAA,CAASta,QAAT,CACAA,CAAAA,QAAR,EAEA,KAAK,UAAL,CACI0S,IAAK6H,CAAAA,SAAL,CAAenN,IAAf,CAAqBnO,KAArB,CACA,MACJ,MAAK,YAAL,CACI6X,QAAS1U,CAAAA,GAAT,CAAagL,IAAb,CAAmBnO,KAAnB,CACA,MACJ,MAAK,MAAL,CACIyT,IAAK8H,CAAAA,OAAL,CAAapN,IAAb,CAAmBnO,KAAnB,CACA,MACJ;KAAK,SAAL,CACIyT,IAAK+H,CAAAA,UAAL,CAAgBrN,IAAhB,CAAsBnO,KAAtB,CACA,MACJ,MAAK,SAAL,CACIyT,IAAKgI,CAAAA,UAAL,CAAgBtN,IAAhB,CAAsBnO,KAAtB,CACA,MACJ,MAAK,UAAL,CACIyT,IAAKiI,CAAAA,WAAL,CAAiBvN,IAAjB,CAAuBnO,KAAvB,CACA,MACJ,MAAK,UAAL,CACIyT,IAAKiE,CAAAA,WAAL,CAAiBvJ,IAAjB,CAAuBnO,KAAvB,CACA,MACJ,MAAK,OAAL,CACIyT,IAAKkI,CAAAA,QAAL,CAAcxN,IAAd,CAAoBnO,KAApB,CACA,MACJ,MAAK,UAAL,CACIyT,IAAKmI,CAAAA,WAAL,CAAiBzN,IAAjB,CAAuBnO,KAAvB,CACA,MACJ,MAAK,iBAAL,CACIyT,IAAKoI,CAAAA,kBAAL,CAAwB1N,IAAxB,CAA8BnO,KAA9B,CACA,MACJ,MAAK,OAAL,CACIyT,IAAKqI,CAAAA,QAAL,CAAc3N,IAAd,CAAoBnO,KAApB,CACA,MACJ,MAAK,QAAL,CACIyT,IAAKsI,CAAAA,SAAL,CAAe5N,IAAf,CAAqBnO,KAArB,CACA,MACJ,SACImO,IAAA,CAAKpN,QAAL,CAAA,CAAiBf,KAvCrB,CAdmC,CAiE3CyT,KAAK6H,CAAAA,SAAL,CAAiBU,QAAQ,CAAC7N,IAAD;AAAOsI,QAAP,CAAiB,CACtC,IAAK,IAAI3X,EAAI,CAAb,CAAgBA,CAAhB,CAAoBqP,IAAK7K,CAAAA,KAAMpB,CAAAA,MAA/B,CAAuCpD,CAAA,EAAvC,CAA4C,CACxC,IAAImd,KAAO9N,IAAK7K,CAAAA,KAAL,CAAWxE,CAAX,CAGX,EAFAmd,IAAKxF,CAAAA,QAEL,CAFgBA,QAEhB,GACIwF,IAAKtB,CAAAA,SAqBL,CArBiB,CACbzB,YAAa+C,IAAK/C,CAAAA,WADL,CAEbC,SAAU8C,IAAK9C,CAAAA,QAFF,CAGb7J,KAAM2M,IAAK3M,CAAAA,IAHE,CAIbF,QAAS6M,IAAK7M,CAAAA,OAJD,CAKb6J,QAASgD,IAAKhD,CAAAA,OALD,CAMbiD,YAAaD,IAAKC,CAAAA,WANL,CAObC,eAAgBF,IAAKE,CAAAA,cAPR,CAqBjB,CAXAF,IAAK/C,CAAAA,WAWL,CAXmB,CAWnB,CAVA+C,IAAK9C,CAAAA,QAUL,CAVgB,CAUhB,CATA8C,IAAK3M,CAAAA,IASL,CATY2M,IAAK7M,CAAAA,OASjB,CAT2B6M,IAAKhD,CAAAA,OAShC,CAT0C9O,QAS1C,CARA8R,IAAKC,CAAAA,WAQL,CARmBD,IAAKE,CAAAA,cAQxB,CARyC,CAQzC,CANAF,IAAKzB,CAAAA,YAAa1Q,CAAAA,CAMlB,CANsBmS,IAAKhR,CAAAA,QAASnB,CAAAA,CAMpC,CALAmS,IAAKzB,CAAAA,YAAazQ,CAAAA,CAKlB,CALsBkS,IAAKhR,CAAAA,QAASlB,CAAAA,CAKpC,CAJAkS,IAAKxB,CAAAA,SAIL,CAJiBwB,IAAKnQ,CAAAA,KAItB;AAHAmQ,IAAKrD,CAAAA,eAGL,CAHuB,CAGvB,CAFAqD,IAAKvD,CAAAA,KAEL,CAFa,CAEb,CADAuD,IAAKtD,CAAAA,YACL,CADoB,CACpB,CAAAsD,IAAKlD,CAAAA,MAAL,CAAc,CAtBlB,EAuBWkD,IAAKtB,CAAAA,SAvBhB,GAwBIsB,IAAK/C,CAAAA,WAQL,CARmB+C,IAAKtB,CAAAA,SAAUzB,CAAAA,WAQlC,CAPA+C,IAAK9C,CAAAA,QAOL,CAPgB8C,IAAKtB,CAAAA,SAAUxB,CAAAA,QAO/B,CANA8C,IAAK3M,CAAAA,IAML,CANY2M,IAAKtB,CAAAA,SAAUrL,CAAAA,IAM3B,CALA2M,IAAK7M,CAAAA,OAKL,CALe6M,IAAKtB,CAAAA,SAAUvL,CAAAA,OAK9B,CAJA6M,IAAKhD,CAAAA,OAIL,CAJegD,IAAKtB,CAAAA,SAAU1B,CAAAA,OAI9B,CAHAgD,IAAKC,CAAAA,WAGL,CAHmBD,IAAKtB,CAAAA,SAAUuB,CAAAA,WAGlC,CAFAD,IAAKE,CAAAA,cAEL,CAFsBF,IAAKtB,CAAAA,SAAUwB,CAAAA,cAErC,CAAAF,IAAKtB,CAAAA,SAAL,CAAiB,IAhCrB,CAJwC,CADN,CAgD1ClH,KAAK8H,CAAAA,OAAL,CAAea,QAAQ,CAACjO,IAAD,CAAOmB,IAAP,CAAa,CAEhCnB,IAAKiB,CAAAA,OAAL,CADajB,IAAKiB,CAAAA,OAClB,EAD6BjB,IAAKmB,CAAAA,IAClC,CADyC,CACzC,GAAyBA,IAAzB,CAAgC,CAAhC,CACAnB,KAAKgO,CAAAA,cAAL,CAAsB,CAAtB,CAA0BhO,IAAKiB,CAAAA,OAE/BjB;IAAKmB,CAAAA,IAAL,CAAYA,IACZnB,KAAK+N,CAAAA,WAAL,CAAmB,CAAnB,CAAuB/N,IAAKmB,CAAAA,IAC5BnB,KAAK8K,CAAAA,OAAL,CAAe9K,IAAKmB,CAAAA,IAApB,CAA2BnB,IAAKU,CAAAA,IAPA,CAgBpC4E,KAAK+H,CAAAA,UAAL,CAAkBa,QAAQ,CAAClO,IAAD,CAAO8K,OAAP,CAAgB,CACtCxF,IAAK8H,CAAAA,OAAL,CAAapN,IAAb,CAAmB8K,OAAnB,CAA6B9K,IAAKU,CAAAA,IAAlC,CACAV,KAAK8K,CAAAA,OAAL,CAAeA,OAFuB,CAY1CxF,KAAKgI,CAAAA,UAAL,CAAkBa,QAAQ,CAACnO,IAAD,CAAOiB,OAAP,CAAgB,CACtCjB,IAAKiB,CAAAA,OAAL,CAAeA,OACfjB,KAAKgO,CAAAA,cAAL,CAAsB,CAAtB,CAA0BhO,IAAKiB,CAAAA,OAFO,CAiB1CqE,KAAKiI,CAAAA,WAAL,CAAmBa,QAAQ,CAACpO,IAAD,CAAOvE,QAAP,CAAiB,CAGpCuE,IAAKvE,CAAAA,QAAL,CADAA,QAAA,CAAS,CAAT,CAAYuE,CAAAA,IAAhB,GAAyBA,IAAzB,CACoBvE,QADpB,CAGoBoE,QAAS1N,CAAAA,MAAT,CAAgBsJ,QAAhB,CAA0BuE,IAA1B,CAIpBA,KAAKuM,CAAAA,IAAL,CAAY5C,IAAK0E,CAAAA,YAAL,CAAkBrO,IAAKvE,CAAAA,QAAvB,CACZuE,KAAKU,CAAAA,IAAL,CAAYb,QAASa,CAAAA,IAAT,CAAcV,IAAKvE,CAAAA,QAAnB,CACZ6J,KAAK8H,CAAAA,OAAL,CAAapN,IAAb,CAAmBA,IAAK8K,CAAAA,OAAxB;AAAkC9K,IAAKU,CAAAA,IAAvC,CAGIF,SAAAA,CAASX,QAASW,CAAAA,MAAT,CAAgBR,IAAKvE,CAAAA,QAArB,CACboE,SAASpD,CAAAA,SAAT,CAAmBuD,IAAKvE,CAAAA,QAAxB,CAAkC+E,QAAlC,CAA0C,EAA1C,CAGA8E,KAAKgI,CAAAA,UAAL,CAAgBtN,IAAhB,CAAsBsF,IAAKsE,CAAAA,aAA3B,CAA2C/J,QAASoB,CAAAA,OAAT,CAAiBjB,IAAKvE,CAAAA,QAAtB,CAAgCuE,IAAKmB,CAAAA,IAArC,CAA3C,CAGAtB,SAASpD,CAAAA,SAAT,CAAmBuD,IAAKvE,CAAAA,QAAxB,CAAkCuE,IAAKlD,CAAAA,QAAvC,CACAvB,OAAOM,CAAAA,MAAP,CAAcmE,IAAKtE,CAAAA,MAAnB,CAA2BsE,IAAKvE,CAAAA,QAAhC,CAA0CuE,IAAKjE,CAAAA,QAA/C,CAtBwC,CAmC5CuJ,KAAKqI,CAAAA,QAAL,CAAgBW,QAAQ,CAACtO,IAAD,CAAO7K,KAAP,CAAcoZ,QAAd,CAAwB,CAC5C,IAAI5d,CAGJwE,MAAA,CAAQA,KAAMJ,CAAAA,KAAN,CAAY,CAAZ,CACRiL,KAAK7K,CAAAA,KAAMpB,CAAAA,MAAX,CAAoB,CACpBiM,KAAK7K,CAAAA,KAAMZ,CAAAA,IAAX,CAAgByL,IAAhB,CACAA,KAAK2F,CAAAA,MAAL,CAAc3F,IAEd,KAAKrP,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBwE,KAAMpB,CAAAA,MAAtB,CAA8BpD,CAAA,EAA9B,CAAmC,CAC/B,IAAImd,KAAO3Y,KAAA,CAAMxE,CAAN,CACPmd,KAAJ,GAAa9N,IAAb,GACI8N,IAAKnI,CAAAA,MACL,CADc3F,IACd,CAAAA,IAAK7K,CAAAA,KAAMZ,CAAAA,IAAX,CAAgBuZ,IAAhB,CAFJ,CAF+B,CAQnC,GAA0B,CAA1B;AAAI9N,IAAK7K,CAAAA,KAAMpB,CAAAA,MAAf,CAAA,CAMA,GAH+B,WAApBwa,GAAA,MAAOA,SAAPA,CAAkCA,QAAlCA,CAA6C,CAGxD,CAAc,CACN9S,QAAAA,CAAW,EACf,KAAK9K,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBwE,KAAMpB,CAAAA,MAAtB,CAA8BpD,CAAA,EAA9B,CACI8K,QAAA,CAAWA,QAASrD,CAAAA,MAAT,CAAgBjD,KAAA,CAAMxE,CAAN,CAAS8K,CAAAA,QAAzB,CAGfoE,SAAS0D,CAAAA,aAAT,CAAuB9H,QAAvB,CAEIwI,MAAAA,CAAOpE,QAASoE,CAAAA,IAAT,CAAcxI,QAAd,CACP+S,EAAAA,CAAa3O,QAASW,CAAAA,MAAT,CAAgByD,KAAhB,CAEjBqB,KAAKiI,CAAAA,WAAL,CAAiBvN,IAAjB,CAAuBiE,KAAvB,CACApE,SAASpD,CAAAA,SAAT,CAAmBuD,IAAKvE,CAAAA,QAAxB,CAAkC+S,CAAlC,CAZU,CAgBVC,KAAAA,CAAQnJ,IAAKoJ,CAAAA,gBAAL,CAAsB1O,IAAtB,CAEZA,KAAKU,CAAAA,IAAL,CAAY+N,KAAM/N,CAAAA,IAClBV,KAAK2F,CAAAA,MAAL,CAAc3F,IACdA,KAAKlD,CAAAA,QAASnB,CAAAA,CAAd,CAAkB8S,KAAMjO,CAAAA,MAAO7E,CAAAA,CAC/BqE,KAAKlD,CAAAA,QAASlB,CAAAA,CAAd,CAAkB6S,KAAMjO,CAAAA,MAAO5E,CAAAA,CAC/BoE,KAAKqM,CAAAA,YAAa1Q,CAAAA,CAAlB,CAAsB8S,KAAMjO,CAAAA,MAAO7E,CAAAA,CACnCqE,KAAKqM,CAAAA,YAAazQ,CAAAA,CAAlB,CAAsB6S,KAAMjO,CAAAA,MAAO5E,CAAAA,CAEnC0J;IAAK8H,CAAAA,OAAL,CAAapN,IAAb,CAAmByO,KAAMtN,CAAAA,IAAzB,CACAmE,KAAKgI,CAAAA,UAAL,CAAgBtN,IAAhB,CAAsByO,KAAMxN,CAAAA,OAA5B,CACAqE,KAAKiE,CAAAA,WAAL,CAAiBvJ,IAAjB,CAAuByO,KAAMjO,CAAAA,MAA7B,CAjCA,CAjB4C,CAgEhD8E,KAAKsI,CAAAA,SAAL,CAAiBe,QAAQ,CAAC3O,IAAD,CAAOQ,MAAP,CAAeoO,QAAf,CAAyB,CACzCA,QAAL,EAMI5O,IAAKqM,CAAAA,YAAa1Q,CAAAA,CAGlB,EAHuB6E,MAAO7E,CAAAA,CAG9B,CAFAqE,IAAKqM,CAAAA,YAAazQ,CAAAA,CAElB,EAFuB4E,MAAO5E,CAAAA,CAE9B,CADAoE,IAAKlD,CAAAA,QAASnB,CAAAA,CACd,EADmB6E,MAAO7E,CAAAA,CAC1B,CAAAqE,IAAKlD,CAAAA,QAASlB,CAAAA,CAAd,EAAmB4E,MAAO5E,CAAAA,CAT9B,GACIoE,IAAKqM,CAAAA,YAAa1Q,CAAAA,CAGlB,CAHsB6E,MAAO7E,CAAAA,CAG7B,EAHkCqE,IAAKlD,CAAAA,QAASnB,CAAAA,CAGhD,CAHoDqE,IAAKqM,CAAAA,YAAa1Q,CAAAA,CAGtE,EAFAqE,IAAKqM,CAAAA,YAAazQ,CAAAA,CAElB,CAFsB4E,MAAO5E,CAAAA,CAE7B,EAFkCoE,IAAKlD,CAAAA,QAASlB,CAAAA,CAEhD,CAFoDoE,IAAKqM,CAAAA,YAAazQ,CAAAA,CAEtE,EADAoE,IAAKlD,CAAAA,QAASnB,CAAAA,CACd,CADkB6E,MAAO7E,CAAAA,CACzB,CAAAqE,IAAKlD,CAAAA,QAASlB,CAAAA,CAAd,CAAkB4E,MAAO5E,CAAAA,CAJ7B,CAD8C,CAoBlD0J,KAAKiE,CAAAA,WAAL,CAAmBsF,QAAQ,CAAC7O,IAAD,CAAOlD,QAAP,CAAiB,CACpCmF,QAAAA;AAAQhF,MAAO6B,CAAAA,GAAP,CAAWhC,QAAX,CAAqBkD,IAAKlD,CAAAA,QAA1B,CACZkD,KAAKqM,CAAAA,YAAa1Q,CAAAA,CAAlB,EAAuBsG,QAAMtG,CAAAA,CAC7BqE,KAAKqM,CAAAA,YAAazQ,CAAAA,CAAlB,EAAuBqG,QAAMrG,CAAAA,CAE7B,KAAK,IAAIjL,EAAI,CAAb,CAAgBA,CAAhB,CAAoBqP,IAAK7K,CAAAA,KAAMpB,CAAAA,MAA/B,CAAuCpD,CAAA,EAAvC,CAA4C,CACxC,IAAImd,KAAO9N,IAAK7K,CAAAA,KAAL,CAAWxE,CAAX,CACXmd,KAAKhR,CAAAA,QAASnB,CAAAA,CAAd,EAAmBsG,QAAMtG,CAAAA,CACzBmS,KAAKhR,CAAAA,QAASlB,CAAAA,CAAd,EAAmBqG,QAAMrG,CAAAA,CACzBiE,SAASpD,CAAAA,SAAT,CAAmBqR,IAAKrS,CAAAA,QAAxB,CAAkCwG,QAAlC,CACA1G,OAAOM,CAAAA,MAAP,CAAciS,IAAKpS,CAAAA,MAAnB,CAA2BoS,IAAKrS,CAAAA,QAAhC,CAA0CuE,IAAKjE,CAAAA,QAA/C,CALwC,CALJ,CAoB5CuJ,KAAKkI,CAAAA,QAAL,CAAgBsB,QAAQ,CAAC9O,IAAD,CAAOrC,KAAP,CAAc,CACtBA,KAARsE,EAAgBjC,IAAKrC,CAAAA,KACzBqC,KAAKsM,CAAAA,SAAL,EAAkBrK,KAElB,KAAK,IAAItR,EAAI,CAAb,CAAgBA,CAAhB,CAAoBqP,IAAK7K,CAAAA,KAAMpB,CAAAA,MAA/B,CAAuCpD,CAAA,EAAvC,CAA4C,CACxC,IAAImd,KAAO9N,IAAK7K,CAAAA,KAAL,CAAWxE,CAAX,CACXmd,KAAKnQ,CAAAA,KAAL,EAAcsE,KACdpC,SAASpC,CAAAA,MAAT,CAAgBqQ,IAAKrS,CAAAA,QAArB,CAA+BwG,KAA/B;AAAsCjC,IAAKlD,CAAAA,QAA3C,CACA6M,KAAKlM,CAAAA,MAAL,CAAYqQ,IAAKvB,CAAAA,IAAjB,CAAuBtK,KAAvB,CACA1G,OAAOM,CAAAA,MAAP,CAAciS,IAAKpS,CAAAA,MAAnB,CAA2BoS,IAAKrS,CAAAA,QAAhC,CAA0CuE,IAAKjE,CAAAA,QAA/C,CACQ,EAAR,CAAIpL,CAAJ,EACIsM,MAAOc,CAAAA,WAAP,CAAmB+P,IAAKhR,CAAAA,QAAxB,CAAkCmF,KAAlC,CAAyCjC,IAAKlD,CAAAA,QAA9C,CAAwDgR,IAAKhR,CAAAA,QAA7D,CAPoC,CAJV,CAsBtCwI,KAAKmI,CAAAA,WAAL,CAAmBsB,QAAQ,CAAC/O,IAAD,CAAOjE,QAAP,CAAiB,CACxCiE,IAAKqM,CAAAA,YAAa1Q,CAAAA,CAAlB,CAAsBqE,IAAKlD,CAAAA,QAASnB,CAAAA,CAApC,CAAwCI,QAASJ,CAAAA,CACjDqE,KAAKqM,CAAAA,YAAazQ,CAAAA,CAAlB,CAAsBoE,IAAKlD,CAAAA,QAASlB,CAAAA,CAApC,CAAwCG,QAASH,CAAAA,CACjDoE,KAAKjE,CAAAA,QAASJ,CAAAA,CAAd,CAAkBI,QAASJ,CAAAA,CAC3BqE,KAAKjE,CAAAA,QAASH,CAAAA,CAAd,CAAkBG,QAASH,CAAAA,CAC3BoE,KAAKuK,CAAAA,KAAL,CAAatN,MAAOG,CAAAA,SAAP,CAAiB4C,IAAKjE,CAAAA,QAAtB,CAL2B,CAc5CuJ,KAAKoI,CAAAA,kBAAL,CAA0BsB,QAAQ,CAAChP,IAAD,CAAOjE,QAAP,CAAiB,CAC/CiE,IAAKsM,CAAAA,SAAL,CAAiBtM,IAAKrC,CAAAA,KAAtB,CAA8B5B,QAC9BiE,KAAKyK,CAAAA,eAAL;AAAuB1O,QACvBiE,KAAKwK,CAAAA,YAAL,CAAoBhV,IAAKwL,CAAAA,GAAL,CAAShB,IAAKyK,CAAAA,eAAd,CAH2B,CAYnDnF,KAAK7I,CAAAA,SAAL,CAAiBwS,QAAQ,CAACjP,IAAD,CAAOmJ,WAAP,CAAoB,CACzC7D,IAAKiE,CAAAA,WAAL,CAAiBvJ,IAAjB,CAAuB/C,MAAO2B,CAAAA,GAAP,CAAWoB,IAAKlD,CAAAA,QAAhB,CAA0BqM,WAA1B,CAAvB,CADyC,CAW7C7D,KAAK7H,CAAAA,MAAL,CAAcyR,QAAQ,CAAClP,IAAD,CAAOsJ,QAAP,CAAiBlN,KAAjB,CAAwB,CAC1C,GAAKA,KAAL,CAEO,CAAA,IACCyB,IAAMrI,IAAKqI,CAAAA,GAAL,CAASyL,QAAT,CADP,CAECxL,IAAMtI,IAAKsI,CAAAA,GAAL,CAASwL,QAAT,CAFP,CAGC7H,GAAKzB,IAAKlD,CAAAA,QAASnB,CAAAA,CAAnB8F,CAAuBrF,KAAMT,CAAAA,CAH9B,CAIC+F,GAAK1B,IAAKlD,CAAAA,QAASlB,CAAAA,CAAnB8F,CAAuBtF,KAAMR,CAAAA,CAEjC0J,KAAKiE,CAAAA,WAAL,CAAiBvJ,IAAjB,CAAuB,CACnBrE,EAAGS,KAAMT,CAAAA,CAATA,EAAc8F,EAAd9F,CAAmBkC,GAAnBlC,CAAyB+F,EAAzB/F,CAA8BmC,GAA9BnC,CADmB,CAEnBC,EAAGQ,KAAMR,CAAAA,CAATA,EAAc6F,EAAd7F,CAAmBkC,GAAnBlC,CAAyB8F,EAAzB9F,CAA8BiC,GAA9BjC,CAFmB,CAAvB,CANG,CADH0J,IAAKkI,CAAAA,QAAL,CAAcxN,IAAd,CAAoBA,IAAKrC,CAAAA,KAAzB,CAAiC2L,QAAjC,CAFsC,CA0B9ChE,KAAKzD,CAAAA,KAAL,CAAasN,QAAQ,CAACnP,IAAD,CAAO+B,MAAP,CAAeC,MAAf,CAAuB5F,KAAvB,CAA8B,CAAA,IAC3CgT,UAAY,CAD+B,CAE3CC;AAAe,CAEnBjT,MAAA,CAAQA,KAAR,EAAiB4D,IAAKlD,CAAAA,QAEtB,KAAK,IAAInM,EAAI,CAAb,CAAgBA,CAAhB,CAAoBqP,IAAK7K,CAAAA,KAAMpB,CAAAA,MAA/B,CAAuCpD,CAAA,EAAvC,CAA4C,CACxC,IAAImd,KAAO9N,IAAK7K,CAAAA,KAAL,CAAWxE,CAAX,CAGXkP,SAASgC,CAAAA,KAAT,CAAeiM,IAAKrS,CAAAA,QAApB,CAA8BsG,MAA9B,CAAsCC,MAAtC,CAA8C5F,KAA9C,CAGA0R,KAAKvB,CAAAA,IAAL,CAAY5C,IAAK0E,CAAAA,YAAL,CAAkBP,IAAKrS,CAAAA,QAAvB,CACZqS,KAAKpN,CAAAA,IAAL,CAAYb,QAASa,CAAAA,IAAT,CAAcoN,IAAKrS,CAAAA,QAAnB,CACZ6J,KAAK8H,CAAAA,OAAL,CAAaU,IAAb,CAAmB9N,IAAK8K,CAAAA,OAAxB,CAAkCgD,IAAKpN,CAAAA,IAAvC,CAGAb,SAASpD,CAAAA,SAAT,CAAmBqR,IAAKrS,CAAAA,QAAxB,CAAkC,CAAEE,EAAG,CAACmS,IAAKhR,CAAAA,QAASnB,CAAAA,CAApB,CAAuBC,EAAG,CAACkS,IAAKhR,CAAAA,QAASlB,CAAAA,CAAzC,CAAlC,CACA0J,KAAKgI,CAAAA,UAAL,CAAgBQ,IAAhB,CAAsBxI,IAAKsE,CAAAA,aAA3B,CAA2C/J,QAASoB,CAAAA,OAAT,CAAiB6M,IAAKrS,CAAAA,QAAtB,CAAgCqS,IAAK3M,CAAAA,IAArC,CAA3C,CACAtB,SAASpD,CAAAA,SAAT,CAAmBqR,IAAKrS,CAAAA,QAAxB,CAAkC,CAAEE,EAAGmS,IAAKhR,CAAAA,QAASnB,CAAAA,CAAnB,CAAsBC,EAAGkS,IAAKhR,CAAAA,QAASlB,CAAAA,CAAvC,CAAlC,CAEQ,EAAR,CAAIjL,CAAJ,GACIye,SACA;AADatB,IAAKpN,CAAAA,IAClB,CAAA2O,YAAA,EAAgBvB,IAAK7M,CAAAA,OAFzB,CAMA6M,KAAKhR,CAAAA,QAASnB,CAAAA,CAAd,CAAkBS,KAAMT,CAAAA,CAAxB,EAA6BmS,IAAKhR,CAAAA,QAASnB,CAAAA,CAA3C,CAA+CS,KAAMT,CAAAA,CAArD,EAA0DoG,MAC1D+L,KAAKhR,CAAAA,QAASlB,CAAAA,CAAd,CAAkBQ,KAAMR,CAAAA,CAAxB,EAA6BkS,IAAKhR,CAAAA,QAASlB,CAAAA,CAA3C,CAA+CQ,KAAMR,CAAAA,CAArD,EAA0DoG,MAG1DzG,OAAOM,CAAAA,MAAP,CAAciS,IAAKpS,CAAAA,MAAnB,CAA2BoS,IAAKrS,CAAAA,QAAhC,CAA0CuE,IAAKjE,CAAAA,QAA/C,CA1BwC,CA8BpB,CAAxB,CAAIiE,IAAK7K,CAAAA,KAAMpB,CAAAA,MAAf,GACIiM,IAAKU,CAAAA,IAEL,CAFY0O,SAEZ,CAAKpP,IAAKsI,CAAAA,QAAV,GACIhD,IAAK8H,CAAAA,OAAL,CAAapN,IAAb,CAAmBA,IAAK8K,CAAAA,OAAxB,CAAkCsE,SAAlC,CACA,CAAA9J,IAAKgI,CAAAA,UAAL,CAAgBtN,IAAhB,CAAsBqP,YAAtB,CAFJ,CAHJ,CAUIrP,KAAKoM,CAAAA,YAAT,GAEQpM,IAAKoM,CAAAA,YAFb,CACQrK,MAAJ,GAAeC,MAAf,CACIhC,IAAKoM,CAAAA,YADT,CACyBrK,MADzB,CAIwB,IAL5B,CA9C+C,CAgEnDuD,KAAKzJ,CAAAA,MAAL,CAAcyT,QAAQ,CAACtP,IAAD,CAAOuP,SAAP,CAAkB/D,SAAlB,CAA6BgE,UAA7B,CAAyC,CACvDC,SAAAA,CAAmBja,IAAKuN,CAAAA,GAAL,CAASwM,SAAT;AAAqB/D,SAArB,CAAiCxL,IAAKwL,CAAAA,SAAtC,CAAiD,CAAjD,CAGnBN,UAAAA,CAAc,CAAdA,CAAkBlL,IAAKkL,CAAAA,WAAvBA,CAAqCM,SAArCN,CAAiDlL,IAAKwL,CAAAA,SAA1D,KAEIkE,cAAgB1P,IAAKlD,CAAAA,QAASlB,CAAAA,CAA9B8T,CAAkC1P,IAAKqM,CAAAA,YAAazQ,CAAAA,CAGxDoE,KAAKjE,CAAAA,QAASJ,CAAAA,CAAd,EAJoBqE,IAAKlD,CAAAA,QAASnB,CAAAA,CAIlC,CAJsCqE,IAAKqM,CAAAA,YAAa1Q,CAAAA,CAIxD,EAAmCuP,SAAnC,CAAiDsE,UAAjD,CAAgExP,IAAKkK,CAAAA,KAAMvO,CAAAA,CAA3E,CAA+EqE,IAAKmB,CAAAA,IAApF,CAA4FsO,SAC5FzP,KAAKjE,CAAAA,QAASH,CAAAA,CAAd,CAAmB8T,aAAnB,CAAmCxE,SAAnC,CAAiDsE,UAAjD,CAAgExP,IAAKkK,CAAAA,KAAMtO,CAAAA,CAA3E,CAA+EoE,IAAKmB,CAAAA,IAApF,CAA4FsO,SAE5FzP,KAAKqM,CAAAA,YAAa1Q,CAAAA,CAAlB,CAAsBqE,IAAKlD,CAAAA,QAASnB,CAAAA,CACpCqE,KAAKqM,CAAAA,YAAazQ,CAAAA,CAAlB,CAAsBoE,IAAKlD,CAAAA,QAASlB,CAAAA,CACpCoE,KAAKlD,CAAAA,QAASnB,CAAAA,CAAd,EAAmBqE,IAAKjE,CAAAA,QAASJ,CAAAA,CACjCqE,KAAKlD,CAAAA,QAASlB,CAAAA,CAAd,EAAmBoE,IAAKjE,CAAAA,QAASH,CAAAA,CAGjCoE,KAAKyK,CAAAA,eAAL,EAAyBzK,IAAKrC,CAAAA,KAA9B,CAAsCqC,IAAKsM,CAAAA,SAA3C;AAAwDpB,SAAxD,CAAsEsE,UAAtE,CAAqFxP,IAAKmK,CAAAA,MAA1F,CAAmGnK,IAAKiB,CAAAA,OAAxG,CAAmHwO,SACnHzP,KAAKsM,CAAAA,SAAL,CAAiBtM,IAAKrC,CAAAA,KACtBqC,KAAKrC,CAAAA,KAAL,EAAcqC,IAAKyK,CAAAA,eAGnBzK,KAAKuK,CAAAA,KAAL,CAAatN,MAAOG,CAAAA,SAAP,CAAiB4C,IAAKjE,CAAAA,QAAtB,CACbiE,KAAKwK,CAAAA,YAAL,CAAoBhV,IAAKwL,CAAAA,GAAL,CAAShB,IAAKyK,CAAAA,eAAd,CAGpB,KAAS9Z,UAAT,CAAa,CAAb,CAAgBA,UAAhB,CAAoBqP,IAAK7K,CAAAA,KAAMpB,CAAAA,MAA/B,CAAuCpD,UAAA,EAAvC,CACQmd,SAiBJ,CAjBW9N,IAAK7K,CAAAA,KAAL,CAAWxE,UAAX,CAiBX,CAfAkP,QAASpD,CAAAA,SAAT,CAAmBqR,SAAKrS,CAAAA,QAAxB,CAAkCuE,IAAKjE,CAAAA,QAAvC,CAeA,CAbQ,CAaR,CAbIpL,UAaJ,GAZImd,SAAKhR,CAAAA,QAASnB,CAAAA,CACd,EADmBqE,IAAKjE,CAAAA,QAASJ,CAAAA,CACjC,CAAAmS,SAAKhR,CAAAA,QAASlB,CAAAA,CAAd,EAAmBoE,IAAKjE,CAAAA,QAASH,CAAAA,CAWrC,EAR6B,CAQ7B,GARIoE,IAAKyK,CAAAA,eAQT,GAPI5K,QAASpC,CAAAA,MAAT,CAAgBqQ,SAAKrS,CAAAA,QAArB;AAA+BuE,IAAKyK,CAAAA,eAApC,CAAqDzK,IAAKlD,CAAAA,QAA1D,CAEA,CADA6M,IAAKlM,CAAAA,MAAL,CAAYqQ,SAAKvB,CAAAA,IAAjB,CAAuBvM,IAAKyK,CAAAA,eAA5B,CACA,CAAQ,CAAR,CAAI9Z,UAAJ,EACIsM,MAAOc,CAAAA,WAAP,CAAmB+P,SAAKhR,CAAAA,QAAxB,CAAkCkD,IAAKyK,CAAAA,eAAvC,CAAwDzK,IAAKlD,CAAAA,QAA7D,CAAuEgR,SAAKhR,CAAAA,QAA5E,CAIR,EAAAvB,MAAOM,CAAAA,MAAP,CAAciS,SAAKpS,CAAAA,MAAnB,CAA2BoS,SAAKrS,CAAAA,QAAhC,CAA0CuE,IAAKjE,CAAAA,QAA/C,CA7CuD,CAwD/DuJ,KAAKqK,CAAAA,UAAL,CAAkBC,QAAQ,CAAC5P,IAAD,CAAOlD,QAAP,CAAiBoN,KAAjB,CAAwB,CAC9ClK,IAAKkK,CAAAA,KAAMvO,CAAAA,CAAX,EAAgBuO,KAAMvO,CAAAA,CACtBqE,KAAKkK,CAAAA,KAAMtO,CAAAA,CAAX,EAAgBsO,KAAMtO,CAAAA,CAEtBoE,KAAKmK,CAAAA,MAAL,GADkBrN,QAASnB,CAAAA,CAC3B,CAD+BqE,IAAKlD,CAAAA,QAASnB,CAAAA,CAC7C,EAA0BuO,KAAMtO,CAAAA,CAAhC,EADmDkB,QAASlB,CAAAA,CAC5D,CADgEoE,IAAKlD,CAAAA,QAASlB,CAAAA,CAC9E,EAA+CsO,KAAMvO,CAAAA,CAJP,CAclD2J,KAAKoJ,CAAAA,gBAAL,CAAwBmB,QAAQ,CAAC7P,IAAD,CAAO,CAanC,IARA,IAAI8P,WAAa,CACb3O,KAAM,CADO;AAEbT,KAAM,CAFO,CAGbO,QAAS,CAHI,CAIbT,OAAQ,CAAE7E,EAAG,CAAL,CAAQC,EAAG,CAAX,CAJK,CAAjB,CAQSjL,EAA0B,CAAtB,GAAAqP,IAAK7K,CAAAA,KAAMpB,CAAAA,MAAX,CAA0B,CAA1B,CAA8B,CAA3C,CAA8CpD,CAA9C,CAAkDqP,IAAK7K,CAAAA,KAAMpB,CAAAA,MAA7D,CAAqEpD,CAAA,EAArE,CAA0E,CAAA,IAClEmd,KAAO9N,IAAK7K,CAAAA,KAAL,CAAWxE,CAAX,CAD2D,CAElEwQ,KAAqBnF,QAAd,GAAA8R,IAAK3M,CAAAA,IAAL,CAAyB2M,IAAK3M,CAAAA,IAA9B,CAAqC,CAEhD2O,WAAW3O,CAAAA,IAAX,EAAmBA,IACnB2O,WAAWpP,CAAAA,IAAX,EAAmBoN,IAAKpN,CAAAA,IACxBoP,WAAW7O,CAAAA,OAAX,EAAsB6M,IAAK7M,CAAAA,OAC3B6O,WAAWtP,CAAAA,MAAX,CAAoBvD,MAAO2B,CAAAA,GAAP,CAAWkR,UAAWtP,CAAAA,MAAtB,CAA8BvD,MAAO+B,CAAAA,IAAP,CAAY8O,IAAKhR,CAAAA,QAAjB,CAA2BqE,IAA3B,CAA9B,CAPkD,CAU1E2O,UAAWtP,CAAAA,MAAX,CAAoBvD,MAAOkC,CAAAA,GAAP,CAAW2Q,UAAWtP,CAAAA,MAAtB,CAA8BsP,UAAW3O,CAAAA,IAAzC,CAEpB,OAAO2O,WAzB4B,CAzqB/B,CAAX,CAAD,EAxBsD,CA7sE5C,CAs6GH,QAAQ,CAAC9f,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAQtD,IAAIkZ,SAAW,EAEf1Z,OAAOC,CAAAA,OAAP,CAAiByZ,QAEjB,KAAIpF,OAAS9T,mBAAA,CAAoB,CAApB,CAEZ;SAAQ,EAAG,CAERkZ,QAASqG,CAAAA,oBAAT,CAAgC,GAChCrG,SAASsG,CAAAA,qBAAT,CAAiC,GACjCtG,SAASuG,CAAAA,QAAT,CAAoB,EAQpBvG,SAAS7N,CAAAA,MAAT,CAAkBqU,QAAQ,CAACrK,MAAD,CAAS2F,SAAT,CAAoB,CACtC2E,SAAAA,EAAa3E,SAAb2E,CAAyB3E,SAG7B,KAAK,IAAI7a,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkV,MAAO9R,CAAAA,MAA3B,CAAmCpD,CAAA,EAAnC,CAAwC,CAAA,IAChCqP,KAAO6F,MAAA,CAAOlV,CAAP,CADyB,CAEhCia,OAAS5K,IAAKuK,CAAAA,KAAdK,CAAsB5K,IAAKuK,CAAAA,KAA3BK,CAAmC5K,IAAKwK,CAAAA,YAAxCI,CAAuD5K,IAAKwK,CAAAA,YAG3C,EAArB,GAAIxK,IAAKkK,CAAAA,KAAMvO,CAAAA,CAAf,EAA2C,CAA3C,GAA0BqE,IAAKkK,CAAAA,KAAMtO,CAAAA,CAArC,CACI8N,QAAS1U,CAAAA,GAAT,CAAagL,IAAb,CAAmB,CAAA,CAAnB,CADJ,EASAA,IAAK4K,CAAAA,MAEL,CAFclB,QAASuG,CAAAA,QAEvB,CANgBza,IAAKuB,CAAAA,GAALqZ,CAASpQ,IAAK4K,CAAAA,MAAdwF,CAAsBxF,MAAtBwF,CAMhB,EAF+C,CAE/C,CAFmD1G,QAASuG,CAAAA,QAE5D,EALgBza,IAAKwB,CAAAA,GAALqZ,CAASrQ,IAAK4K,CAAAA,MAAdyF,CAAsBzF,MAAtByF,CAKhB,CAA0B,CAA1B,CAAIrQ,IAAK6K,CAAAA,cAAT,EAA+B7K,IAAK4K,CAAAA,MAApC,CAA6ClB,QAASsG,CAAAA,qBAAtD;AAA8EG,SAA9E,EACInQ,IAAKsQ,CAAAA,YAEL,EAFqB,CAErB,CAAItQ,IAAKsQ,CAAAA,YAAT,EAAyBtQ,IAAK6K,CAAAA,cAA9B,EACInB,QAAS1U,CAAAA,GAAT,CAAagL,IAAb,CAAmB,CAAA,CAAnB,CAJR,EAK+B,CAL/B,CAKWA,IAAKsQ,CAAAA,YALhB,EAMI,EAAAtQ,IAAKsQ,CAAAA,YAjBT,CALoC,CAJE,CAqC9C5G,SAAS6G,CAAAA,eAAT,CAA2BC,QAAQ,CAACC,KAAD,CAAQjF,SAAR,CAAmB,CAC9C2E,SAAAA,EAAa3E,SAAb2E,CAAyB3E,SAG7B,KAAK,IAAI7a,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8f,KAAM1c,CAAAA,MAA1B,CAAkCpD,CAAA,EAAlC,CAAuC,CACnC,IAAI+f,KAAOD,KAAA,CAAM9f,CAAN,CAGX,IAAK+f,IAAKC,CAAAA,QAAV,CAAA,CAJmC,IAO/BC,UAAYF,IAAKE,CAAAA,SACjBC,KAAAA,CAAQD,SAAUC,CAAAA,KAAMlL,CAAAA,MAD5B,KAEImL,MAAQF,SAAUE,CAAAA,KAAMnL,CAAAA,MAGvBkL,KAAMlG,CAAAA,UAAX,EAAyBmG,KAAMnG,CAAAA,UAA/B,EAA8CkG,IAAMvI,CAAAA,QAApD,EAAgEwI,KAAMxI,CAAAA,QAAtE,EAGUqC,CAANkG,IAAMlG,CAAAA,UAHV,EAG8BA,CAANmG,KAAMnG,CAAAA,UAH9B,GAIQoG,SAGJ,CAHoBF,IAAMlG,CAAAA,UAAP;AAAqB,CAACkG,IAAMvI,CAAAA,QAA5B,CAAwCuI,IAAxC,CAAgDC,KAGnE,CAFIE,IAEJ,CAFiBD,SAAA,GAAiBF,IAAjB,CAAyBC,KAAzB,CAAiCD,IAElD,CAAI,CAACE,SAAazI,CAAAA,QAAlB,EAA8B0I,IAAWpG,CAAAA,MAAzC,CAAkDlB,QAASqG,CAAAA,oBAA3D,CAAkFI,SAAlF,EACIzG,QAAS1U,CAAAA,GAAT,CAAa+b,SAAb,CAA2B,CAAA,CAA3B,CARR,CARA,CAJmC,CAJW,CAoCtDrH,SAAS1U,CAAAA,GAAT,CAAeic,QAAQ,CAACjR,IAAD,CAAO2K,UAAP,CAAmB,CACtC,IAAIuG,YAAclR,IAAK2K,CAAAA,UAEnBA,WAAJ,EACI3K,IAAK2K,CAAAA,UAcL,CAdkB,CAAA,CAclB,CAbA3K,IAAKsQ,CAAAA,YAaL,CAboBtQ,IAAK6K,CAAAA,cAazB,CAXA7K,IAAKoK,CAAAA,eAAgBzO,CAAAA,CAWrB,CAXyB,CAWzB,CAVAqE,IAAKoK,CAAAA,eAAgBxO,CAAAA,CAUrB,CAVyB,CAUzB,CARAoE,IAAKqM,CAAAA,YAAa1Q,CAAAA,CAQlB,CARsBqE,IAAKlD,CAAAA,QAASnB,CAAAA,CAQpC,CAPAqE,IAAKqM,CAAAA,YAAazQ,CAAAA,CAOlB,CAPsBoE,IAAKlD,CAAAA,QAASlB,CAAAA,CAOpC,CALAoE,IAAKsM,CAAAA,SAKL,CALiBtM,IAAKrC,CAAAA,KAKtB,CAJAqC,IAAKuK,CAAAA,KAIL,CAJa,CAIb,CAHAvK,IAAKwK,CAAAA,YAGL,CAHoB,CAGpB,CAFAxK,IAAK4K,CAAAA,MAEL,CAFc,CAEd,CAAKsG,WAAL;AACI5M,MAAOW,CAAAA,OAAP,CAAejF,IAAf,CAAqB,YAArB,CAhBR,GAmBIA,IAAK2K,CAAAA,UAGL,CAHkB,CAAA,CAGlB,CAFA3K,IAAKsQ,CAAAA,YAEL,CAFoB,CAEpB,CAAIY,WAAJ,EACI5M,MAAOW,CAAAA,OAAP,CAAejF,IAAf,CAAqB,UAArB,CAvBR,CAHsC,CArFlC,CAAX,CAAD,EAdsD,CAt6G5C,CA6iHH,QAAQ,CAAChQ,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAYtD,IAAI2gB,WAAa,EAEjBnhB,OAAOC,CAAAA,OAAP,CAAiBkhB,UAEjB,KAAItR,SAAWrP,mBAAA,CAAoB,CAApB,CAAf,CACIyM,OAASzM,mBAAA,CAAoB,CAApB,CADb,CAEIkZ,SAAWlZ,mBAAA,CAAoB,CAApB,CAFf,CAGI+K,OAAS/K,mBAAA,CAAoB,CAApB,CAHb,CAIImZ,KAAOnZ,mBAAA,CAAoB,EAApB,CAJX,CAKIyC,OAASzC,mBAAA,CAAoB,CAApB,CAEZ,UAAQ,EAAG,CAER2gB,UAAWC,CAAAA,QAAX,CAAsB,EACtBD,WAAWE,CAAAA,aAAX,CAA2B,CAC3BF,WAAWG,CAAAA,UAAX,CAAwB,IAaxBH,WAAWhf,CAAAA,MAAX;AAAoBof,QAAQ,CAAC/L,OAAD,CAAU,CACjBA,OAGFqL,CAAAA,KAAf,EAAwB,CAHPrL,OAGmBgM,CAAAA,MAApC,GAHiBhM,OAIFgM,CAAAA,MADf,CACwB,CAAE7V,EAAG,CAAL,CAAQC,EAAG,CAAX,CADxB,CAHiB4J,QAKFsL,CAAAA,KAAf,EAAwB,CALPtL,OAKmBiM,CAAAA,MAApC,GALiBjM,OAMFiM,CAAAA,MADf,CACwB,CAAE9V,EAAG,CAAL,CAAQC,EAAG,CAAX,CADxB,CANkC,KAU9B8V,cATalM,OAScqL,CAAAA,KAAX,CAAmB5T,MAAO2B,CAAAA,GAAP,CATtB4G,OAS4CqL,CAAAA,KAAM/T,CAAAA,QAA5B,CATtB0I,OASuEgM,CAAAA,MAAjD,CAAnB,CATHhM,OAS4FgM,CAAAA,MAV3E,CAW9BG,cAVanM,OAUcsL,CAAAA,KAAX,CAAmB7T,MAAO2B,CAAAA,GAAP,CAVtB4G,OAU4CsL,CAAAA,KAAMhU,CAAAA,QAA5B,CAVtB0I,OAUuEiM,CAAAA,MAAjD,CAAnB,CAVHjM,OAU4FiM,CAAAA,MACzG1d,cAAAA,CAASkJ,MAAOG,CAAAA,SAAP,CAAiBH,MAAO6B,CAAAA,GAAP,CAAW4S,aAAX,CAA0BC,aAA1B,CAAjB,CAXInM,QAaNzR,CAAAA,MAAX,CAAiD,WAA7B,GAAA,MAbHyR,QAaqBzR,CAAAA,MAAlB,CAbHyR,OAayDzR,CAAAA,MAAtD,CAA+DA,aAblEyR,QAgBNC,CAAAA,EAAX,CAhBiBD,OAgBUC,CAAAA,EAA3B;AAAiCxS,MAAOiG,CAAAA,MAAP,EAhBhBsM,QAiBNQ,CAAAA,KAAX,CAjBiBR,OAiBaQ,CAAAA,KAA9B,EAAuC,YAjBtBR,QAkBNE,CAAAA,IAAX,CAAkB,YAlBDF,QAmBNoM,CAAAA,SAAX,CAnBiBpM,OAmBiBoM,CAAAA,SAAlC,GAAoE,CAApB,CAnB/BpM,OAmB0CzR,CAAAA,MAAX,CAAwB,CAAxB,CAA4B,EAA5E,CAnBiByR,QAoBNqM,CAAAA,OAAX,CApBiBrM,OAoBeqM,CAAAA,OAAhC,EAA2C,CApB1BrM,QAqBNsM,CAAAA,gBAAX,CArBiBtM,OAqBwBsM,CAAAA,gBAAzC,EAA6D,CArB5CtM,QAsBNuM,CAAAA,MAAX,CAtBiBvM,OAsBcqL,CAAAA,KAAX,CAtBHrL,OAsBiCqL,CAAAA,KAAMlT,CAAAA,KAApC,CAtBH6H,OAsB0DuM,CAAAA,MAtB1DvM,QAuBNwM,CAAAA,MAAX,CAvBiBxM,OAuBcsL,CAAAA,KAAX,CAvBHtL,OAuBiCsL,CAAAA,KAAMnT,CAAAA,KAApC,CAvBH6H,OAuB0DwM,CAAAA,MAvB1DxM,QAwBNS,CAAAA,MAAX,CAAoB,EAGhBwF,cAAAA,CAAS,CACTC,QAAS,CAAA,CADA,CAETI,UAAW,CAFF,CAGTF,YAAa,SAHJ,CAITlG,KAAM,MAJG,CAKTuM,QAAS,CAAA,CALA,CAQa,EAA1B,GAnCiBzM,OAmCFzR,CAAAA,MAAf,EAAsD,EAAtD,CAnCiByR,OAmCyBoM,CAAAA,SAA1C;CACInG,aAAO/F,CAAAA,IACP,CADc,KACd,CAAA+F,aAAOwG,CAAAA,OAAP,CAAiB,CAAA,CAFrB,EAGkC,EAHlC,CAnCiBzM,OAsCKoM,CAAAA,SAHtB,GAIInG,aAAO/F,CAAAA,IAJX,CAIkB,QAJlB,CAnCiBF,QA0CNiG,CAAAA,MAAX,CAAoBxY,MAAOO,CAAAA,MAAP,CAAciY,aAAd,CA1CHjG,OA0CoCiG,CAAAA,MAAjC,CAEpB,OA5CiBjG,QADiB,CAsDtC2L,WAAWe,CAAAA,WAAX,CAAyBC,QAAQ,CAACtM,MAAD,CAAS,CACtC,IAAK,IAAIlV,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkV,MAAO9R,CAAAA,MAA3B,CAAmCpD,CAAnC,EAAwC,CAAxC,CAA2C,CAAA,IACnCqP,KAAO6F,MAAA,CAAOlV,CAAP,CAD4B,CAEnCyhB,QAAUpS,IAAKqK,CAAAA,iBAEfrK,KAAKsI,CAAAA,QAAT,EAAoC,CAApC,GAAsB8J,OAAQzW,CAAAA,CAA9B,EAAuD,CAAvD,GAAyCyW,OAAQxW,CAAAA,CAAjD,EAA8E,CAA9E,GAA4DwW,OAAQzU,CAAAA,KAApE,GAIAqC,IAAKlD,CAAAA,QAASnB,CAAAA,CAEd,EAFmByW,OAAQzW,CAAAA,CAE3B,CADAqE,IAAKlD,CAAAA,QAASlB,CAAAA,CACd,EADmBwW,OAAQxW,CAAAA,CAC3B,CAAAoE,IAAKrC,CAAAA,KAAL,EAAcyU,OAAQzU,CAAAA,KANtB,CAJuC,CADL,CAsB1CwT,WAAWkB,CAAAA,QAAX,CAAsBC,QAAQ,CAACxM,WAAD,CAAc0F,SAAd,CAAyB,CAEnD,IAAK,IAAI7a;AAAI,CAAb,CAAgBA,CAAhB,CAAoBmV,WAAY/R,CAAAA,MAAhC,CAAwCpD,CAAxC,EAA6C,CAA7C,CAAgD,CAAA,IACxCkW,WAAaf,WAAA,CAAYnV,CAAZ,CAD2B,CAExC4hB,OAAS,CAAC1L,UAAWgK,CAAAA,KAArB0B,EAA+B1L,UAAWgK,CAAAA,KAA1C0B,EAAmD1L,UAAWgK,CAAAA,KAAMvI,CAAAA,QACpEkK,WAAAA,CAAS,CAAC3L,UAAWiK,CAAAA,KAArB0B,EAA+B3L,UAAWiK,CAAAA,KAA1C0B,EAAmD3L,UAAWiK,CAAAA,KAAMxI,CAAAA,QAExE,EAAIiK,MAAJ,EAAcC,UAAd,GACIrB,UAAWsB,CAAAA,KAAX,CAAiB3M,WAAA,CAAYnV,CAAZ,CAAjB,CAAiC6a,SAAjC,CANwC,CAWhD,IAAK7a,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBmV,WAAY/R,CAAAA,MAA5B,CAAoCpD,CAApC,EAAyC,CAAzC,CACIkW,UAIA,CAJaf,WAAA,CAAYnV,CAAZ,CAIb,CAHA4hB,MAGA,CAHS,CAAC1L,UAAWgK,CAAAA,KAGrB,EAH+BhK,UAAWgK,CAAAA,KAG1C,EAHmDhK,UAAWgK,CAAAA,KAAMvI,CAAAA,QAGpE,CAFAkK,UAEA,CAFS,CAAC3L,UAAWiK,CAAAA,KAErB,EAF+BjK,UAAWiK,CAAAA,KAE1C,EAFmDjK,UAAWiK,CAAAA,KAAMxI,CAAAA,QAEpE,CAAKiK,MAAL,EAAgBC,UAAhB,EACIrB,UAAWsB,CAAAA,KAAX,CAAiB3M,WAAA,CAAYnV,CAAZ,CAAjB;AAAiC6a,SAAjC,CAnB2C,CA+BvD2F,WAAWsB,CAAAA,KAAX,CAAmBC,QAAQ,CAAC7L,UAAD,CAAa2E,SAAb,CAAwB,CAAA,IAC3CqF,MAAQhK,UAAWgK,CAAAA,KADwB,CAE3CC,MAAQjK,UAAWiK,CAAAA,KAFwB,CAG3CU,OAAS3K,UAAW2K,CAAAA,MAHuB,CAI3CC,OAAS5K,UAAW4K,CAAAA,MAExB,IAAKZ,KAAL,EAAeC,KAAf,CAAA,CAIID,KAAJ,EAAa,CAACA,KAAMvI,CAAAA,QAApB,GACIrL,MAAOQ,CAAAA,MAAP,CAAc+T,MAAd,CAAsBX,KAAMlT,CAAAA,KAA5B,CAAoCkJ,UAAWkL,CAAAA,MAA/C,CAAuDP,MAAvD,CACA,CAAA3K,UAAWkL,CAAAA,MAAX,CAAoBlB,KAAMlT,CAAAA,KAF9B,CAMImT,MAAJ,EAAa,CAACA,KAAMxI,CAAAA,QAApB,GACIrL,MAAOQ,CAAAA,MAAP,CAAcgU,MAAd,CAAsBX,KAAMnT,CAAAA,KAA5B,CAAoCkJ,UAAWmL,CAAAA,MAA/C,CAAuDP,MAAvD,CACA,CAAA5K,UAAWmL,CAAAA,MAAX,CAAoBlB,KAAMnT,CAAAA,KAF9B,CAhB+C,KAqB3CgV,YAAcnB,MArB6B,CAsB3CoB,YAAcnB,MAEdZ,MAAJ,GAAW8B,WAAX,CAAyB1V,MAAO2B,CAAAA,GAAP,CAAWiS,KAAM/T,CAAAA,QAAjB,CAA2B0U,MAA3B,CAAzB,CACIV;KAAJ,GAAW8B,WAAX,CAAyB3V,MAAO2B,CAAAA,GAAP,CAAWkS,KAAMhU,CAAAA,QAAjB,CAA2B2U,MAA3B,CAAzB,CAEA,IAAKkB,WAAL,EAAqBC,WAArB,CAAA,CA3B+C,IA8B3C3Q,MAAQhF,MAAO6B,CAAAA,GAAP,CAAW6T,WAAX,CAAwBC,WAAxB,CA9BmC,CA+B3CC,cAAgB5V,MAAOG,CAAAA,SAAP,CAAiB6E,KAAjB,CAGhB4Q,cAAJ,CAAoB1B,UAAWG,CAAAA,UAA/B,GACIuB,aADJ,CACoB1B,UAAWG,CAAAA,UAD/B,CAOIpH,UAAAA,CAAQjN,MAAO+B,CAAAA,IAAP,CAAYiD,KAAZ,EAFM4Q,aAEN,CAFsBhM,UAAW9S,CAAAA,MAEjC,EAF2C8e,aAE3C,EAD2B,CAAvBjB,CAAA/K,UAAW+K,CAAAA,SAAXA,CAA2B/K,UAAW+K,CAAAA,SAAtCA,CAAkDpG,SAAlDoG,CAA8D/K,UAAW+K,CAAAA,SAC7E,EACRkB,YAAAA,EAAajC,KAAA,CAAQA,KAAM9C,CAAAA,WAAd,CAA4B,CAAzC+E,GAA+ChC,KAAA,CAAQA,KAAM/C,CAAAA,WAAd,CAA4B,CAA3E+E,CAEAC,YAAAA,CAAkBD,WAAlBC,GADgBlC,KAAA,CAAQA,KAAM7C,CAAAA,cAAd;AAA+B,CAC/C+E,GADqDjC,KAAA,CAAQA,KAAM9C,CAAAA,cAAd,CAA+B,CACpF+E,EAOJ,IAAIlM,UAAWgL,CAAAA,OAAf,CAAwB,CAChBmB,IAAAA,eAAO/V,MAAO9K,CAAAA,MAAP,EACX,KAAA8gB,OAAShW,MAAOkC,CAAAA,GAAP,CAAW8C,KAAX,CAAkB4Q,aAAlB,CAETK,eAAA,CAAmBjW,MAAO6B,CAAAA,GAAP,CACfgS,KADe,EACN7T,MAAO6B,CAAAA,GAAP,CAAWgS,KAAMhU,CAAAA,QAAjB,CAA2BgU,KAAMzE,CAAAA,YAAjC,CADM,EAC4C2G,cAD5C,CAEfnC,KAFe,EAEN5T,MAAO6B,CAAAA,GAAP,CAAW+R,KAAM/T,CAAAA,QAAjB,CAA2B+T,KAAMxE,CAAAA,YAAjC,CAFM,EAE4C2G,cAF5C,CAKnBG,eAAA,CAAiBlW,MAAOkB,CAAAA,GAAP,CAAW8U,MAAX,CAAmBC,cAAnB,CATG,CAYpBrC,KAAJ,EAAa,CAACA,KAAMvI,CAAAA,QAApB,GACI8K,KAmBA,CAnBQvC,KAAM9C,CAAAA,WAmBd,CAnB4B+E,WAmB5B,CAhBAjC,KAAMxG,CAAAA,iBAAkB1O,CAAAA,CAgBxB,EAhB6BuO,SAAMvO,CAAAA,CAgBnC,CAhBuCyX,KAgBvC,CAfAvC,KAAMxG,CAAAA,iBAAkBzO,CAAAA,CAexB,EAf6BsO,SAAMtO,CAAAA,CAenC,CAfuCwX,KAevC;AAZAvC,KAAM/T,CAAAA,QAASnB,CAAAA,CAYf,EAZoBuO,SAAMvO,CAAAA,CAY1B,CAZ8ByX,KAY9B,CAXAvC,KAAM/T,CAAAA,QAASlB,CAAAA,CAWf,EAXoBsO,SAAMtO,CAAAA,CAW1B,CAX8BwX,KAW9B,CARIvM,UAAWgL,CAAAA,OAQf,GAPIhB,KAAMxE,CAAAA,YAAa1Q,CAAAA,CACnB,EADwBkL,UAAWgL,CAAAA,OACnC,CAD6CoB,MAAOtX,CAAAA,CACpD,CADwDwX,cACxD,CADyEC,KACzE,CAAAvC,KAAMxE,CAAAA,YAAazQ,CAAAA,CAAnB,EAAwBiL,UAAWgL,CAAAA,OAAnC,CAA6CoB,MAAOrX,CAAAA,CAApD,CAAwDuX,cAAxD,CAAyEC,KAM7E,EAFAjJ,MAEA,CAFUlN,MAAOsB,CAAAA,KAAP,CAAaiT,MAAb,CAAqBtH,SAArB,CAEV,CAFwC6I,WAExC,CAF2D5B,UAAWE,CAAAA,aAEtE,CAFsFR,KAAM7C,CAAAA,cAE5F,EAF8G,CAE9G,CAFkHnH,UAAWiL,CAAAA,gBAE7H,EADAjB,KAAMxG,CAAAA,iBAAkB1M,CAAAA,KACxB,EADiCwM,MACjC,CAAA0G,KAAMlT,CAAAA,KAAN,EAAewM,MApBnB,CAuBI2G,MAAJ,EAAa,CAACA,KAAMxI,CAAAA,QAApB,GACI8K,KAmBA,CAnBQtC,KAAM/C,CAAAA,WAmBd,CAnB4B+E,WAmB5B,CAhBAhC,KAAMzG,CAAAA,iBAAkB1O,CAAAA,CAgBxB;AAhB6BuO,SAAMvO,CAAAA,CAgBnC,CAhBuCyX,KAgBvC,CAfAtC,KAAMzG,CAAAA,iBAAkBzO,CAAAA,CAexB,EAf6BsO,SAAMtO,CAAAA,CAenC,CAfuCwX,KAevC,CAZAtC,KAAMhU,CAAAA,QAASnB,CAAAA,CAYf,EAZoBuO,SAAMvO,CAAAA,CAY1B,CAZ8ByX,KAY9B,CAXAtC,KAAMhU,CAAAA,QAASlB,CAAAA,CAWf,EAXoBsO,SAAMtO,CAAAA,CAW1B,CAX8BwX,KAW9B,CARIvM,UAAWgL,CAAAA,OAQf,GAPIf,KAAMzE,CAAAA,YAAa1Q,CAAAA,CACnB,EADwBkL,UAAWgL,CAAAA,OACnC,CAD6CoB,MAAOtX,CAAAA,CACpD,CADwDwX,cACxD,CADyEC,KACzE,CAAAtC,KAAMzE,CAAAA,YAAazQ,CAAAA,CAAnB,EAAwBiL,UAAWgL,CAAAA,OAAnC,CAA6CoB,MAAOrX,CAAAA,CAApD,CAAwDuX,cAAxD,CAAyEC,KAM7E,EAFAjJ,MAEA,CAFUlN,MAAOsB,CAAAA,KAAP,CAAakT,MAAb,CAAqBvH,SAArB,CAEV,CAFwC6I,WAExC,CAF2D5B,UAAWE,CAAAA,aAEtE,CAFsFP,KAAM9C,CAAAA,cAE5F,EAF8G,CAE9G,CAFkHnH,UAAWiL,CAAAA,gBAE7H,EADAhB,KAAMzG,CAAAA,iBAAkB1M,CAAAA,KACxB,EADiCwM,MACjC,CAAA2G,KAAMnT,CAAAA,KAAN,EAAewM,MApBnB,CA3DA,CArBA,CAN+C,CAqHnDgH,WAAWkC,CAAAA,YAAX;AAA0BC,QAAQ,CAACzN,MAAD,CAAS,CACvC,IAAK,IAAIlV,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkV,MAAO9R,CAAAA,MAA3B,CAAmCpD,CAAA,EAAnC,CAAwC,CAAA,IAChCqP,KAAO6F,MAAA,CAAOlV,CAAP,CADyB,CAEhCyhB,QAAUpS,IAAKqK,CAAAA,iBAEnB,IAAI,EAAArK,IAAKsI,CAAAA,QAAL,EAAgC,CAAhC,GAAkB8J,OAAQzW,CAAAA,CAA1B,EAAmD,CAAnD,GAAqCyW,OAAQxW,CAAAA,CAA7C,EAA0E,CAA1E,GAAwDwW,OAAQzU,CAAAA,KAAhE,CAAJ,CAAA,CAIA+L,QAAS1U,CAAAA,GAAT,CAAagL,IAAb,CAAmB,CAAA,CAAnB,CAGA,KAAK,IAAIzK,EAAI,CAAb,CAAgBA,CAAhB,CAAoByK,IAAK7K,CAAAA,KAAMpB,CAAAA,MAA/B,CAAuCwB,CAAA,EAAvC,CAA4C,CACxC,IAAIuY,KAAO9N,IAAK7K,CAAAA,KAAL,CAAWI,CAAX,CAEXsK,SAASpD,CAAAA,SAAT,CAAmBqR,IAAKrS,CAAAA,QAAxB,CAAkC2W,OAAlC,CAEQ,EAAR,CAAI7c,CAAJ,GACIuY,IAAKhR,CAAAA,QAASnB,CAAAA,CACd,EADmByW,OAAQzW,CAAAA,CAC3B,CAAAmS,IAAKhR,CAAAA,QAASlB,CAAAA,CAAd,EAAmBwW,OAAQxW,CAAAA,CAF/B,CAKsB,EAAtB,GAAIwW,OAAQzU,CAAAA,KAAZ,GACIkC,QAASpC,CAAAA,MAAT,CAAgBqQ,IAAKrS,CAAAA,QAArB,CAA+B2W,OAAQzU,CAAAA,KAAvC,CAA8CqC,IAAKlD,CAAAA,QAAnD,CAEA,CADA6M,IAAKlM,CAAAA,MAAL,CAAYqQ,IAAKvB,CAAAA,IAAjB,CAAuB6F,OAAQzU,CAAAA,KAA/B,CACA,CAAQ,CAAR,CAAIpI,CAAJ,EACI0H,MAAOc,CAAAA,WAAP,CAAmB+P,IAAKhR,CAAAA,QAAxB;AAAkCsV,OAAQzU,CAAAA,KAA1C,CAAiDqC,IAAKlD,CAAAA,QAAtD,CAAgEgR,IAAKhR,CAAAA,QAArE,CAJR,CAQAvB,OAAOM,CAAAA,MAAP,CAAciS,IAAKpS,CAAAA,MAAnB,CAA2BoS,IAAKrS,CAAAA,QAAhC,CAA0CuE,IAAKjE,CAAAA,QAA/C,CAlBwC,CAsB5CqW,OAAQzU,CAAAA,KAAR,EAAiBwT,UAAWC,CAAAA,QAC5BgB,QAAQzW,CAAAA,CAAR,EAAawV,UAAWC,CAAAA,QACxBgB,QAAQxW,CAAAA,CAAR,EAAauV,UAAWC,CAAAA,QA/BxB,CAJoC,CADD,CA8C3CD,WAAWwB,CAAAA,WAAX,CAAyBY,QAAQ,CAAC1M,UAAD,CAAa,CAC1C,MAAO,CACHlL,GAAIkL,UAAWgK,CAAAA,KAAX,CAAmBhK,UAAWgK,CAAAA,KAAM/T,CAAAA,QAASnB,CAAAA,CAA7C,CAAiD,CAArDA,EAA0DkL,UAAW2K,CAAAA,MAAO7V,CAAAA,CADzE,CAEHC,GAAIiL,UAAWgK,CAAAA,KAAX,CAAmBhK,UAAWgK,CAAAA,KAAM/T,CAAAA,QAASlB,CAAAA,CAA7C,CAAiD,CAArDA,EAA0DiL,UAAW2K,CAAAA,MAAO5V,CAAAA,CAFzE,CADmC,CAa9CuV,WAAWyB,CAAAA,WAAX,CAAyBY,QAAQ,CAAC3M,UAAD,CAAa,CAC1C,MAAO,CACHlL,GAAIkL,UAAWiK,CAAAA,KAAX,CAAmBjK,UAAWiK,CAAAA,KAAMhU,CAAAA,QAASnB,CAAAA,CAA7C,CAAiD,CAArDA,EAA0DkL,UAAW4K,CAAAA,MAAO9V,CAAAA,CADzE;AAEHC,GAAIiL,UAAWiK,CAAAA,KAAX,CAAmBjK,UAAWiK,CAAAA,KAAMhU,CAAAA,QAASlB,CAAAA,CAA7C,CAAiD,CAArDA,EAA0DiL,UAAW4K,CAAAA,MAAO7V,CAAAA,CAFzE,CADmC,CA5StC,CAAX,CAAD,EAvBsD,CA7iH5C,CAkhIH,QAAQ,CAAC5L,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAQtD,IAAIijB,KAAO,EAEXzjB,OAAOC,CAAAA,OAAP,CAAiBwjB,IAEjB,KAAIC,QAAUljB,mBAAA,CAAoB,EAApB,CAEb,UAAQ,EAAG,CASRijB,IAAKthB,CAAAA,MAAL,CAAcwhB,QAAQ,CAAC/C,SAAD,CAAYgD,SAAZ,CAAuB,CAAA,IACrC/C,MAAQD,SAAUC,CAAAA,KADmB,CAErCC,MAAQF,SAAUE,CAAAA,KAFmB,CAGrC+C,QAAUjD,SAAUiD,CAAAA,OAHiB,CAIrCC,QAAUlD,SAAUkD,CAAAA,OAEpBpD,MAAAA,CAAO,CACPjL,GAAIgO,IAAKhO,CAAAA,EAAL,CAAQoL,KAAR,CAAeC,KAAf,CADG,CAEAD,KAFA,CAGAC,KAHA,CAIPiD,SAAU,EAJH,CAKPC,eAAgB,EALT,CAMPC,WAAY,CANL,CAOPtD,SAAU,CAAA,CAPH,CAQPuD,gBAAiB,CAAA,CARV,CASPxJ,SAAUmG,KAAMnG,CAAAA,QAAhBA,EAA4BoG,KAAMpG,CAAAA,QAT3B;AAUPyJ,YAAaP,SAVN,CAWPQ,YAAaR,SAXN,CAYP7F,YAAa8F,OAAQ9F,CAAAA,WAArBA,CAAmC+F,OAAQ/F,CAAAA,WAZpC,CAaP/C,SAAUxV,IAAKuB,CAAAA,GAAL,CAAS8c,OAAQ7I,CAAAA,QAAjB,CAA2B8I,OAAQ9I,CAAAA,QAAnC,CAbH,CAcPC,eAAgBzV,IAAKwB,CAAAA,GAAL,CAAS6c,OAAQ5I,CAAAA,cAAjB,CAAiC6I,OAAQ7I,CAAAA,cAAzC,CAdT,CAePF,YAAavV,IAAKwB,CAAAA,GAAL,CAAS6c,OAAQ9I,CAAAA,WAAjB,CAA8B+I,OAAQ/I,CAAAA,WAAtC,CAfN,CAgBPQ,KAAM/V,IAAKwB,CAAAA,GAAL,CAAS6c,OAAQtI,CAAAA,IAAjB,CAAuBuI,OAAQvI,CAAAA,IAA/B,CAhBC,CAmBXkI,KAAK5X,CAAAA,MAAL,CAAY6U,KAAZ,CAAkBE,SAAlB,CAA6BgD,SAA7B,CAEA,OAAOlD,MA3BkC,CAqC7C+C,KAAK5X,CAAAA,MAAL,CAAcwY,QAAQ,CAAC3D,IAAD,CAAOE,SAAP,CAAkBgD,SAAlB,CAA6B,CAAA,IAC3CG,SAAWrD,IAAKqD,CAAAA,QAD2B,CAE3CO,SAAW1D,SAAU0D,CAAAA,QAFsB,CAG3CN,eAAiBtD,IAAKsD,CAAAA,cAHqB;AAI3CH,QAAUjD,SAAUiD,CAAAA,OAJuB,CAK3CC,QAAUlD,SAAUkD,CAAAA,OAExBpD,KAAKE,CAAAA,SAAL,CAAiBA,SACjBF,KAAK3C,CAAAA,WAAL,CAAmB8F,OAAQ9F,CAAAA,WAA3B,CAAyC+F,OAAQ/F,CAAAA,WACjD2C,KAAK1F,CAAAA,QAAL,CAAgBxV,IAAKuB,CAAAA,GAAL,CAAS8c,OAAQ7I,CAAAA,QAAjB,CAA2B8I,OAAQ9I,CAAAA,QAAnC,CAChB0F,KAAKzF,CAAAA,cAAL,CAAsBzV,IAAKwB,CAAAA,GAAL,CAAS6c,OAAQ5I,CAAAA,cAAjB,CAAiC6I,OAAQ7I,CAAAA,cAAzC,CACtByF,KAAK3F,CAAAA,WAAL,CAAmBvV,IAAKwB,CAAAA,GAAL,CAAS6c,OAAQ9I,CAAAA,WAAjB,CAA8B+I,OAAQ/I,CAAAA,WAAtC,CACnB2F,KAAKnF,CAAAA,IAAL,CAAY/V,IAAKwB,CAAAA,GAAL,CAAS6c,OAAQtI,CAAAA,IAAjB,CAAuBuI,OAAQvI,CAAAA,IAA/B,CACZyI,eAAejgB,CAAAA,MAAf,CAAwB,CAExB,IAAI6c,SAAU2D,CAAAA,QAAd,CAAwB,CACpB,IAAS5jB,OAAT,CAAa,CAAb,CAAgBA,OAAhB,CAAoB2jB,QAASvgB,CAAAA,MAA7B,CAAqCpD,OAAA,EAArC,CAA0C,CAClC6jB,OAAAA,CAAUF,QAAA,CAAS3jB,OAAT,CADwB;IAElC8jB,UAAYf,OAAQjO,CAAAA,EAAR,CAAW+O,OAAX,CAFsB,CAGlCE,QAAUX,QAAA,CAASU,SAAT,CAEVC,QAAJ,CACIV,cAAezf,CAAAA,IAAf,CAAoBmgB,OAApB,CADJ,CAGIV,cAAezf,CAAAA,IAAf,CAAoBwf,QAAA,CAASU,SAAT,CAApB,CAA0Cf,OAAQvhB,CAAAA,MAAR,CAAeqiB,OAAf,CAA1C,CARkC,CAY1C9D,IAAKuD,CAAAA,UAAL,CAAkBrD,SAAU+D,CAAAA,KAC5BlB,KAAKmB,CAAAA,SAAL,CAAelE,IAAf,CAAqB,CAAA,CAArB,CAA2BkD,SAA3B,CAdoB,CAAxB,IAgB0B,CAAA,CAAtB,GAAIlD,IAAKC,CAAAA,QAAT,EACI8C,IAAKmB,CAAAA,SAAL,CAAelE,IAAf,CAAqB,CAAA,CAArB,CAA4BkD,SAA5B,CAhCuC,CA2CnDH,KAAKmB,CAAAA,SAAL,CAAiBC,QAAQ,CAACnE,IAAD,CAAOC,QAAP,CAAiBiD,SAAjB,CAA4B,CAC7CjD,QAAJ,EACID,IAAKC,CAAAA,QACL,CADgB,CAAA,CAChB,CAAAD,IAAK0D,CAAAA,WAAL,CAAmBR,SAFvB,GAIIlD,IAAKC,CAAAA,QACL,CADgB,CAAA,CAChB,CAAAD,IAAKsD,CAAAA,cAAejgB,CAAAA,MAApB,CAA6B,CALjC,CADiD,CAiBrD0f,KAAKhO,CAAAA,EAAL,CAAUqP,QAAQ,CAACjE,KAAD,CAAQC,KAAR,CAAe,CAC7B,MAAID,MAAMpL,CAAAA,EAAV,CAAeqL,KAAMrL,CAAAA,EAArB,CACW,GADX;AACiBoL,KAAMpL,CAAAA,EADvB,CAC4B,GAD5B,CACkCqL,KAAMrL,CAAAA,EADxC,CAGW,GAHX,CAGiBqL,KAAMrL,CAAAA,EAHvB,CAG4B,GAH5B,CAGkCoL,KAAMpL,CAAAA,EAJX,CA1GzB,CAAX,CAAD,EAdsD,CAlhI5C,CAupIH,QAAQ,CAACzV,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAQtD,IAAImZ,KAAO,EAEX3Z,OAAOC,CAAAA,OAAP,CAAiB0Z,IAEjB,KAAI1M,OAASzM,mBAAA,CAAoB,CAApB,CAAb,CACIyC,OAASzC,mBAAA,CAAoB,CAApB,CAEZ,UAAQ,EAAG,CAQRmZ,IAAK0E,CAAAA,YAAL,CAAoB0G,QAAQ,CAACtZ,QAAD,CAAW,CAInC,IAHA,IAAI8Q,KAAO,EAAX,CAGS5b,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8K,QAAS1H,CAAAA,MAA7B,CAAqCpD,CAAA,EAArC,CAA0C,CAAA,IAClC4E,GAAK5E,CAAL4E,CAAS,CAATA,EAAckG,QAAS1H,CAAAA,MACvBkf,EAAAA,CAAShW,MAAOgB,CAAAA,SAAP,CAAiB,CACtBtC,EAAGF,QAAA,CAASlG,CAAT,CAAYqG,CAAAA,CAAfD,CAAmBF,QAAA,CAAS9K,CAAT,CAAYiL,CAAAA,CADT,CAEtBA,EAAGH,QAAA,CAAS9K,CAAT,CAAYgL,CAAAA,CAAfC,CAAmBH,QAAA,CAASlG,CAAT,CAAYoG,CAAAA,CAFT,CAAjB,CADb,KAKIqZ,SAAyB,CAAd,GAAC/B,CAAOrX,CAAAA,CAAR,CAAmBI,QAAnB,CAA+BiX,CAAOtX,CAAAA,CAAtC,CAA0CsX,CAAOrX,CAAAA,CAGhEoZ,SAAA,CAAWA,QAASC,CAAAA,OAAT,CAAiB,CAAjB,CAAoB3e,CAAAA,QAApB,EACXiW,KAAA,CAAKyI,QAAL,CAAA,CAAiB/B,CAVqB,CAa1C,MAAOhgB,OAAOuB,CAAAA,MAAP,CAAc+X,IAAd,CAjB4B,CA0BvC5C;IAAKlM,CAAAA,MAAL,CAAcyX,QAAQ,CAAC3I,IAAD,CAAO5O,KAAP,CAAc,CAChC,GAAc,CAAd,GAAIA,KAAJ,CAAA,CADgC,IAI5BE,IAAMrI,IAAKqI,CAAAA,GAAL,CAASF,KAAT,CACNG,MAAAA,CAAMtI,IAAKsI,CAAAA,GAAL,CAASH,KAAT,CAEV,KAAK,IAAIhN,EAAI,CAAb,CAAgBA,CAAhB,CAAoB4b,IAAKxY,CAAAA,MAAzB,CAAiCpD,CAAA,EAAjC,CAAsC,CAAA,IAC9BwkB,KAAO5I,IAAA,CAAK5b,CAAL,CAEX,KAAAykB,GAAKD,IAAKxZ,CAAAA,CAAVyZ,CAAcvX,GAAduX,CAAoBD,IAAKvZ,CAAAA,CAAzBwZ,CAA6BtX,KAC7BqX,KAAKvZ,CAAAA,CAAL,CAASuZ,IAAKxZ,CAAAA,CAAd,CAAkBmC,KAAlB,CAAwBqX,IAAKvZ,CAAAA,CAA7B,CAAiCiC,GACjCsX,KAAKxZ,CAAAA,CAAL,CAASyZ,EALyB,CANtC,CADgC,CAlC5B,CAAX,CAAD,EAfsD,CAvpI5C,CA6tIH,QAAQ,CAACplB,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAatD,IAAI6kB,OAAS,EAEbrlB,OAAOC,CAAAA,OAAP,CAAiBolB,MAEjB,KAAIxV,SAAWrP,mBAAA,CAAoB,CAApB,CAAf,CACIyC,OAASzC,mBAAA,CAAoB,CAApB,CADb,CAEI8U,KAAO9U,mBAAA,CAAoB,CAApB,CAFX,CAGI+K,OAAS/K,mBAAA,CAAoB,CAApB,CAHb,CAIIyM,OAASzM,mBAAA,CAAoB,CAApB,CAEZ,UAAQ,EAAG,CAcR6kB,MAAOC,CAAAA,SAAP,CAAmBC,QAAQ,CAAC5Z,CAAD,CAAIC,CAAJ,CAAO4Z,KAAP;AAAcC,MAAd,CAAsBjQ,OAAtB,CAA+B,CACtDA,OAAA,CAAUA,OAAV,EAAqB,EAEjB8P,EAAAA,CAAY,CACZtP,MAAO,gBADK,CAEZlJ,SAAU,CAAKnB,CAAL,CAAWC,CAAX,CAFE,CAGZH,SAAUoE,QAASM,CAAAA,QAAT,CAAkB,UAAlB,CAA+BqV,KAA/B,CAAuC,OAAvC,CAAiDA,KAAjD,CAAyD,GAAzD,CAA+DC,MAA/D,CAAwE,OAAxE,CAAkFA,MAAlF,CAHE,CAMZjQ,QAAQtD,CAAAA,OAAZ,GACQA,CAGJ,CAHcsD,OAAQtD,CAAAA,OAGtB,CAFAoT,CAAU7Z,CAAAA,QAEV,CAFqBoE,QAASqC,CAAAA,OAAT,CAAiBoT,CAAU7Z,CAAAA,QAA3B,CAAqCyG,CAAQE,CAAAA,MAA7C,CACjBF,CAAQG,CAAAA,OADS,CACAH,CAAQI,CAAAA,UADR,CACoBJ,CAAQK,CAAAA,UAD5B,CAErB,CAAA,OAAOiD,OAAQtD,CAAAA,OAJnB,CAOA,OAAOoD,KAAKnT,CAAAA,MAAL,CAAYc,MAAOO,CAAAA,MAAP,CAAc,EAAd,CAAkB8hB,CAAlB,CAA6B9P,OAA7B,CAAZ,CAhB+C,CAgC1D6P,OAAOK,CAAAA,SAAP,CAAmBC,QAAQ,CAACha,CAAD,CAAIC,CAAJ,CAAO4Z,KAAP,CAAcC,MAAd,CAAsBG,KAAtB,CAA6BpQ,OAA7B,CAAsC,CAC7DA,OAAA,CAAUA,OAAV,EAAqB,EAErBoQ,MAAA,EAAS,EAHoD,KAMzDC,GAAKL,KAALK,CAAaD,KACbE,MAAAA,CAAKD,EAALC,EAHQ,CAGRA,CAHqB,CAGrBA,CAHaF,KAGbE,EAH2BN,KAJ8B,KAQzDO,GAAKD,KAALC;AAAUF,EASVH,EAAAA,CAAY,CACZ1P,MAAO,gBADK,CAEZlJ,SAAU,CAAKnB,CAAL,CAAWC,CAAX,CAFE,CAGZH,SAAUoE,QAASM,CAAAA,QAAT,CATF,EAAZ6V,CAAIJ,KAAJI,CACmB,UADnBA,CACgCH,EADhCG,CACqC,GADrCA,CAC4C,CAACP,MAD7CO,CACuD,KADvDA,CAC+DF,KAD/DE,CACoE,GADpEA,CAC2E,CAACP,MAD5EO,CACsF,KADtFA,CAC8FD,EAD9FC,CACmG,IADnGA,CAGmB,UAHnBA,CAGgCF,KAHhCE,CAGqC,GAHrCA,CAG4C,CAACP,MAH7CO,CAGuD,KAHvDA,CAG+DD,EAH/DC,CAGoE,IAMtD,CAHE,CAMZxQ,QAAQtD,CAAAA,OAAZ,GACQA,CAGJ,CAHcsD,OAAQtD,CAAAA,OAGtB,CAFAwT,CAAUja,CAAAA,QAEV,CAFqBoE,QAASqC,CAAAA,OAAT,CAAiBwT,CAAUja,CAAAA,QAA3B,CAAqCyG,CAAQE,CAAAA,MAA7C,CACjBF,CAAQG,CAAAA,OADS,CACAH,CAAQI,CAAAA,UADR,CACoBJ,CAAQK,CAAAA,UAD5B,CAErB,CAAA,OAAOiD,OAAQtD,CAAAA,OAJnB,CAOA,OAAOoD,KAAKnT,CAAAA,MAAL,CAAYc,MAAOO,CAAAA,MAAP,CAAc,EAAd,CAAkBkiB,CAAlB,CAA6BlQ,OAA7B,CAAZ,CA9BsD,CA6CjE6P,OAAOY,CAAAA,MAAP,CAAgBC,QAAQ,CAACva,CAAD,CAAIC,CAAJ,CAAOwG,MAAP,CAAeoD,OAAf,CAAwB2Q,QAAxB,CAAkC,CACtD3Q,OAAA,CAAUA,OAAV,EAAqB,EAErB,KAAIyQ,OAAS,CACTjQ,MAAO,aADE,CAEToG,aAAchK,MAFL,CAOTgU;QAAAA,CAAQ5gB,IAAK6gB,CAAAA,IAAL,CAAU7gB,IAAKwB,CAAAA,GAAL,CAAS,EAAT,CAAaxB,IAAKuB,CAAAA,GAAL,CADxBof,QACwB,EADZ,EACY,CAAmB/T,MAAnB,CAAb,CAAV,CAGM,EAAlB,GAAIgU,QAAJ,CAAY,CAAZ,GACIA,QADJ,EACa,CADb,CAGA,OAAOf,OAAOiB,CAAAA,OAAP,CAAe3a,CAAf,CAAkBC,CAAlB,CAAqBwa,QAArB,CAA4BhU,MAA5B,CAAoCnP,MAAOO,CAAAA,MAAP,CAAc,EAAd,CAAkByiB,MAAlB,CAA0BzQ,OAA1B,CAApC,CAhB+C,CA+B1D6P,OAAOiB,CAAAA,OAAP,CAAiBC,QAAQ,CAAC5a,CAAD,CAAIC,CAAJ,CAAOwa,KAAP,CAAchU,MAAd,CAAsBoD,OAAtB,CAA+B,CACpDA,OAAA,CAAUA,OAAV,EAAqB,EAErB,IAAY,CAAZ,CAAI4Q,KAAJ,CACI,MAAOf,OAAOY,CAAAA,MAAP,CAActa,CAAd,CAAiBC,CAAjB,CAAoBwG,MAApB,CAA4BoD,OAA5B,CAMX,KAVoD,IAMhDpC,MAAQ,CAARA,CAAY5N,IAAKghB,CAAAA,EAAjBpT,CAAsBgT,KAN0B,CAOhDzhB,KAAO,EAPyC,CAQhD8hB,OAAiB,EAAjBA,CAASrT,KARuC,CAU3CzS,EAAI,CAAb,CAAgBA,CAAhB,CAAoBylB,KAApB,CAA2BzlB,CAA3B,EAAgC,CAAhC,CAAmC,CAAA,IAC3BgN,MAAQ8Y,MAAR9Y,CAAkBhN,CAAlBgN,CAAsByF,KADK,CAG3BsT,GAAKlhB,IAAKsI,CAAAA,GAAL,CAASH,KAAT,CAAL+Y,CAAuBtU,MAE3BzN,KAAA,EAAQ,IAAR,CAAkBsgB,CAHTzf,IAAKqI,CAAAA,GAAL,CAASF,KAAT,CAGSsX,CAHS7S,MAGT6S,EAAAA,OAAH,CAAW,CAAX,CAAf,CAA+B,GAA/B,CAAqCyB,EAAGzB,CAAAA,OAAH,CAAW,CAAX,CAArC,CAAqD,GALtB,CAQ/BqB,CAAAA,CAAU,CACVtQ,MAAO,cADG;AAEVlJ,SAAU,CAAKnB,CAAL,CAAWC,CAAX,CAFA,CAGVH,SAAUoE,QAASM,CAAAA,QAAT,CAAkBxL,IAAlB,CAHA,CAMV6Q,QAAQtD,CAAAA,OAAZ,GACQA,CAGJ,CAHcsD,OAAQtD,CAAAA,OAGtB,CAFAoU,CAAQ7a,CAAAA,QAER,CAFmBoE,QAASqC,CAAAA,OAAT,CAAiBoU,CAAQ7a,CAAAA,QAAzB,CAAmCyG,CAAQE,CAAAA,MAA3C,CACfF,CAAQG,CAAAA,OADO,CACEH,CAAQI,CAAAA,UADV,CACsBJ,CAAQK,CAAAA,UAD9B,CAEnB,CAAA,OAAOiD,OAAQtD,CAAAA,OAJnB,CAOA,OAAOoD,KAAKnT,CAAAA,MAAL,CAAYc,MAAOO,CAAAA,MAAP,CAAc,EAAd,CAAkB8iB,CAAlB,CAA2B9Q,OAA3B,CAAZ,CA/B6C,CAoExD6P,OAAOhH,CAAAA,YAAP,CAAsBsI,QAAQ,CAAChb,CAAD,CAAIC,CAAJ,CAAOgb,UAAP,CAAmBpR,OAAnB,CAA4BqR,YAA5B,CAA0CC,eAA1C,CAA2DC,WAA3D,CAAwEC,qBAAxE,CAA+F,CAAA,IACrH7b,OAASlI,MAAOmI,CAAAA,SAAP,EAD4G,CAMrH6b,SANqH,CAWrHC,CAIJ,KAAAC,UAAY,EAAQhc,CAAAA,MAAR,EAAyBic,CAAPjc,MAAOic,CAAAA,WAAzB,CAEZ5R,QAAA,CAAUA,OAAV,EAAqB,EACrB,KAAArQ,MAAQ,EAER0hB,aAAA,CAAuC,WAAxB;AAAA,MAAOA,aAAP,CAAsCA,YAAtC,CAAqD,CAAA,CACpEC,gBAAA,CAA6C,WAA3B,GAAA,MAAOA,gBAAP,CAAyCA,eAAzC,CAA2D,GAC7EC,YAAA,CAAqC,WAAvB,GAAA,MAAOA,YAAP,CAAqCA,WAArC,CAAmD,EACjEC,sBAAA,CAAyD,WAAjC,GAAA,MAAOA,sBAAP,CAA+CA,qBAA/C,CAAuE,GAG1F/jB,OAAOmD,CAAAA,OAAP,CAAewgB,UAAA,CAAW,CAAX,CAAf,CAAL,GACIA,UADJ,CACiB,CAACA,UAAD,CADjB,CAIA,KAAKM,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBN,UAAW7iB,CAAAA,MAA3B,CAAmCmjB,CAAnC,EAAwC,CAAxC,CAA2C,CACvC,IAAAzb,kBAAWmb,UAAA,CAAWM,CAAX,CACX,KAAAtT,SAAW/D,QAAS+D,CAAAA,QAAT,CAAkBnI,iBAAlB,CAGX,EAFAwb,SAEA,CAFY,CAACrT,QAEb,GAAiB,CAACuT,SAAlB,EACIlkB,MAAOyF,CAAAA,QAAP,CACI,gJADJ,CAKJ;GAAIkL,QAAJ,EAAgB,CAACuT,SAAjB,CAEQ1b,iBAMJ,CAPImI,QAAJ,CACe/D,QAAS0D,CAAAA,aAAT,CAAuB9H,iBAAvB,CADf,CAIeoE,QAASoE,CAAAA,IAAT,CAAcxI,iBAAd,CAGf,CAAAtG,KAAMZ,CAAAA,IAAN,CAAW,CACPuI,SAAU,CAAKnB,CAAL,CAAWC,CAAX,CADH,CAEPH,SAAUA,iBAFH,CAAX,CARJ,KA6BI,KAfI4b,QAeC,CAfS5b,iBAASjC,CAAAA,GAAT,CAAa,QAAQ,CAACyC,MAAD,CAAS,CACxC,MAAO,CAACA,MAAON,CAAAA,CAAR,CAAWM,MAAOL,CAAAA,CAAlB,CADiC,CAA9B,CAeT,CAVLT,MAAOmc,CAAAA,OAAP,CAAeD,QAAf,CAUK,CATmB,CAAA,CASnB,GATDP,eASC,EARD3b,MAAOoc,CAAAA,qBAAP,CAA6BF,QAA7B,CAAsCP,eAAtC,CAQC,CAPyB,CAAA,CAOzB,GAPDE,qBAOC,EAPkC7b,MAAO6b,CAAAA,qBAOzC,EAND7b,MAAO6b,CAAAA,qBAAP,CAA6BK,QAA7B,CAAsCL,qBAAtC,CAMC,CAHDQ,SAGC,CAHYrc,MAAOic,CAAAA,WAAP,CAAmBC,QAAnB,CAGZ;AAAA1mB,QAAA,CAAI,CAAT,CAAYA,QAAZ,CAAgB6mB,SAAWzjB,CAAAA,MAA3B,CAAmCpD,QAAA,EAAnC,CAIQ8mB,iBAQJ,CAXYD,SAAAE,CAAW/mB,QAAX+mB,CAGcle,CAAAA,GAAN,CAAU,QAAQ,CAACiC,QAAD,CAAW,CAC7C,MAAO,CACHE,EAAGF,QAAA,CAAS,CAAT,CADA,CAEHG,EAAGH,QAAA,CAAS,CAAT,CAFA,CADsC,CAA7B,CAQpB,CAAkB,CAAlB,CAAIsb,WAAJ,EAAuBlX,QAASa,CAAAA,IAAT,CAAc+W,iBAAd,CAAvB,CAAsDV,WAAtD,EAIA5hB,KAAMZ,CAAAA,IAAN,CAAW,CACPuI,SAAU+C,QAASW,CAAAA,MAAT,CAAgBiX,iBAAhB,CADH,CAEPhc,SAAUgc,iBAFH,CAAX,CAxD+B,CAiE3C,IAAK9mB,QAAL,CAAS,CAAT,CAAYA,QAAZ,CAAgBwE,KAAMpB,CAAAA,MAAtB,CAA8BpD,QAAA,EAA9B,CACIwE,KAAA,CAAMxE,QAAN,CAAA,CAAW2U,IAAKnT,CAAAA,MAAL,CAAYc,MAAOO,CAAAA,MAAP,CAAc2B,KAAA,CAAMxE,QAAN,CAAd,CAAwB6U,OAAxB,CAAZ,CAIf,IAAIqR,YAAJ,CAGI,IAAKlmB,QAAL,CAAS,CAAT,CAAYA,QAAZ,CAAgBwE,KAAMpB,CAAAA,MAAtB,CAA8BpD,QAAA,EAA9B,CAGI,IAFIgnB,WAEC,CAFOxiB,KAAA,CAAMxE,QAAN,CAEP;AAAA4E,UAAA,CAAI5E,QAAJ,CAAQ,CAAb,CAAgB4E,UAAhB,CAAoBJ,KAAMpB,CAAAA,MAA1B,CAAkCwB,UAAA,EAAlC,CAGI,GAFIqiB,qBAEA,CAFQziB,KAAA,CAAMI,UAAN,CAER,CAAAgG,MAAOc,CAAAA,QAAP,CAAgBsb,WAAMjc,CAAAA,MAAtB,CAA8Bkc,qBAAMlc,CAAAA,MAApC,CAAJ,CAKI,IAJImc,MAIC,CAJKF,WAAMlc,CAAAA,QAIX,CAHDqc,SAGC,CAHKF,qBAAMnc,CAAAA,QAGX,CAAAsI,YAAA,CAAI,CAAT,CAAYA,YAAZ,CAAgB4T,WAAMlc,CAAAA,QAAS1H,CAAAA,MAA/B,CAAuCgQ,YAAA,EAAvC,CACI,IAAKC,eAAL,CAAS,CAAT,CAAYA,eAAZ,CAAgB4T,qBAAMnc,CAAAA,QAAS1H,CAAAA,MAA/B,CAAuCiQ,eAAA,EAAvC,CAEQ+T,CAIJ,CAJS9a,MAAOM,CAAAA,gBAAP,CAAwBN,MAAO6B,CAAAA,GAAP,CAAW+Y,MAAA,EAAK9T,YAAL,CAAS,CAAT,EAAc8T,MAAI9jB,CAAAA,MAAlB,CAAX,CAAsC+jB,SAAA,CAAI9T,eAAJ,CAAtC,CAAxB,CAIT;AAHIgU,SAGJ,CAHS/a,MAAOM,CAAAA,gBAAP,CAAwBN,MAAO6B,CAAAA,GAAP,CAAW+Y,MAAA,CAAI9T,YAAJ,CAAX,CAAmB+T,SAAA,EAAK9T,eAAL,CAAS,CAAT,EAAc8T,SAAI/jB,CAAAA,MAAlB,CAAnB,CAAxB,CAGT,CApBMkkB,CAoBN,CAAIF,CAAJ,EApBME,CAoBN,CAAgCD,SAAhC,GACIH,MAAA,CAAI9T,YAAJ,CAAO7D,CAAAA,UACP,CADoB,CAAA,CACpB,CAAA4X,SAAA,CAAI9T,eAAJ,CAAO9D,CAAAA,UAAP,CAAoB,CAAA,CAFxB,CAYxB,OAAmB,EAAnB,CAAI/K,KAAMpB,CAAAA,MAAV,EAEIiM,OAKOA,CALAsF,IAAKnT,CAAAA,MAAL,CAAYc,MAAOO,CAAAA,MAAP,CAAc,CAAE2B,MAAOA,KAAMJ,CAAAA,KAAN,CAAY,CAAZ,CAAT,CAAd,CAAyCyQ,OAAzC,CAAZ,CAKAxF,CAFPsF,IAAKiE,CAAAA,WAAL,CAAiBvJ,OAAjB,CAAuB,CAAKrE,CAAL,CAAWC,CAAX,CAAvB,CAEOoE,CAAAA,OAPX,EASW7K,KAAA,CAAM,CAAN,CA9I8G,CA9LrH,CAAX,CAAD,EAvBsD,CA7tI5C,CAykJH,QAAQ,CAACnF,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAQtD,IAAI0nB,MAAQ,EAEZloB,OAAOC,CAAAA,OAAP,CAAiBioB,KAEjB,KAAIjlB,OAASzC,mBAAA,CAAoB,CAApB,CAEZ,UAAQ,EAAG,CAQR0nB,KAAM/lB,CAAAA,MAAN,CAAegmB,QAAQ,CAACC,OAAD,CAAU,CAC7B,IAAIC;AAAQ,EAEPD,QAAL,EACInlB,MAAO+E,CAAAA,GAAP,CAAW,kEAAX,CAA+E,MAA/E,CAGJqgB,MAAMD,CAAAA,OAAN,CAAgBA,OAAhB,EAA2BE,QAAStY,CAAAA,IACpCqY,MAAME,CAAAA,QAAN,CAAiB,CAAE5c,EAAG,CAAL,CAAQC,EAAG,CAAX,CACjByc,MAAMvb,CAAAA,QAAN,CAAiB,CAAEnB,EAAG,CAAL,CAAQC,EAAG,CAAX,CACjByc,MAAMG,CAAAA,iBAAN,CAA0B,CAAE7c,EAAG,CAAL,CAAQC,EAAG,CAAX,CAC1Byc,MAAMI,CAAAA,eAAN,CAAwB,CAAE9c,EAAG,CAAL,CAAQC,EAAG,CAAX,CACxByc,MAAM5B,CAAAA,MAAN,CAAe,CAAE9a,EAAG,CAAL,CAAQC,EAAG,CAAX,CACfyc,MAAMxW,CAAAA,KAAN,CAAc,CAAElG,EAAG,CAAL,CAAQC,EAAG,CAAX,CACdyc,MAAMK,CAAAA,UAAN,CAAmB,CACnBL,MAAMM,CAAAA,MAAN,CAAe,EACfN,MAAMO,CAAAA,UAAN,CAAmB9gB,QAAA,CAASugB,KAAMD,CAAAA,OAAQS,CAAAA,YAAd,CAA2B,kBAA3B,CAAT,CAAyD,EAAzD,CAAnB,EAAmF,CAEnFR,MAAMS,CAAAA,YAAN,CAAqB,CACjBC,UAAW,IADM,CAEjBC,UAAW,IAFM,CAGjBC,QAAS,IAHQ,CAIjBC,WAAY,IAJK,CAOrBb,MAAMU,CAAAA,SAAN;AAAkBI,QAAQ,CAAChU,KAAD,CAAQ,CAAA,IAC1BrI,SAAWob,KAAMkB,CAAAA,yBAAN,CAAgCjU,KAAhC,CAAuCkT,KAAMD,CAAAA,OAA7C,CAAsDC,KAAMO,CAAAA,UAA5D,CACDzT,MAAMkU,CAAAA,cAEpB,GACIhB,KAAMM,CAAAA,MACN,CADe,CACf,CAAAxT,KAAMmU,CAAAA,cAAN,EAFJ,CAKAjB,MAAME,CAAAA,QAAS5c,CAAAA,CAAf,CAAmBmB,QAASnB,CAAAA,CAC5B0c,MAAME,CAAAA,QAAS3c,CAAAA,CAAf,CAAmBkB,QAASlB,CAAAA,CAC5Byc,MAAMvb,CAAAA,QAASnB,CAAAA,CAAf,CAAmB0c,KAAME,CAAAA,QAAS5c,CAAAA,CAAlC,CAAsC0c,KAAMxW,CAAAA,KAAMlG,CAAAA,CAAlD,CAAsD0c,KAAM5B,CAAAA,MAAO9a,CAAAA,CACnE0c,MAAMvb,CAAAA,QAASlB,CAAAA,CAAf,CAAmByc,KAAME,CAAAA,QAAS3c,CAAAA,CAAlC,CAAsCyc,KAAMxW,CAAAA,KAAMjG,CAAAA,CAAlD,CAAsDyc,KAAM5B,CAAAA,MAAO7a,CAAAA,CACnEyc,MAAMS,CAAAA,YAAaC,CAAAA,SAAnB,CAA+B5T,KAbD,CAgBlCkT,MAAMW,CAAAA,SAAN,CAAkBO,QAAQ,CAACpU,KAAD,CAAQ,CAAA,IAC1BrI,SAAWob,KAAMkB,CAAAA,yBAAN,CAAgCjU,KAAhC,CAAuCkT,KAAMD,CAAAA,OAA7C,CAAsDC,KAAMO,CAAAA,UAA5D,CACDzT,MAAMkU,CAAAA,cAEpB;CACIhB,KAAMM,CAAAA,MACN,CADe,CACf,CAAAxT,KAAMmU,CAAAA,cAAN,EAFJ,EAIIjB,KAAMM,CAAAA,MAJV,CAImBxT,KAAMwT,CAAAA,MAGzBN,MAAME,CAAAA,QAAS5c,CAAAA,CAAf,CAAmBmB,QAASnB,CAAAA,CAC5B0c,MAAME,CAAAA,QAAS3c,CAAAA,CAAf,CAAmBkB,QAASlB,CAAAA,CAC5Byc,MAAMvb,CAAAA,QAASnB,CAAAA,CAAf,CAAmB0c,KAAME,CAAAA,QAAS5c,CAAAA,CAAlC,CAAsC0c,KAAMxW,CAAAA,KAAMlG,CAAAA,CAAlD,CAAsD0c,KAAM5B,CAAAA,MAAO9a,CAAAA,CACnE0c,MAAMvb,CAAAA,QAASlB,CAAAA,CAAf,CAAmByc,KAAME,CAAAA,QAAS3c,CAAAA,CAAlC,CAAsCyc,KAAMxW,CAAAA,KAAMjG,CAAAA,CAAlD,CAAsDyc,KAAM5B,CAAAA,MAAO7a,CAAAA,CACnEyc,MAAMG,CAAAA,iBAAkB7c,CAAAA,CAAxB,CAA4B0c,KAAMvb,CAAAA,QAASnB,CAAAA,CAC3C0c,MAAMG,CAAAA,iBAAkB5c,CAAAA,CAAxB,CAA4Byc,KAAMvb,CAAAA,QAASlB,CAAAA,CAC3Cyc,MAAMS,CAAAA,YAAaE,CAAAA,SAAnB,CAA+B7T,KAjBD,CAoBlCkT,MAAMY,CAAAA,OAAN,CAAgBO,QAAQ,CAACrU,KAAD,CAAQ,CAAA,IACxBrI,SAAWob,KAAMkB,CAAAA,yBAAN,CAAgCjU,KAAhC,CAAuCkT,KAAMD,CAAAA,OAA7C,CAAsDC,KAAMO,CAAAA,UAA5D,CACDzT,MAAMkU,CAAAA,cAEpB;AACIlU,KAAMmU,CAAAA,cAAN,EAGJjB,MAAMM,CAAAA,MAAN,CAAe,EACfN,MAAME,CAAAA,QAAS5c,CAAAA,CAAf,CAAmBmB,QAASnB,CAAAA,CAC5B0c,MAAME,CAAAA,QAAS3c,CAAAA,CAAf,CAAmBkB,QAASlB,CAAAA,CAC5Byc,MAAMvb,CAAAA,QAASnB,CAAAA,CAAf,CAAmB0c,KAAME,CAAAA,QAAS5c,CAAAA,CAAlC,CAAsC0c,KAAMxW,CAAAA,KAAMlG,CAAAA,CAAlD,CAAsD0c,KAAM5B,CAAAA,MAAO9a,CAAAA,CACnE0c,MAAMvb,CAAAA,QAASlB,CAAAA,CAAf,CAAmByc,KAAME,CAAAA,QAAS3c,CAAAA,CAAlC,CAAsCyc,KAAMxW,CAAAA,KAAMjG,CAAAA,CAAlD,CAAsDyc,KAAM5B,CAAAA,MAAO7a,CAAAA,CACnEyc,MAAMI,CAAAA,eAAgB9c,CAAAA,CAAtB,CAA0B0c,KAAMvb,CAAAA,QAASnB,CAAAA,CACzC0c,MAAMI,CAAAA,eAAgB7c,CAAAA,CAAtB,CAA0Byc,KAAMvb,CAAAA,QAASlB,CAAAA,CACzCyc,MAAMS,CAAAA,YAAaG,CAAAA,OAAnB,CAA6B9T,KAfD,CAkBhCkT,MAAMa,CAAAA,UAAN,CAAmBO,QAAQ,CAACtU,KAAD,CAAQ,CAC/BkT,KAAMK,CAAAA,UAAN,CAAmBljB,IAAKwB,CAAAA,GAAL,CAAS,EAAT,CAAaxB,IAAKuB,CAAAA,GAAL,CAAS,CAAT,CAAYoO,KAAMuT,CAAAA,UAAlB,EAAgC,CAACvT,KAAMuU,CAAAA,MAAvC,CAAb,CACnBvU,MAAMmU,CAAAA,cAAN,EAF+B,CAKnCpB,MAAMyB,CAAAA,UAAN,CAAiBtB,KAAjB,CAAwBA,KAAMD,CAAAA,OAA9B,CAEA;MAAOC,MAtFsB,CA+FjCH,MAAMyB,CAAAA,UAAN,CAAmBC,QAAQ,CAACvB,KAAD,CAAQD,OAAR,CAAiB,CACxCC,KAAMD,CAAAA,OAAN,CAAgBA,OAEhBA,QAAQyB,CAAAA,gBAAR,CAAyB,WAAzB,CAAsCxB,KAAMU,CAAAA,SAA5C,CACAX,QAAQyB,CAAAA,gBAAR,CAAyB,WAAzB,CAAsCxB,KAAMW,CAAAA,SAA5C,CACAZ,QAAQyB,CAAAA,gBAAR,CAAyB,SAAzB,CAAoCxB,KAAMY,CAAAA,OAA1C,CAEAb,QAAQyB,CAAAA,gBAAR,CAAyB,YAAzB,CAAuCxB,KAAMa,CAAAA,UAA7C,CACAd,QAAQyB,CAAAA,gBAAR,CAAyB,gBAAzB,CAA2CxB,KAAMa,CAAAA,UAAjD,CAEAd,QAAQyB,CAAAA,gBAAR,CAAyB,WAAzB,CAAsCxB,KAAMU,CAAAA,SAA5C,CACAX,QAAQyB,CAAAA,gBAAR,CAAyB,YAAzB,CAAuCxB,KAAMW,CAAAA,SAA7C,CACAZ,QAAQyB,CAAAA,gBAAR,CAAyB,UAAzB,CAAqCxB,KAAMY,CAAAA,OAA3C,CAZwC,CAoB5Cf;KAAM4B,CAAAA,iBAAN,CAA0BC,QAAQ,CAAC1B,KAAD,CAAQ,CACtCA,KAAMS,CAAAA,YAAaC,CAAAA,SAAnB,CAA+B,IAC/BV,MAAMS,CAAAA,YAAaE,CAAAA,SAAnB,CAA+B,IAC/BX,MAAMS,CAAAA,YAAaG,CAAAA,OAAnB,CAA6B,IAC7BZ,MAAMS,CAAAA,YAAaI,CAAAA,UAAnB,CAAgC,IAChCb,MAAMK,CAAAA,UAAN,CAAmB,CALmB,CAc1CR,MAAM8B,CAAAA,SAAN,CAAkBC,QAAQ,CAAC5B,KAAD,CAAQ5B,MAAR,CAAgB,CACtC4B,KAAM5B,CAAAA,MAAO9a,CAAAA,CAAb,CAAiB8a,MAAO9a,CAAAA,CACxB0c,MAAM5B,CAAAA,MAAO7a,CAAAA,CAAb,CAAiB6a,MAAO7a,CAAAA,CACxByc,MAAMvb,CAAAA,QAASnB,CAAAA,CAAf,CAAmB0c,KAAME,CAAAA,QAAS5c,CAAAA,CAAlC,CAAsC0c,KAAMxW,CAAAA,KAAMlG,CAAAA,CAAlD,CAAsD0c,KAAM5B,CAAAA,MAAO9a,CAAAA,CACnE0c,MAAMvb,CAAAA,QAASlB,CAAAA,CAAf,CAAmByc,KAAME,CAAAA,QAAS3c,CAAAA,CAAlC,CAAsCyc,KAAMxW,CAAAA,KAAMjG,CAAAA,CAAlD,CAAsDyc,KAAM5B,CAAAA,MAAO7a,CAAAA,CAJ7B,CAa1Csc,MAAMgC,CAAAA,QAAN,CAAiBC,QAAQ,CAAC9B,KAAD,CAAQxW,KAAR,CAAe,CACpCwW,KAAMxW,CAAAA,KAAMlG,CAAAA,CAAZ,CAAgBkG,KAAMlG,CAAAA,CACtB0c,MAAMxW,CAAAA,KAAMjG,CAAAA,CAAZ,CAAgBiG,KAAMjG,CAAAA,CACtByc,MAAMvb,CAAAA,QAASnB,CAAAA,CAAf;AAAmB0c,KAAME,CAAAA,QAAS5c,CAAAA,CAAlC,CAAsC0c,KAAMxW,CAAAA,KAAMlG,CAAAA,CAAlD,CAAsD0c,KAAM5B,CAAAA,MAAO9a,CAAAA,CACnE0c,MAAMvb,CAAAA,QAASlB,CAAAA,CAAf,CAAmByc,KAAME,CAAAA,QAAS3c,CAAAA,CAAlC,CAAsCyc,KAAMxW,CAAAA,KAAMjG,CAAAA,CAAlD,CAAsDyc,KAAM5B,CAAAA,MAAO7a,CAAAA,CAJ/B,CAgBxCsc,MAAMkB,CAAAA,yBAAN,CAAkCgB,QAAQ,CAACjV,KAAD,CAAQiT,OAAR,CAAiBQ,UAAjB,CAA6B,CAAA,IAC/DyB,cAAgBjC,OAAQkC,CAAAA,qBAAR,EAD+C,CAE/DC,SAAYjC,QAASkC,CAAAA,eAArBD,EAAwCjC,QAAStY,CAAAA,IAAKya,CAAAA,UAAtDF,EAAoEjC,QAAStY,CAAAA,IAFd,CAG/D0a,QAAkCC,IAAAA,EAAxB,GAACtjB,MAAOujB,CAAAA,WAAR,CAAqCvjB,MAAOujB,CAAAA,WAA5C,CAA0DL,QAASM,CAAAA,UAC7EC,SAAAA,CAAkCH,IAAAA,EAAxB,GAACtjB,MAAO0jB,CAAAA,WAAR,CAAqC1jB,MAAO0jB,CAAAA,WAA5C,CAA0DR,QAASS,CAAAA,SAJd,KAK/DC,QAAU9V,KAAMkU,CAAAA,cAGhB4B,QAAJ,EACItf,OACA;AADIsf,OAAA,CAAQ,CAAR,CAAWC,CAAAA,KACf,CADuBb,aAAcc,CAAAA,IACrC,CAD4CT,OAC5C,CAAA9e,KAAA,CAAIqf,OAAA,CAAQ,CAAR,CAAWG,CAAAA,KAAf,CAAuBf,aAAcgB,CAAAA,GAArC,CAA2CP,QAF/C,GAIInf,OACA,CADIwJ,KAAM+V,CAAAA,KACV,CADkBb,aAAcc,CAAAA,IAChC,CADuCT,OACvC,CAAA9e,KAAA,CAAIuJ,KAAMiW,CAAAA,KAAV,CAAkBf,aAAcgB,CAAAA,GAAhC,CAAsCP,QAL1C,CAQA,OAAO,CACHnf,EAAGA,OAAHA,EAAQyc,OAAQkD,CAAAA,WAAhB3f,EAA+Byc,OAAQ5C,CAAAA,KAAvC7Z,EAAgDyc,OAAQkD,CAAAA,WAAxD3f,EAAuEid,UAAvEjd,CADG,CAEHC,EAAGA,KAAHA,EAAQwc,OAAQmD,CAAAA,YAAhB3f,EAAgCwc,OAAQ3C,CAAAA,MAAxC7Z,EAAkDwc,OAAQmD,CAAAA,YAA1D3f,EAA0Egd,UAA1Ehd,CAFG,CAhB4D,CAtK/D,CAAX,CAAD,EAdsD,CAzkJ5C,CAwxJH,QAAQ,CAAC5L,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAUtD,IAAIgrB,SAAW,EAEfxrB,OAAOC,CAAAA,OAAP,CAAiBurB,QAEjB,KAAIC,IAAMjrB,mBAAA,CAAoB,EAApB,CAAV,CACIijB,KAAOjjB,mBAAA,CAAoB,CAApB,CADX;AAEI+K,OAAS/K,mBAAA,CAAoB,CAApB,CAEZ,UAAQ,EAAG,CASRgrB,QAASE,CAAAA,UAAT,CAAsBC,QAAQ,CAACC,eAAD,CAAkBC,MAAlB,CAA0B,CAAA,IAChDH,WAAa,EACbI,OAAAA,CAAaD,MAAOpL,CAAAA,KAAMsL,CAAAA,KAE9B,KAAK,IAAIprB,EAAI,CAAb,CAAgBA,CAAhB,CAAoBirB,eAAgB7nB,CAAAA,MAApC,CAA4CpD,CAAA,EAA5C,CAAiD,CAAA,IACzCkgB,MAAQ+K,eAAA,CAAgBjrB,CAAhB,CAAA,CAAmB,CAAnB,CADiC,CAEzCmgB,MAAQ8K,eAAA,CAAgBjrB,CAAhB,CAAA,CAAmB,CAAnB,CAEZ,KAAW2X,CAANuI,KAAMvI,CAAAA,QAAX,EAA6BqC,CAANkG,KAAMlG,CAAAA,UAA7B,EAAmDrC,CAANwI,KAAMxI,CAAAA,QAAnD,EAAqEqC,CAANmG,KAAMnG,CAAAA,UAArE,GAGK6Q,QAASQ,CAAAA,UAAT,CAAoBnL,KAAM1F,CAAAA,eAA1B,CAA2C2F,KAAM3F,CAAAA,eAAjD,CAHL,EAOI5P,MAAOc,CAAAA,QAAP,CAAgBwU,KAAMnV,CAAAA,MAAtB,CAA8BoV,KAAMpV,CAAAA,MAApC,CAPJ,CAQI,IAAK,IAAInG,EAAyB,CAArB,CAAAsb,KAAM1b,CAAAA,KAAMpB,CAAAA,MAAZ,CAAyB,CAAzB,CAA6B,CAA1C,CAA6CwB,CAA7C,CAAiDsb,KAAM1b,CAAAA,KAAMpB,CAAAA,MAA7D,CAAqEwB,CAAA,EAArE,CAGI,IAFA,IAAIoiB;AAAQ9G,KAAM1b,CAAAA,KAAN,CAAYI,CAAZ,CAAZ,CAESwO,EAAyB,CAArB,CAAA+M,KAAM3b,CAAAA,KAAMpB,CAAAA,MAAZ,CAAyB,CAAzB,CAA6B,CAA1C,CAA6CgQ,CAA7C,CAAiD+M,KAAM3b,CAAAA,KAAMpB,CAAAA,MAA7D,CAAqEgQ,CAAA,EAArE,CAA0E,CACtE,IAAI6T,MAAQ9G,KAAM3b,CAAAA,KAAN,CAAY4O,CAAZ,CAEZ,IAAK4T,KAAL,GAAe9G,KAAf,EAAwB+G,KAAxB,GAAkC9G,KAAlC,EAA4CvV,MAAOc,CAAAA,QAAP,CAAgBsb,KAAMjc,CAAAA,MAAtB,CAA8Bkc,KAAMlc,CAAAA,MAApC,CAA5C,CAAyF,CAAA,IAEjFugB,OAASxI,IAAKhO,CAAAA,EAAL,CAAQkS,KAAR,CAAeC,KAAf,CACTlH,OAAAA,CAAOoL,MAAA,CAAWG,MAAX,CAUPrL,MAAAA,CAAY6K,GAAIS,CAAAA,QAAJ,CAAavE,KAAb,CAAoBC,KAApB,CAPZlH,MAAJyL,EAAYzL,MAAKC,CAAAA,QAAjBwL,CACwBzL,MAAKE,CAAAA,SAD7BuL,CAGwB,IAIR,CAEZvL,MAAU2D,CAAAA,QAAd,EACImH,UAAWnnB,CAAAA,IAAX,CAAgBqc,KAAhB,CAhBiF,CAHnB,CAfrC,CA0CjD,MAAO8K,WA9C6C,CAyDxDF,SAASQ,CAAAA,UAAT,CAAsBI,QAAQ,CAACC,OAAD,CAAUC,OAAV,CAAmB,CAC7C,MAAID,QAAQ/Q,CAAAA,KAAZ,GAAsBgR,OAAQhR,CAAAA,KAA9B,EAAyD,CAAzD,GAAuC+Q,OAAQ/Q,CAAAA,KAA/C,CAC2B,CAD3B,CACW+Q,OAAQ/Q,CAAAA,KADnB,CAG6C,CAH7C,IAGQ+Q,OAAQhR,CAAAA,IAHhB,CAGuBiR,OAAQlR,CAAAA,QAH/B;AAGwF,CAHxF,IAGmDkR,OAAQjR,CAAAA,IAH3D,CAGkEgR,OAAQjR,CAAAA,QAH1E,CAD6C,CAlEzC,CAAX,CAAD,EAlBsD,CAxxJ5C,CAw3JH,QAAQ,CAACpb,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAUtD,IAAIirB,IAAM,EAEVzrB,OAAOC,CAAAA,OAAP,CAAiBwrB,GAEjB,KAAI5b,SAAWrP,mBAAA,CAAoB,CAApB,CAAf,CACIyM,OAASzM,mBAAA,CAAoB,CAApB,CAEZ,UAAQ,EAAG,CAURirB,GAAIS,CAAAA,QAAJ,CAAeK,QAAQ,CAAC1L,KAAD,CAAQC,KAAR,CAAeqL,iBAAf,CAAkC,CAKjDK,IAAAA,UAAkB,CAAA,CAEtB,IAAIL,iBAAJ,CAAuB,CAEftI,IAAAA,UAAUhD,KAAMlL,CAAAA,MAChBmO,UAAAA,CAAUhD,KAAMnL,CAAAA,MAChBiF,UAAAA,CAASiJ,SAAQtJ,CAAAA,KAAjBK,CAAyBiJ,SAAQtJ,CAAAA,KAAjCK,CAAyCiJ,SAAQrJ,CAAAA,YAAjDI,CAAgEiJ,SAAQrJ,CAAAA,YAAxEI,CACSkJ,SAAQvJ,CAAAA,KADjBK,CACyBkJ,SAAQvJ,CAAAA,KADjCK,CACyCkJ,SAAQtJ,CAAAA,YADjDI,CACgEkJ,SAAQtJ,CAAAA,YAI5EgS;SAAA,CAAkBL,iBAAlB,EAAuCA,iBAAkB5H,CAAAA,QAAzD,EAA8E,EAA9E,CAAqE3J,SAGrEgG,UAAA,CAAYuL,iBAZO,CAAvB,IAcIvL,UAAA,CAAY,CAAE2D,SAAU,CAAA,CAAZ,CAA0B1D,KAA1B,CAAwCC,KAAxC,CAGhB,IAAIqL,iBAAJ,EAAyBK,SAAzB,CAUI,IAPIC,SAOA,CAPY7L,SAAU8L,CAAAA,QAOtB,CAHJC,iBAGI,CAHSlB,GAAImB,CAAAA,YAAJ,CAAiBH,SAAUhhB,CAAAA,QAA3B,CAA+CA,CAH5CghB,SAAAI,GAAchM,KAAdgM,CAAsB/L,KAAtB+L,CAA8BhM,KAGcpV,EAAAA,QAA/C,CAFF8Q,CAACkQ,SAAUlQ,CAAAA,IAAV,CAAe4P,iBAAkBW,CAAAA,UAAjC,CAADvQ,CAEE,CAGT,CAFJqE,SAAUmM,CAAAA,MAEN,CAFe,CAAA,CAEf,CAAsB,CAAtB,EAAAJ,iBAAWK,CAAAA,OAAf,CAEI,MADApM,UAAU2D,CAAAA,QACH3D,CADc,CAAA,CACdA,CAAAA,SAFX,CAVJ,IAcO,CAGHqM,iBAAA,CAAYxB,GAAImB,CAAAA,YAAJ,CAAiB/L,KAAMpV,CAAAA,QAAvB,CAAiCqV,KAAMrV,CAAAA,QAAvC;AAAiDoV,KAAMtE,CAAAA,IAAvD,CAEZ,IAAyB,CAAzB,EAAI0Q,iBAAUD,CAAAA,OAAd,CAEI,MADApM,UAAU2D,CAAAA,QACH3D,CADc,CAAA,CACdA,CAAAA,SAGXsM,UAAA,CAAYzB,GAAImB,CAAAA,YAAJ,CAAiB9L,KAAMrV,CAAAA,QAAvB,CAAiCoV,KAAMpV,CAAAA,QAAvC,CAAiDqV,KAAMvE,CAAAA,IAAvD,CAEZ,IAAyB,CAAzB,EAAI2Q,SAAUF,CAAAA,OAAd,CAEI,MADApM,UAAU2D,CAAAA,QACH3D,CADc,CAAA,CACdA,CAAAA,SAGPqM,kBAAUD,CAAAA,OAAd,CAAwBE,SAAUF,CAAAA,OAAlC,CAEIpM,SAAU8L,CAAAA,QAFd,CAEyB7L,KAFzB,EAII8L,iBACA,CADaO,SACb,CAAAtM,SAAU8L,CAAAA,QAAV,CAAqB5L,KALzB,CASAF,UAAUkM,CAAAA,UAAV,CAAuBH,iBAAWG,CAAAA,UA1B/B,CA6BPlM,SAAUC,CAAAA,KAAV,CAAkBA,KAAMpL,CAAAA,EAAN,CAAWqL,KAAMrL,CAAAA,EAAjB,CAAsBoL,KAAtB,CAA8BC,KAChDF,UAAUE,CAAAA,KAAV,CAAkBD,KAAMpL,CAAAA,EAAN,CAAWqL,KAAMrL,CAAAA,EAAjB,CAAsBqL,KAAtB,CAA8BD,KAChDD,UAAU2D,CAAAA,QAAV,CAAqB,CAAA,CACrB3D;SAAU+D,CAAAA,KAAV,CAAkBgI,iBAAWK,CAAAA,OAC7BpM,UAAUiD,CAAAA,OAAV,CAAoBjD,SAAUC,CAAAA,KAAMlL,CAAAA,MACpCiL,UAAUkD,CAAAA,OAAV,CAAoBlD,SAAUE,CAAAA,KAAMnL,CAAAA,MAEpCkL,MAAA,CAAQD,SAAUC,CAAAA,KAClBC,MAAA,CAAQF,SAAUE,CAAAA,KAG4D,EAA9E,CAAI7T,MAAOkB,CAAAA,GAAP,CAAWwe,iBAAWxH,CAAAA,IAAtB,CAA4BlY,MAAO6B,CAAAA,GAAP,CAAWgS,KAAMhU,CAAAA,QAAjB,CAA2B+T,KAAM/T,CAAAA,QAAjC,CAA5B,CAAJ,CACI8T,SAAUqC,CAAAA,MADd,CACuB,CACftX,EAAGghB,iBAAWxH,CAAAA,IAAKxZ,CAAAA,CADJ,CAEfC,EAAG+gB,iBAAWxH,CAAAA,IAAKvZ,CAAAA,CAFJ,CADvB,CAMIgV,SAAUqC,CAAAA,MANd,CAMuB,CACftX,EAAG,CAACghB,iBAAWxH,CAAAA,IAAKxZ,CAAAA,CADL,CAEfC,EAAG,CAAC+gB,iBAAWxH,CAAAA,IAAKvZ,CAAAA,CAFL,CAMvBgV,UAAUuM,CAAAA,OAAV,CAAoBlgB,MAAOoC,CAAAA,IAAP,CAAYuR,SAAUqC,CAAAA,MAAtB,CAEpBrC,UAAUwM,CAAAA,WAAV,CAAwBxM,SAAUwM,CAAAA,WAAlC,EAAiD,EACjDxM,UAAUwM,CAAAA,WAAYzhB,CAAAA,CAAtB;AAA0BiV,SAAUqC,CAAAA,MAAOtX,CAAAA,CAA3C,CAA+CiV,SAAU+D,CAAAA,KACzD/D,UAAUwM,CAAAA,WAAYxhB,CAAAA,CAAtB,CAA0BgV,SAAUqC,CAAAA,MAAOrX,CAAAA,CAA3C,CAA+CgV,SAAU+D,CAAAA,KAGrD0I,kBAAAA,CAAY5B,GAAI6B,CAAAA,aAAJ,CAAkBzM,KAAlB,CAAyBC,KAAzB,CAAgCF,SAAUqC,CAAAA,MAA1C,CACZqB,UAAAA,CAAW,EAGXzU,SAAS3D,CAAAA,QAAT,CAAkB2U,KAAMpV,CAAAA,QAAxB,CAAkC4hB,iBAAA,CAAU,CAAV,CAAlC,CAAJ,EACI/I,SAAS/f,CAAAA,IAAT,CAAc8oB,iBAAA,CAAU,CAAV,CAAd,CAEAxd,SAAS3D,CAAAA,QAAT,CAAkB2U,KAAMpV,CAAAA,QAAxB,CAAkC4hB,iBAAA,CAAU,CAAV,CAAlC,CAAJ,EACI/I,SAAS/f,CAAAA,IAAT,CAAc8oB,iBAAA,CAAU,CAAV,CAAd,CAGkB,EAAtB,CAAI/I,SAASvgB,CAAAA,MAAb,GACQwpB,KAKJ,CALgB9B,GAAI6B,CAAAA,aAAJ,CAAkBxM,KAAlB,CAAyBD,KAAzB,CAAgC5T,MAAOuC,CAAAA,GAAP,CAAWoR,SAAUqC,CAAAA,MAArB,CAAhC,CAKhB,CAHIpT,QAAS3D,CAAAA,QAAT,CAAkB4U,KAAMrV,CAAAA,QAAxB,CAAkC8hB,KAAA,CAAU,CAAV,CAAlC,CAGJ,EAFIjJ,SAAS/f,CAAAA,IAAT,CAAcgpB,KAAA,CAAU,CAAV,CAAd,CAEJ;AAAsB,CAAtB,CAAIjJ,SAASvgB,CAAAA,MAAb,EAA2B8L,QAAS3D,CAAAA,QAAT,CAAkB4U,KAAMrV,CAAAA,QAAxB,CAAkC8hB,KAAA,CAAU,CAAV,CAAlC,CAA3B,EACIjJ,SAAS/f,CAAAA,IAAT,CAAcgpB,KAAA,CAAU,CAAV,CAAd,CAPR,CAWsB,EAAtB,CAAIjJ,SAASvgB,CAAAA,MAAb,GACIugB,SADJ,CACe,CAAC+I,iBAAA,CAAU,CAAV,CAAD,CADf,CAGAzM,UAAU0D,CAAAA,QAAV,CAAqBA,SAErB,OAAO1D,UA5H8C,CAwIzD6K,IAAImB,CAAAA,YAAJ,CAAmBY,QAAQ,CAACD,SAAD,CAAYF,SAAZ,CAAuB9Q,IAAvB,CAA6B,CAOpD,IAPoD,IAChDkR,YAAcxgB,MAAO2C,CAAAA,KAAP,CAAa,CAAb,CADkC,CAEhD8d,YAAczgB,MAAO2C,CAAAA,KAAP,CAAa,CAAb,CAFkC,CAGhD5F,OAAS,CAAEgjB,QAASW,MAAOC,CAAAA,SAAlB,CAHuC,CAIhDZ,OAJgD,CAKhD7H,IALgD,CAO3CxkB,EAAI,CAAb,CAAgBA,CAAhB,CAAoB4b,IAAKxY,CAAAA,MAAzB,CAAiCpD,CAAA,EAAjC,CAAsC,CAClCwkB,IAAA,CAAO5I,IAAA,CAAK5b,CAAL,CAEP8qB,IAAIoC,CAAAA,cAAJ,CAAmBJ,WAAnB,CAAgCF,SAAhC,CAA2CpI,IAA3C,CACAsG,IAAIoC,CAAAA,cAAJ,CAAmBH,WAAnB,CAAgCL,SAAhC,CAA2ClI,IAA3C,CAEA6H,QAAA,CAAUxnB,IAAKuB,CAAAA,GAAL,CAAS0mB,WAAYzmB,CAAAA,GAArB;AAA2B0mB,WAAY3mB,CAAAA,GAAvC,CAA4C2mB,WAAY1mB,CAAAA,GAAxD,CAA8DymB,WAAY1mB,CAAAA,GAA1E,CAEV,IAAe,CAAf,EAAIimB,OAAJ,CAAkB,CACdhjB,MAAOgjB,CAAAA,OAAP,CAAiBA,OACjB,MAFc,CAKdA,OAAJ,CAAchjB,MAAOgjB,CAAAA,OAArB,GACIhjB,MAAOgjB,CAAAA,OAEP,CAFiBA,OAEjB,CADAhjB,MAAOmb,CAAAA,IACP,CADcA,IACd,CAAAnb,MAAO8iB,CAAAA,UAAP,CAAoBnsB,CAHxB,CAbkC,CAoBtC,MAAOqJ,OA3B6C,CAsCxDyhB,IAAIoC,CAAAA,cAAJ,CAAqBC,QAAQ,CAACC,UAAD,CAAatiB,QAAb,CAAuB0Z,IAAvB,CAA6B,CAItD,IAJsD,IAClDpe,IAAMkG,MAAOkB,CAAAA,GAAP,CAAW1C,QAAA,CAAS,CAAT,CAAX,CAAwB0Z,IAAxB,CAD4C,CAElDne,IAAMD,GAF4C,CAI7CpG,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8K,QAAS1H,CAAAA,MAA7B,CAAqCpD,CAArC,EAA0C,CAA1C,CAA6C,CACzC,IAAIwN,IAAMlB,MAAOkB,CAAAA,GAAP,CAAW1C,QAAA,CAAS9K,CAAT,CAAX,CAAwBwkB,IAAxB,CAENhX,IAAJ,CAAUnH,GAAV,CACIA,GADJ,CACUmH,GADV,CAEWA,GAFX,CAEiBpH,GAFjB,GAGIA,GAHJ,CAGUoH,GAHV,CAHyC,CAU7C4f,UAAWhnB,CAAAA,GAAX,CAAiBA,GACjBgnB,WAAW/mB,CAAAA,GAAX,CAAiBA,GAfqC,CA2B1DykB,IAAI6B,CAAAA,aAAJ,CAAoBU,QAAQ,CAACnN,KAAD,CAAQC,KAAR,CAAemC,MAAf,CAAuB,CAAA,IAC3CgL;AAAkBN,MAAOC,CAAAA,SADkB,CAE3CM,aAAejhB,MAAO2C,CAAAA,KAAP,CAAa,CAAb,CACfnE,MAAAA,CAAWqV,KAAMrV,CAAAA,QACjB0iB,MAAAA,CAAgBtN,KAAM/T,CAAAA,QAJqB,KAQ3C6G,OAGJ,KAAShT,OAAT,CAAa,CAAb,CAAgBA,OAAhB,CAAoB8K,KAAS1H,CAAAA,MAA7B,CAAqCpD,OAAA,EAArC,CAA0C,CACtC,IAAAsL,OAASR,KAAA,CAAS9K,OAAT,CACTutB,aAAaviB,CAAAA,CAAb,CAAiBM,MAAON,CAAAA,CAAxB,CAA4BwiB,KAAcxiB,CAAAA,CAC1CuiB,aAAatiB,CAAAA,CAAb,CAAiBK,MAAOL,CAAAA,CAAxB,CAA4BuiB,KAAcviB,CAAAA,CAC1C,KAAAwiB,SAAW,CAACnhB,MAAOkB,CAAAA,GAAP,CAAW8U,MAAX,CAAmBiL,YAAnB,CAEZ,IAAIE,QAAJ,CAAeH,eAAf,CAAgC,CAC5BA,eAAA,CAAkBG,QAClB,KAAA1a,QAAUzH,MAFkB,CANM,CAc1CA,MAAA,CAASR,KAAA,CAD4B,CAArB4iB,EAAA3a,OAAQzD,CAAAA,KAARoe,CAAgB,CAAhBA,CAAyB3a,OAAQzD,CAAAA,KAAjCoe,CAAyC,CAAzCA,CAA6C5iB,KAAS1H,CAAAA,MAAtDsqB,CAA+D,CACtE,CACTH,aAAaviB,CAAAA,CAAb,CAAiBM,MAAON,CAAAA,CAAxB,CAA4BwiB,KAAcxiB,CAAAA,CAC1CuiB,aAAatiB,CAAAA,CAAb,CAAiBK,MAAOL,CAAAA,CAAxB,CAA4BuiB,KAAcviB,CAAAA,CAC1CqiB,gBAAA,CAAkB,CAAChhB,MAAOkB,CAAAA,GAAP,CAAW8U,MAAX;AAAmBiL,YAAnB,CACnBva,QAAA,CAAU1H,MAGVA,OAAA,CAASR,KAAA,EADQiI,OAAQzD,CAAAA,KAChB,CADwB,CACxB,EAD6BxE,KAAS1H,CAAAA,MACtC,CACTmqB,aAAaviB,CAAAA,CAAb,CAAiBM,MAAON,CAAAA,CAAxB,CAA4BwiB,KAAcxiB,CAAAA,CAC1CuiB,aAAatiB,CAAAA,CAAb,CAAiBK,MAAOL,CAAAA,CAAxB,CAA4BuiB,KAAcviB,CAAAA,CAC1CwiB,SAAA,CAAW,CAACnhB,MAAOkB,CAAAA,GAAP,CAAW8U,MAAX,CAAmBiL,YAAnB,CACRE,SAAJ,CAAeH,eAAf,GACIta,OADJ,CACc1H,MADd,CAIA,OAAO,CAACyH,OAAD,CAAUC,OAAV,CAxCwC,CAnN3C,CAAX,CAAD,EAjBsD,CAx3J5C,CA4oKH,QAAQ,CAAC3T,eAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAQtD,IAAI8tB,OAAS,EAEbtuB,gBAAOC,CAAAA,OAAP,CAAiBquB,MAEjB,KAAIrrB,OAASzC,mBAAA,CAAoB,CAApB,CAEZ,UAAQ,EAAG,CAER8tB,MAAOC,CAAAA,SAAP,CAAmB,EAQnBD,OAAOE,CAAAA,QAAP,CAAkBC,QAAQ,CAACxY,MAAD,CAAS,CAC1BqY,MAAOI,CAAAA,QAAP,CAAgBzY,MAAhB,CAAL,EACIhT,MAAOuF,CAAAA,IAAP,CAAY,kBAAZ;AAAgC8lB,MAAOhoB,CAAAA,QAAP,CAAgB2P,MAAhB,CAAhC,CAAyD,yCAAzD,CAGJ,IAAIA,MAAO/U,CAAAA,IAAX,GAAmBotB,OAAOC,CAAAA,SAA1B,CAAqC,CAAA,IAC7BI,WAAaL,MAAOC,CAAAA,SAAP,CAAiBtY,MAAO/U,CAAAA,IAAxB,CADgB,CAE7B0tB,cAAgBN,MAAOO,CAAAA,YAAP,CAAoB5Y,MAAO6Y,CAAAA,OAA3B,CAAoCC,CAAAA,MAFvB,CAG7BC,kBAAoBV,MAAOO,CAAAA,YAAP,CAAoBF,UAAWG,CAAAA,OAA/B,CAAwCC,CAAAA,MAE5DH,cAAJ,CAAoBI,iBAApB,EACI/rB,MAAOuF,CAAAA,IAAP,CAAY,kBAAZ,CAAgC8lB,MAAOhoB,CAAAA,QAAP,CAAgBqoB,UAAhB,CAAhC,CAA6D,iBAA7D,CAAgFL,MAAOhoB,CAAAA,QAAP,CAAgB2P,MAAhB,CAAhF,CACA,CAAAqY,MAAOC,CAAAA,SAAP,CAAiBtY,MAAO/U,CAAAA,IAAxB,CAAA,CAAgC+U,MAFpC,EAGW2Y,aAAJ,CAAoBI,iBAApB,CACH/rB,MAAOuF,CAAAA,IAAP,CAAY,kBAAZ;AAAgC8lB,MAAOhoB,CAAAA,QAAP,CAAgBqoB,UAAhB,CAAhC,CAA6D,0BAA7D,CAAyFL,MAAOhoB,CAAAA,QAAP,CAAgB2P,MAAhB,CAAzF,CADG,CAEIA,MAFJ,GAEe0Y,UAFf,EAGH1rB,MAAOuF,CAAAA,IAAP,CAAY,kBAAZ,CAAgC8lB,MAAOhoB,CAAAA,QAAP,CAAgB2P,MAAhB,CAAhC,CAAyD,kDAAzD,CAX6B,CAArC,IAcIqY,OAAOC,CAAAA,SAAP,CAAiBtY,MAAO/U,CAAAA,IAAxB,CAAA,CAAgC+U,MAGpC,OAAOA,OAtBwB,CAgCnCqY,OAAOW,CAAAA,OAAP,CAAiBC,QAAQ,CAACC,UAAD,CAAa,CAClC,MAAOb,OAAOC,CAAAA,SAAP,CAAiBD,MAAOc,CAAAA,eAAP,CAAuBD,UAAvB,CAAmCjuB,CAAAA,IAApD,CAD2B,CAUtCotB,OAAOhoB,CAAAA,QAAP,CAAkB+oB,QAAQ,CAACpZ,MAAD,CAAS,CAC/B,MAAyB,QAAlB,GAAA,MAAOA,OAAP,CAA6BA,MAA7B,EAAuCA,MAAO/U,CAAAA,IAA9C,EAAsD,WAAtD,EAAqE,GAArE,EAA4E+U,MAAO6Y,CAAAA,OAAnF,EAA8F7Y,MAAOqZ,CAAAA,KAArG,EAA8G,OAA9G,CADwB,CAcnChB;MAAOI,CAAAA,QAAP,CAAkBa,QAAQ,CAAC7rB,GAAD,CAAM,CAC5B,MAAOA,IAAP,EAAcA,GAAIxC,CAAAA,IAAlB,EAA0BwC,GAAIorB,CAAAA,OAA9B,EAAyCprB,GAAI8rB,CAAAA,OADjB,CAWhClB,OAAOmB,CAAAA,MAAP,CAAgBC,QAAQ,CAAC1vB,MAAD,CAASkB,IAAT,CAAe,CACnC,MAAmC,EAAnC,CAAOlB,MAAO2vB,CAAAA,IAAKvmB,CAAAA,OAAZ,CAAoBlI,IAApB,CAD4B,CAavCotB,OAAOsB,CAAAA,KAAP,CAAeC,QAAQ,CAAC5Z,MAAD,CAASjW,MAAT,CAAiB,CACpC,IAAI8vB,OAAS7Z,MAAO8Z,CAAAA,GAAhBD,EAAuBxB,MAAOc,CAAAA,eAAP,CAAuBnZ,MAAO8Z,CAAAA,GAA9B,CAC3B,OAAO,CAAC9Z,MAAO8Z,CAAAA,GAAf,EAAuB/vB,MAAOkB,CAAAA,IAA9B,GAAuC4uB,MAAO5uB,CAAAA,IAA9C,EAAsDotB,MAAO0B,CAAAA,gBAAP,CAAwBhwB,MAAO8uB,CAAAA,OAA/B,CAAwCgB,MAAOR,CAAAA,KAA/C,CAFlB,CAqBxChB,OAAO2B,CAAAA,GAAP,CAAaC,QAAQ,CAAClwB,MAAD,CAASmwB,OAAT,CAAkB,CACnCnwB,MAAOowB,CAAAA,IAAP,CAAkChoB,CAAnBpI,MAAOowB,CAAAA,IAAYhoB,EAAJ,EAAIA,EAAAA,MAApB,CAA2B+nB,OAA3B,EAAsC,EAAtC,CAEd,IAA2B,CAA3B,GAAInwB,MAAOowB,CAAAA,IAAKrsB,CAAAA,MAAhB,CACId,MAAOuF,CAAAA,IAAP,CAAY,aAAZ,CAA2B8lB,MAAOhoB,CAAAA,QAAP,CAAgBtG,MAAhB,CAA3B;AAAoD,+CAApD,CADJ,KAAA,CAKIqwB,OAAAA,CAAe/B,MAAO+B,CAAAA,YAAP,CAAoBrwB,MAApB,CACfswB,QAAAA,CAAqBrtB,MAAO4G,CAAAA,eAAP,CAAuBwmB,OAAvB,CAGzB,KAJA,IAEIE,OAAS,EAFb,CAIS5vB,EAAI,CAAb,CAAgBA,CAAhB,CAAoB2vB,OAAmBvsB,CAAAA,MAAvC,CAA+CpD,CAA/C,EAAoD,CAApD,CACI,GAAI2vB,OAAA,CAAmB3vB,CAAnB,CAAJ,GAA8BX,MAAOkB,CAAAA,IAArC,CAAA,CAIA,IAAI+U,OAASqY,MAAOW,CAAAA,OAAP,CAAeqB,OAAA,CAAmB3vB,CAAnB,CAAf,CAERsV,OAAL,CAKIqY,MAAOmB,CAAAA,MAAP,CAAczvB,MAAd,CAAsBiW,MAAO/U,CAAAA,IAA7B,CALJ,GASKotB,MAAOsB,CAAAA,KAAP,CAAa3Z,MAAb,CAAqBjW,MAArB,CAmBL,GAlBIiD,MAAOuF,CAAAA,IAAP,CAAY,aAAZ,CAA2B8lB,MAAOhoB,CAAAA,QAAP,CAAgB2P,MAAhB,CAA3B,CAAoD,QAApD,CAA8DA,MAAO8Z,CAAAA,GAArE,CAA0E,kBAA1E,CAA8FzB,MAAOhoB,CAAAA,QAAP,CAAgBtG,MAAhB,CAA9F,CAAwH,GAAxH,CACA,CAAAiW,MAAOua,CAAAA,OAAP,CAAiB,CAAA,CAiBrB,EAdIva,MAAOuZ,CAAAA,OAAX,CACIvZ,MAAOuZ,CAAAA,OAAP,CAAexvB,MAAf,CADJ,EAGIiD,MAAOuF,CAAAA,IAAP,CAAY,aAAZ;AAA2B8lB,MAAOhoB,CAAAA,QAAP,CAAgB2P,MAAhB,CAA3B,CAAoD,uCAApD,CACA,CAAAA,MAAOua,CAAAA,OAAP,CAAiB,CAAA,CAJrB,CAcA,CAPIva,MAAOua,CAAAA,OAAX,EACID,MAAOhsB,CAAAA,IAAP,CAAY,eAAZ,CAAoB+pB,MAAOhoB,CAAAA,QAAP,CAAgB2P,MAAhB,CAApB,CACA,CAAA,OAAOA,MAAOua,CAAAA,OAFlB,EAIID,MAAOhsB,CAAAA,IAAP,CAAY,IAAZ,CAAmB+pB,MAAOhoB,CAAAA,QAAP,CAAgB2P,MAAhB,CAAnB,CAGJ,CAAAjW,MAAO2vB,CAAAA,IAAKprB,CAAAA,IAAZ,CAAiB0R,MAAO/U,CAAAA,IAAxB,CA5BA,EACIqvB,MAAOhsB,CAAAA,IAAP,CAAY,IAAZ,CAAmB+rB,OAAA,CAAmB3vB,CAAnB,CAAnB,CAPJ,CAqCgB,CAApB,CAAI4vB,MAAOxsB,CAAAA,MAAX,EACId,MAAOqF,CAAAA,IAAP,CAAYioB,MAAO1nB,CAAAA,IAAP,CAAY,IAAZ,CAAZ,CAhDJ,CAHmC,CA6DvCylB,OAAO+B,CAAAA,YAAP,CAAsBI,QAAQ,CAACzwB,MAAD,CAAS0wB,OAAT,CAAkB,CAAA,IACxCC,WAAarC,MAAOc,CAAAA,eAAP,CAAuBpvB,MAAvB,CAD2B,CAExCkB,KAAOyvB,UAAWzvB,CAAAA,IAEtBwvB,QAAA,CAAUA,OAAV,EAAqB,EAErB,IAAI,EAAAxvB,IAAA,GAAQwvB,QAAR,CAAJ,CAAA,CAIA1wB,MAAA,CAASsuB,MAAOW,CAAAA,OAAP,CAAejvB,MAAf,CAAT;AAAmCA,MAEnC0wB,QAAA,CAAQxvB,IAAR,CAAA,CAAgB+B,MAAOuG,CAAAA,GAAP,CAAWxJ,MAAOowB,CAAAA,IAAlB,EAA0B,EAA1B,CAA8B,QAAQ,CAACjB,UAAD,CAAa,CAC3Db,MAAOI,CAAAA,QAAP,CAAgBS,UAAhB,CAAJ,EACIb,MAAOE,CAAAA,QAAP,CAAgBW,UAAhB,CAF2D,KAK3DW,OAASxB,MAAOc,CAAAA,eAAP,CAAuBD,UAAvB,CALkD,CAM3DyB,SAAWtC,MAAOW,CAAAA,OAAP,CAAeE,UAAf,CAEXyB,SAAJ,EAAgB,CAACtC,MAAO0B,CAAAA,gBAAP,CAAwBY,QAAS9B,CAAAA,OAAjC,CAA0CgB,MAAOR,CAAAA,KAAjD,CAAjB,EACIrsB,MAAOuF,CAAAA,IAAP,CACI,sBADJ,CAC4B8lB,MAAOhoB,CAAAA,QAAP,CAAgBsqB,QAAhB,CAD5B,CACuD,kBADvD,CAEItC,MAAOhoB,CAAAA,QAAP,CAAgBwpB,MAAhB,CAFJ,CAE6B,SAF7B,CAEwCxB,MAAOhoB,CAAAA,QAAP,CAAgBqqB,UAAhB,CAFxC,CAEsE,GAFtE,CAMA,CADAC,QAASJ,CAAAA,OACT,CADmB,CAAA,CACnB,CAAAxwB,MAAOwwB,CAAAA,OAAP,CAAiB,CAAA,CAPrB,EAQYI,QARZ,GASI3tB,MAAOuF,CAAAA,IAAP,CACI,sBADJ;AAC4B8lB,MAAOhoB,CAAAA,QAAP,CAAgB6oB,UAAhB,CAD5B,CACyD,SADzD,CAEIb,MAAOhoB,CAAAA,QAAP,CAAgBqqB,UAAhB,CAFJ,CAEiC,wBAFjC,CAKA,CAAA3wB,MAAOwwB,CAAAA,OAAP,CAAiB,CAAA,CAdrB,CAiBA,OAAOV,OAAO5uB,CAAAA,IAzBiD,CAAnD,CA4BhB,KAAK,IAAIP,EAAI,CAAb,CAAgBA,CAAhB,CAAoB+vB,OAAA,CAAQxvB,IAAR,CAAc6C,CAAAA,MAAlC,CAA0CpD,CAA1C,EAA+C,CAA/C,CACI2tB,MAAO+B,CAAAA,YAAP,CAAoBK,OAAA,CAAQxvB,IAAR,CAAA,CAAcP,CAAd,CAApB,CAAsC+vB,OAAtC,CAGJ,OAAOA,QAtCP,CAN4C,CAwDhDpC,OAAOc,CAAAA,eAAP,CAAyByB,QAAQ,CAAC1B,UAAD,CAAa,CAC1C,MAAIlsB,OAAO0D,CAAAA,QAAP,CAAgBwoB,UAAhB,CAAJ,EACkB2B,uDAEDC,CAAAA,IAAR,CAAa5B,UAAb,CAIE,EAHHlsB,MAAOuF,CAAAA,IAAP,CAAY,yBAAZ,CAAuC2mB,UAAvC,CAAmD,mCAAnD,CAGG,CAAA,CACHjuB,KAAMiuB,UAAWrqB,CAAAA,KAAX,CAAiB,GAAjB,CAAA,CAAsB,CAAtB,CADH;AAEHwqB,MAAOH,UAAWrqB,CAAAA,KAAX,CAAiB,GAAjB,CAAA,CAAsB,CAAtB,CAAPwqB,EAAmC,GAFhC,CAPX,EAaO,CACHpuB,KAAMiuB,UAAWjuB,CAAAA,IADd,CAEHouB,MAAOH,UAAWG,CAAAA,KAAlBA,EAA2BH,UAAWL,CAAAA,OAFnC,CAdmC,CAoC9CR,OAAOO,CAAAA,YAAP,CAAsBmC,QAAQ,CAAC1B,KAAD,CAAQ,CAClC,IAAIwB,QAAU,8DAETA,QAAQC,CAAAA,IAAR,CAAazB,KAAb,CAAL,EACIrsB,MAAOuF,CAAAA,IAAP,CAAY,sBAAZ,CAAoC8mB,KAApC,CAA2C,kCAA3C,CAGAnqB,QAAAA,CAAQ2rB,OAAQG,CAAAA,IAAR,CAAa3B,KAAb,CACZ,KAAI4B,MAAQvD,MAAA,CAAOxoB,OAAA,CAAM,CAAN,CAAP,CAAZ,CACIgsB,MAAQxD,MAAA,CAAOxoB,OAAA,CAAM,CAAN,CAAP,CADZ,CAEIisB,MAAQzD,MAAA,CAAOxoB,OAAA,CAAM,CAAN,CAAP,CAEZ,OAAO,CACHksB,QAAS,EAAQ,CAAAlsB,OAAA,CAAM,CAAN,CAAR,EAAoB,CAAAA,OAAA,CAAM,CAAN,CAApB,CADN,CAEH2pB,QAAS3pB,OAAA,CAAM,CAAN,CAFN,CAGImqB,KAHJ,CAIHgC,SAAUnsB,OAAA,CAAM,CAAN,CAAVmsB;AAAsBnsB,OAAA,CAAM,CAAN,CAAtBmsB,EAAkC,EAJ/B,CAKIJ,KALJ,CAMIC,KANJ,CAOIC,KAPJ,CAQHjsB,MAAO,CAAC+rB,KAAD,CAAQC,KAAR,CAAeC,KAAf,CARJ,CASHG,WAAYpsB,OAAA,CAAM,CAAN,CATT,CAUH4pB,OAAgB,GAAhBA,CAAQmC,KAARnC,CAA8B,GAA9BA,CAAsBoC,KAAtBpC,CAAoCqC,KAVjC,CAZ2B,CAmCtC9C,OAAO0B,CAAAA,gBAAP,CAA0BwB,QAAQ,CAAC1C,OAAD,CAAUQ,KAAV,CAAiB,CAC/CA,KAAA,CAAQA,KAAR,EAAiB,GAD8B,KAG3C7tB,EAAI6sB,MAAOO,CAAAA,YAAP,CAAoBS,KAApB,CAHuC,CAI3CpI,EAAIoH,MAAOO,CAAAA,YAAP,CAAoBC,OAApB,CAER,IAAIrtB,CAAE4vB,CAAAA,OAAN,CAAe,CACX,GAAmB,GAAnB,GAAI5vB,CAAE6vB,CAAAA,QAAN,EAAsC,GAAtC,GAA0BxC,OAA1B,CACI,MAAO,CAAA,CAGX,IAAmB,MAAnB,GAAIrtB,CAAE6vB,CAAAA,QAAN,CACI,MAAOpK,EAAE6H,CAAAA,MAAT,CAAkBttB,CAAEstB,CAAAA,MAGxB,IAAmB,UAAnB,GAAIttB,CAAE6vB,CAAAA,QAAN,CACI,MAAOpK,EAAE6H,CAAAA,MAAT,EAAmBttB,CAAEstB,CAAAA,MAGzB,IAAmB,GAAnB,GAAIttB,CAAE6vB,CAAAA,QAAN,CACI,MAAOpK,EAAEgK,CAAAA,KAAT,GAAmBzvB,CAAEyvB,CAAAA,KAArB,EAA8BhK,CAAEiK,CAAAA,KAAhC,GAA0C1vB,CAAE0vB,CAAAA,KAA5C,EAAqDjK,CAAEkK,CAAAA,KAAvD,EAAgE3vB,CAAE2vB,CAAAA,KAGtE,IAAmB,GAAnB,GAAI3vB,CAAE6vB,CAAAA,QAAN,CACI,MAAc,EAAd;AAAI7vB,CAAEyvB,CAAAA,KAAN,CACWhK,CAAEgK,CAAAA,KADb,GACuBzvB,CAAEyvB,CAAAA,KADzB,EACkChK,CAAE6H,CAAAA,MADpC,EAC8CttB,CAAEstB,CAAAA,MADhD,CAIc,CAAd,CAAIttB,CAAE0vB,CAAAA,KAAN,CACWjK,CAAEiK,CAAAA,KADb,GACuB1vB,CAAE0vB,CAAAA,KADzB,EACkCjK,CAAEkK,CAAAA,KADpC,EAC6C3vB,CAAE2vB,CAAAA,KAD/C,CAIOlK,CAAEkK,CAAAA,KAJT,GAImB3vB,CAAE2vB,CAAAA,KA1Bd,CA8Bf,MAAOtC,QAAP,GAAmBQ,KAAnB,EAAwC,GAAxC,GAA4BR,OApCmB,CA3S3C,CAAX,CAAD,EAdsD,CA5oK5C,CAi/KH,QAAQ,CAAC9uB,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAUtD,IAAIixB,OAAS,EAEbzxB,OAAOC,CAAAA,OAAP,CAAiBwxB,MAEjB,KAAIxuB,OAASzC,mBAAA,CAAoB,CAApB,CAAb,CACI6U,UAAY7U,mBAAA,CAAoB,CAApB,CADhB,CAEI+K,OAAS/K,mBAAA,CAAoB,CAApB,CAFb,CAGI8T,OAAS9T,mBAAA,CAAoB,CAApB,CAHb,CAIIyM,OAASzM,mBAAA,CAAoB,CAApB,CAJb,CAKI0nB,MAAQ1nB,mBAAA,CAAoB,EAApB,CAEX,UAAQ,EAAG,CAKR,GAAsB,WAAtB,GAAI,MAAO6G,OAAX,CAAmC,CAC/B,IAAAqqB,uBAAyBrqB,MAAOsqB,CAAAA,qBAAhCD;AAAyDrqB,MAAOuqB,CAAAA,2BAAhEF,EACiCrqB,MAAOwqB,CAAAA,wBADxCH,EACoErqB,MAAOyqB,CAAAA,uBAD3EJ,EAEiC,QAAQ,CAAChd,QAAD,CAAU,CAAErN,MAAO0qB,CAAAA,UAAP,CAAkB,QAAQ,EAAG,CAAErd,QAAA,CAASzR,MAAOkE,CAAAA,GAAP,EAAT,CAAF,CAA7B,CAA0D,GAA1D,CAAiE,EAAjE,CAAF,CAEnD,KAAA6qB,sBAAwB3qB,MAAO4qB,CAAAA,oBAA/BD,EAAuD3qB,MAAO6qB,CAAAA,uBAA9DF,EACiC3qB,MAAO8qB,CAAAA,0BADxCH,EACsE3qB,MAAO+qB,CAAAA,sBAN9C,CASnCX,MAAOY,CAAAA,QAAP,CAAkB,EAClBZ,OAAOa,CAAAA,UAAP,CAAoB,GAApB,CAA2B,EAU3Bb,OAAOtvB,CAAAA,MAAP,CAAgBowB,QAAQ,CAAC/c,OAAD,CAAU,CAkD9B,IAAIiG,OAASxY,MAAOO,CAAAA,MAAP,CAjDEyW,CACXuY,WAAYf,MADDxX,CAEX4R,OAAQ,IAFG5R,CAGXmO,QAAS,IAHEnO,CAIXwY,OAAQ,IAJGxY,CAKXoO,MAAO,IALIpO;AAMXyY,eAAgB,IANLzY,CAOX0Y,OAAQ,CACJC,YAAa,EADT,CAEJ3gB,MAAO,CAFH,CAGJ4gB,aAAc,EAHV,CAIJC,SAAU,CAJN,CAKJC,cAAe,CALX,CAMJC,YAAa,CANT,CAOJC,iBAAkB,CAPd,CAQJC,wBAAyB,EARrB,CASJC,mBAAoB,EAThB,CAUJC,qBAAsB,EAVlB,CAWJC,eAAgB,EAXZ,CAPGpZ,CAoBXzE,QAAS,CACLgQ,MAAO,GADF,CAELC,OAAQ,GAFH,CAGLmD,WAAY,CAHP,CAIL0K,WAAY,SAJP,CAKLC,oBAAqB,SALhB,CAMLC,UAAW,CAAC,CAAChe,OAAQ9J,CAAAA,MANhB,CAOL+nB,QAAS,CAAA,CAPJ,CAQLC,WAAY,CAAA,CARP,CASLC,aAAc,CAAA,CATT,CAULC,UAAW,CAAA,CAVN,CAWLC,UAAW,CAAA,CAXN,CAYLC,gBAAiB,CAAA,CAZZ,CAaLC,eAAgB,CAAA,CAbX,CAcLC,WAAY,CAAA,CAdP,CAeLC,aAAc,CAAA,CAfT,CAgBLC,eAAgB,CAAA,CAhBX,CAiBLC,gBAAiB,CAAA,CAjBZ;AAkBLC,SAAU,CAAA,CAlBL,CAmBLC,cAAe,CAAA,CAnBV,CAoBLC,mBAAoB,CAAA,CApBf,CAqBLC,QAAS,CAAA,CArBJ,CAsBLC,kBAAmB,CAAA,CAtBd,CAuBLC,gBAAiB,CAAA,CAvBZ,CAwBLC,kBAAmB,CAAA,CAxBd,CAyBLC,kBAAmB,CAAA,CAzBd,CApBE1a,CAiDF,CAAwBzE,OAAxB,CAETiG,OAAOgX,CAAAA,MAAX,GACIhX,MAAOgX,CAAAA,MAAOjN,CAAAA,KACd,CADsB/J,MAAOjG,CAAAA,OAAQgQ,CAAAA,KACrC,EAD8C/J,MAAOgX,CAAAA,MAAOjN,CAAAA,KAC5D,CAAA/J,MAAOgX,CAAAA,MAAOhN,CAAAA,MAAd,CAAuBhK,MAAOjG,CAAAA,OAAQiQ,CAAAA,MAAtC,EAAgDhK,MAAOgX,CAAAA,MAAOhN,CAAAA,MAFlE,CAKAhK,OAAO4M,CAAAA,KAAP,CAAe7S,OAAQ6S,CAAAA,KACvB5M,OAAOoQ,CAAAA,MAAP,CAAgBrW,OAAQqW,CAAAA,MACxBpQ,OAAOgX,CAAAA,MAAP,CAAgBhX,MAAOgX,CAAAA,MAAvB,EAAiCmC,aAAA,CAAcnZ,MAAOjG,CAAAA,OAAQgQ,CAAAA,KAA7B,CAAoC/J,MAAOjG,CAAAA,OAAQiQ,CAAAA,MAAnD,CACjChK,OAAOoZ,CAAAA,OAAP,CAAiBpZ,MAAOgX,CAAAA,MAAOqC,CAAAA,UAAd,CAAyB,IAAzB,CACjBrZ,OAAOsZ,CAAAA,QAAP;AAAkB,EAElBtZ,OAAO/P,CAAAA,MAAP,CAAgB+P,MAAO/P,CAAAA,MAAvB,EAAiC,CAC7B3E,IAAK,CACD4E,EAAG,CADF,CAEDC,EAAG,CAFF,CADwB,CAK7B5E,IAAK,CACD2E,EAAG8P,MAAOgX,CAAAA,MAAOjN,CAAAA,KADhB,CAED5Z,EAAG6P,MAAOgX,CAAAA,MAAOhN,CAAAA,MAFhB,CALwB,CAWC,EAAlC,GAAIhK,MAAOjG,CAAAA,OAAQoT,CAAAA,UAAnB,EACI6I,MAAOuD,CAAAA,aAAP,CAAqBvZ,MAArB,CAA6BA,MAAOjG,CAAAA,OAAQoT,CAAAA,UAA5C,CAGA3lB,OAAO8C,CAAAA,SAAP,CAAiB0V,MAAO2M,CAAAA,OAAxB,CAAJ,CACI3M,MAAO2M,CAAAA,OAAQ6M,CAAAA,WAAf,CAA2BxZ,MAAOgX,CAAAA,MAAlC,CADJ,CAEYhX,MAAOgX,CAAAA,MAAOhI,CAAAA,UAF1B,EAGIxnB,MAAO+E,CAAAA,GAAP,CAAW,0FAAX,CAAuG,MAAvG,CAGJ,OAAOyT,OApFuB,CA4FlCgW,OAAOyD,CAAAA,GAAP,CAAaC,QAAQ,CAAC1Z,MAAD,CAAS,CACzB2Z,SAASA,KAAI,CAACC,IAAD,CAAM,CAChB5Z,MAAOiX,CAAAA,cAAP,CAAwBhB,sBAAA,CAAuB0D,IAAvB,CAgwCW;IACnCvJ,OA/vCcpQ,MA+vCEoQ,CAAAA,MADmB,CAEnC8G,OAhwCclX,MAgwCEkX,CAAAA,MAFmB,CAGnCC,YAAcD,MAAOC,CAAAA,WAHc,CAInChP,UAAYiI,MAAO8G,CAAAA,MAAO/O,CAAAA,SAE9B+O,OAAO1gB,CAAAA,KAAP,CApwC0BojB,IAowC1B,CAAsB1C,MAAOG,CAAAA,QAA7B,EAAyCrB,MAAOa,CAAAA,UAChDK,OAAOG,CAAAA,QAAP,CArwC0BuC,IAuwC1B1C,OAAOM,CAAAA,gBAAP,CAA0BrP,SAA1B,CAAsC+O,MAAOI,CAAAA,aAA7C,EAA8D,CAC9DJ,OAAOI,CAAAA,aAAP,CAAuBnP,SAEvB+O,OAAOE,CAAAA,YAAayC,CAAAA,OAApB,CAA4B3C,MAAO1gB,CAAAA,KAAnC,CACA0gB,OAAOE,CAAAA,YAAa9uB,CAAAA,MAApB,CAA6ByB,IAAKuB,CAAAA,GAAL,CAAS4rB,MAAOE,CAAAA,YAAa9uB,CAAAA,MAA7B,CAAqC6uB,WAArC,CAE7BD,OAAOQ,CAAAA,kBAAmBmC,CAAAA,OAA1B,CAAkCzJ,MAAO8G,CAAAA,MAAO4C,CAAAA,SAAhD,CACA5C,OAAOQ,CAAAA,kBAAmBpvB,CAAAA,MAA1B,CAAmCyB,IAAKuB,CAAAA,GAAL,CAAS4rB,MAAOQ,CAAAA,kBAAmBpvB,CAAAA,MAAnC;AAA2C6uB,WAA3C,CAEnCD,OAAOO,CAAAA,uBAAwBoC,CAAAA,OAA/B,CAAuC3C,MAAOM,CAAAA,gBAA9C,CACAN,OAAOO,CAAAA,uBAAwBnvB,CAAAA,MAA/B,CAAwCyB,IAAKuB,CAAAA,GAAL,CAAS4rB,MAAOO,CAAAA,uBAAwBnvB,CAAAA,MAAxC,CAAgD6uB,WAAhD,CAExCD,OAAOS,CAAAA,oBAAqBkC,CAAAA,OAA5B,CAAoCzJ,MAAO8G,CAAAA,MAAOK,CAAAA,WAAlD,CACAL,OAAOS,CAAAA,oBAAqBrvB,CAAAA,MAA5B,CAAqCyB,IAAKuB,CAAAA,GAAL,CAAS4rB,MAAOS,CAAAA,oBAAqBrvB,CAAAA,MAArC,CAA6C6uB,WAA7C,CAErCD,OAAOU,CAAAA,cAAeiC,CAAAA,OAAtB,CAA8B3C,MAAOK,CAAAA,WAArC,CACAL,OAAOU,CAAAA,cAAetvB,CAAAA,MAAtB,CAA+ByB,IAAKuB,CAAAA,GAAL,CAAS4rB,MAAOU,CAAAA,cAAetvB,CAAAA,MAA/B,CAAuC6uB,WAAvC,CArxC3BnB,OAAO+D,CAAAA,KAAP,CAAa/Z,MAAb,CAAqB4Z,IAArB,CAEA,EAAI5Z,MAAOjG,CAAAA,OAAQqe,CAAAA,SAAnB;AAAgCpY,MAAOjG,CAAAA,OAAQoe,CAAAA,SAA/C,GACInC,MAAOgE,CAAAA,KAAP,CAAaha,MAAb,CAAqBA,MAAOoZ,CAAAA,OAA5B,CAAqCQ,IAArC,CAGJ,EAAI5Z,MAAOjG,CAAAA,OAAQse,CAAAA,eAAnB,EAAsCrY,MAAOjG,CAAAA,OAAQoe,CAAAA,SAArD,GACInC,MAAOnqB,CAAAA,WAAP,CAAmBmU,MAAnB,CAA2BA,MAAOoZ,CAAAA,OAAlC,CAA2CQ,IAA3C,CAZY,CAAnBD,CAAD,EAD0B,CAuB9B3D,OAAOiE,CAAAA,IAAP,CAAcC,QAAQ,CAACla,MAAD,CAAS,CAC3BuW,qBAAA,CAAsBvW,MAAOiX,CAAAA,cAA7B,CAD2B,CAW/BjB,OAAOuD,CAAAA,aAAP,CAAuBY,QAAQ,CAACna,MAAD,CAASmN,UAAT,CAAqB,CAAA,IAC5CpT,QAAUiG,MAAOjG,CAAAA,OACjBid,OAAAA,CAAShX,MAAOgX,CAAAA,MAED,OAAnB,GAAI7J,UAAJ,GA+xCIiM,UAMJ,CApyCgCpC,MA8xCXqC,CAAAA,UAAP,CAAkB,IAAlB,CAMd,CAAA,UAAA,EALuBztB,MAAOwuB,CAAAA,gBAK9B,EALkD,CAKlD,GAJ6BhB,UAAQiB,CAAAA,4BAIrC,EAJqEjB,UAAQkB,CAAAA,yBAI7E;AAHiClB,UAAQmB,CAAAA,wBAGzC,EAHqEnB,UAAQoB,CAAAA,uBAG7E,EAFiCpB,UAAQqB,CAAAA,sBAEzC,EAFmE,CAEnE,CAryCA,CAIA1gB,QAAQoT,CAAAA,UAAR,CAAqBA,UACrB6J,OAAO0D,CAAAA,YAAP,CAAoB,kBAApB,CAAwCvN,UAAxC,CACA6J,OAAOjN,CAAAA,KAAP,CAAehQ,OAAQgQ,CAAAA,KAAvB,CAA+BoD,UAC/B6J,OAAOhN,CAAAA,MAAP,CAAgBjQ,OAAQiQ,CAAAA,MAAxB,CAAiCmD,UACjC6J,OAAO2D,CAAAA,KAAM5Q,CAAAA,KAAb,CAAqBhQ,OAAQgQ,CAAAA,KAA7B,CAAqC,IACrCiN,OAAO2D,CAAAA,KAAM3Q,CAAAA,MAAb,CAAsBjQ,OAAQiQ,CAAAA,MAA9B,CAAuC,IAbS,CA6BpDgM,OAAO4E,CAAAA,MAAP,CAAgBC,QAAQ,CAAC7a,MAAD,CAAShF,OAAT,CAAkB8f,OAAlB,CAA2BC,MAA3B,CAAmC,CACvDA,MAAA,CAA2B,WAAlB,GAAA,MAAOA,OAAP,CAAgCA,MAAhC,CAAyC,CAAA,CAClD/f,QAAA,CAAUxT,MAAOmD,CAAAA,OAAP,CAAeqQ,OAAf,CAAA,CAA0BA,OAA1B,CAAoC,CAACA,OAAD,CAC9C8f,QAAA;AAAUA,OAAV,EAAqB,CACjB5qB,EAAG,CADc,CAEjBC,EAAG,CAFc,CAWrB,KAJcI,IAAAA,gCAAAA,QAAAA,CAAaA,gCAAAA,QAAbA,CACA,gCAAA,CAACA,QADDA,CACc,gCAAA,CAACA,QADfA,CAILrL,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8V,OAAQ1S,CAAAA,MAA5B,CAAoCpD,CAApC,EAAyC,CAAzC,CAA4C,CAAA,IACpCgC,OAAS8T,OAAA,CAAQ9V,CAAR,CAD2B,CAEpCoG,IAAMpE,MAAO+I,CAAAA,MAAP,CAAgB/I,MAAO+I,CAAAA,MAAO3E,CAAAA,GAA9B,CAAqCpE,MAAOoE,CAAAA,GAA5C,EAAmDpE,MAAOmK,CAAAA,QAA1D,EAAsEnK,MAC5EqE,OAAAA,CAAMrE,MAAO+I,CAAAA,MAAP,CAAgB/I,MAAO+I,CAAAA,MAAO1E,CAAAA,GAA9B,CAAqCrE,MAAOqE,CAAAA,GAA5C,EAAmDrE,MAAOmK,CAAAA,QAA1D,EAAsEnK,MAE5EoE,IAAJ,EAAWC,MAAX,GACQD,GAAI4E,CAAAA,CASR,CATuBA,+BASvB,GAReA,+BAQf,CARmB5E,GAAI4E,CAAAA,CAQvB,EANI3E,MAAI2E,CAAAA,CAMR,CANuBA,+BAMvB;CALeA,+BAKf,CALmB3E,MAAI2E,CAAAA,CAKvB,EAHI5E,GAAI6E,CAAAA,CAGR,CAHuBA,+BAGvB,GAFeA,+BAEf,CAFmB7E,GAAI6E,CAAAA,CAEvB,EAAI5E,MAAI4E,CAAAA,CAAR,CAAuBA,+BAAvB,GACeA,+BADf,CACmB5E,MAAI4E,CAAAA,CADvB,CAVJ,CALwC,CAqBxC4Z,OAAAA,CAAoB7Z,+BAApB6Z,CAAmC7Z,+BAAnC6Z,CAAwC,CAAxCA,CAA4C+Q,OAAQ5qB,CAAAA,CACpD8Z,gCAAAA,CAAqB7Z,+BAArB6Z,CAAoC7Z,+BAApC6Z,CAAyC,CAAzCA,CAA6C8Q,OAAQ3qB,CAAAA,CAGrD6qB,gCAAAA,CADYhb,MAAOgX,CAAAA,MAAOjN,CAAAA,KAC1BiR,CAFahb,MAAOgX,CAAAA,MAAOhN,CAAAA,MAG3BiR,EAAAA,CAAalR,OAAbkR,CAAqBjR,+BAErBzT;MAAAA,CADAD,GACAC,CADS,CAIT0kB,EAAJ,CAAiBD,+BAAjB,CACIzkB,MADJ,CACa0kB,CADb,CAC0BD,+BAD1B,CAGI1kB,GAHJ,CAGa0kB,+BAHb,CAG0BC,CAI1Bjb,OAAOjG,CAAAA,OAAQge,CAAAA,SAAf,CAA2B,CAAA,CAG3B/X,OAAO/P,CAAAA,MAAO3E,CAAAA,GAAI4E,CAAAA,CAAlB,CAAiCA,+BACjC8P,OAAO/P,CAAAA,MAAO1E,CAAAA,GAAI2E,CAAAA,CAAlB,CAAiCA,+BAAjC,CAAqC6Z,OAArC,CAA6CzT,GAC7C0J,OAAO/P,CAAAA,MAAO3E,CAAAA,GAAI6E,CAAAA,CAAlB,CAAiCA,+BACjC6P,OAAO/P,CAAAA,MAAO1E,CAAAA,GAAI4E,CAAAA,CAAlB,CAAiCA,+BAAjC,CAAqC6Z,+BAArC,CAA8CzT,MAG1CwkB,OAAJ,GACI/a,MAAO/P,CAAAA,MAAO3E,CAAAA,GAAI4E,CAAAA,CAGlB,EAH+B,EAG/B,CAHuB6Z,OAGvB,CAHsCA,OAGtC,CAH8CzT,GAG9C,CAHwD,EAGxD,CAFA0J,MAAO/P,CAAAA,MAAO1E,CAAAA,GAAI2E,CAAAA,CAElB,EAF+B,EAE/B,CAFuB6Z,OAEvB;AAFsCA,OAEtC,CAF8CzT,GAE9C,CAFwD,EAExD,CADA0J,MAAO/P,CAAAA,MAAO3E,CAAAA,GAAI6E,CAAAA,CAClB,EADgC,EAChC,CADuB6Z,+BACvB,CADuCA,+BACvC,CADgDzT,MAChD,CAD0D,EAC1D,CAAAyJ,MAAO/P,CAAAA,MAAO1E,CAAAA,GAAI4E,CAAAA,CAAlB,EAAgC,EAAhC,CAAuB6Z,+BAAvB,CAAuCA,+BAAvC,CAAgDzT,MAAhD,CAA0D,EAJ9D,CAQAyJ,OAAO/P,CAAAA,MAAO3E,CAAAA,GAAI4E,CAAAA,CAAlB,EAAuB4qB,OAAQ5qB,CAAAA,CAC/B8P,OAAO/P,CAAAA,MAAO1E,CAAAA,GAAI2E,CAAAA,CAAlB,EAAuB4qB,OAAQ5qB,CAAAA,CAC/B8P,OAAO/P,CAAAA,MAAO3E,CAAAA,GAAI6E,CAAAA,CAAlB,EAAuB2qB,OAAQ3qB,CAAAA,CAC/B6P,OAAO/P,CAAAA,MAAO1E,CAAAA,GAAI4E,CAAAA,CAAlB,EAAuB2qB,OAAQ3qB,CAAAA,CAG3B6P,OAAO4M,CAAAA,KAAX,GACIH,KAAMgC,CAAAA,QAAN,CAAezO,MAAO4M,CAAAA,KAAtB,CAA6B,CACzB1c,GAAI8P,MAAO/P,CAAAA,MAAO1E,CAAAA,GAAI2E,CAAAA,CAAtBA,CAA0B8P,MAAO/P,CAAAA,MAAO3E,CAAAA,GAAI4E,CAAAA,CAA5CA,EAAiD8P,MAAOgX,CAAAA,MAAOjN,CAAAA,KADtC,CAEzB5Z,GAAI6P,MAAO/P,CAAAA,MAAO1E,CAAAA,GAAI4E,CAAAA,CAAtBA,CAA0B6P,MAAO/P,CAAAA,MAAO3E,CAAAA,GAAI6E,CAAAA,CAA5CA,EAAiD6P,MAAOgX,CAAAA,MAAOhN,CAAAA,MAFtC,CAA7B,CAKA;AAAAyC,KAAM8B,CAAAA,SAAN,CAAgBvO,MAAO4M,CAAAA,KAAvB,CAA8B5M,MAAO/P,CAAAA,MAAO3E,CAAAA,GAA5C,CANJ,CA3EuD,CA0F3D0qB,OAAOkF,CAAAA,kBAAP,CAA4BC,QAAQ,CAACnb,MAAD,CAAS,CAMzCA,MAAOoZ,CAAAA,OAAQgC,CAAAA,YAAf,CACIpb,MAAOjG,CAAAA,OAAQoT,CAAAA,UADnB,GALkBnN,MAAO/P,CAAAA,MAAO1E,CAAAA,GAAI2E,CAAAA,CAKpC,CALwC8P,MAAO/P,CAAAA,MAAO3E,CAAAA,GAAI4E,CAAAA,CAK1D,EAHiC8P,MAAOjG,CAAAA,OAAQgQ,CAAAA,KAGhD,EAC8C,CAD9C,CACiD,CADjD,CAEI/J,MAAOjG,CAAAA,OAAQoT,CAAAA,UAFnB,GAJmBnN,MAAO/P,CAAAA,MAAO1E,CAAAA,GAAI4E,CAAAA,CAIrC,CAJyC6P,MAAO/P,CAAAA,MAAO3E,CAAAA,GAAI6E,CAAAA,CAI3D,EAFkC6P,MAAOjG,CAAAA,OAAQiQ,CAAAA,MAEjD,EAE8C,CAF9C,CAEiD,CAFjD,CAKAhK,OAAOoZ,CAAAA,OAAQpoB,CAAAA,SAAf,CAAyB,CAACgP,MAAO/P,CAAAA,MAAO3E,CAAAA,GAAI4E,CAAAA,CAA5C,CAA+C,CAAC8P,MAAO/P,CAAAA,MAAO3E,CAAAA,GAAI6E,CAAAA,CAAlE,CAXyC,CAmB7C6lB,OAAOqF,CAAAA,gBAAP,CAA0BC,QAAQ,CAACtb,MAAD,CAAS,CACvCA,MAAOoZ,CAAAA,OAAQgC,CAAAA,YAAf,CAA4Bpb,MAAOjG,CAAAA,OAAQoT,CAAAA,UAA3C,CAAuD,CAAvD,CAA0D,CAA1D,CAA6DnN,MAAOjG,CAAAA,OAAQoT,CAAAA,UAA5E;AAAwF,CAAxF,CAA2F,CAA3F,CADuC,CAU3C6I,OAAO+D,CAAAA,KAAP,CAAewB,QAAQ,CAACvb,MAAD,CAAS4Z,IAAT,CAAe,CAC9B4B,IAAAA,CAAYh0B,MAAOkE,CAAAA,GAAP,EADkB,KAE9B0kB,OAASpQ,MAAOoQ,CAAAA,MAFc,CAG9B2J,MAAQ3J,MAAO2J,CAAAA,KAHe,CAI9B/C,OAAShX,MAAOgX,CAAAA,MAJc,CAK9BoC,QAAUpZ,MAAOoZ,CAAAA,OALa,CAM9Brf,QAAUiG,MAAOjG,CAAAA,OANa,CAO9Bmd,OAASlX,MAAOkX,CAAAA,MAPc,CAS9Bpa,UAAYlD,SAAUkD,CAAAA,SAAV,CAAoBid,KAApB,CACZ/c,MAAAA,CAAiBpD,SAAUoD,CAAAA,cAAV,CAAyB+c,KAAzB,CAVa,KAW9BlC,WAAa9d,OAAQke,CAAAA,UAAR,CAAqBle,OAAQ+d,CAAAA,mBAA7B,CAAmD/d,OAAQ8d,CAAAA,UAX1C,CAY9Bzd,OAAS,EAZqB,CAa9BC,YAAc,EAbgB,CAgB9BX,MAAQ,CACRyO,UAAWiI,MAAO8G,CAAAA,MAAO/O,CAAAA,SADjB,CAIZtP,OAAOW,CAAAA,OAAP,CAAewG,MAAf,CAAuB,cAAvB,CAAuCtG,KAAvC,CAGA,IAAIsG,MAAOyb,CAAAA,iBAAX,GAAiC5D,UAAjC,CACI,CA4pCJ,IAAI6D;AA5pCyB7D,UA8pCzB,iBAAiBvC,CAAAA,IAAjB,CA9pCyBuC,UA8pCzB,CAAJ,GACI6D,aADJ,CACoB,MADpB,CA9pC6B7D,UA8pC7B,CAC0C,GAD1C,CA9pCqB7X,OAiqCdgX,CAAAA,MAAO2D,CAAAA,KAAM9C,CAAAA,UAApB,CAAiC6D,aAjqCZ1b,OAkqCdgX,CAAAA,MAAO2D,CAAAA,KAAMgB,CAAAA,cAApB,CAAqC,SAlqChB3b,OAmqCdyb,CAAAA,iBAAP,CAnqC6B5D,UAAzB,CAGJuB,OAAQwC,CAAAA,wBAAR,CAAmC,WACnCxC,QAAQhZ,CAAAA,SAAR,CAAoB,aACpBgZ,QAAQyC,CAAAA,QAAR,CAAiB,CAAjB,CAAoB,CAApB,CAAuB7E,MAAOjN,CAAAA,KAA9B,CAAqCiN,MAAOhN,CAAAA,MAA5C,CACAoP,QAAQwC,CAAAA,wBAAR,CAAmC,aAGnC,IAAI7hB,OAAQge,CAAAA,SAAZ,CAAuB,CAEnB,IAAK7yB,MAAL,CAAS,CAAT,CAAYA,MAAZ,CAAgB4X,SAAUxU,CAAAA,MAA1B,CAAkCpD,MAAA,EAAlC,CACQqP,UACJ,CADWuI,SAAA,CAAU5X,MAAV,CACX,CAAI4K,MAAOc,CAAAA,QAAP,CAAgB2D,UAAKtE,CAAAA,MAArB;AAA6B+P,MAAO/P,CAAAA,MAApC,CAAJ,EACImK,MAAOtR,CAAAA,IAAP,CAAYyL,UAAZ,CAIR,KAAKrP,MAAL,CAAS,CAAT,CAAYA,MAAZ,CAAgB8X,KAAe1U,CAAAA,MAA/B,CAAuCpD,MAAA,EAAvC,CAA4C,CACpCkW,SAAAA,CAAa4B,KAAA,CAAe9X,MAAf,CACbkgB,WAAAA,CAAQhK,SAAWgK,CAAAA,KACnBC,cAAAA,CAAQjK,SAAWiK,CAAAA,KAHiB,KAIpC6B,YAAc9L,SAAW2K,CAAAA,MAJW,CAKpCoB,YAAc/L,SAAW4K,CAAAA,MAEzBZ,WAAJ,GAAW8B,WAAX,CAAyB1V,MAAO2B,CAAAA,GAAP,CAAWiS,UAAM/T,CAAAA,QAAjB,CAA2B+J,SAAW2K,CAAAA,MAAtC,CAAzB,CACIV,cAAJ,GAAW8B,WAAX,CAAyB3V,MAAO2B,CAAAA,GAAP,CAAWkS,aAAMhU,CAAAA,QAAjB,CAA2B+J,SAAW4K,CAAAA,MAAtC,CAAzB,CAEKkB,YAAL,EAAqBC,WAArB,GAGIrX,MAAOW,CAAAA,QAAP,CAAgBuP,MAAO/P,CAAAA,MAAvB,CAA+BiX,WAA/B,CAHJ,EAGmDpX,MAAOW,CAAAA,QAAP,CAAgBuP,MAAO/P,CAAAA,MAAvB,CAA+BkX,WAA/B,CAHnD,GAII9M,WAAYvR,CAAAA,IAAZ,CAAiBsS,SAAjB,CAdoC,CAkB5C4a,MAAOkF,CAAAA,kBAAP,CAA0Blb,MAA1B,CAGIA;MAAO4M,CAAAA,KAAX,GACIH,KAAMgC,CAAAA,QAAN,CAAezO,MAAO4M,CAAAA,KAAtB,CAA6B,CACzB1c,GAAI8P,MAAO/P,CAAAA,MAAO1E,CAAAA,GAAI2E,CAAAA,CAAtBA,CAA0B8P,MAAO/P,CAAAA,MAAO3E,CAAAA,GAAI4E,CAAAA,CAA5CA,EAAiD8P,MAAOjG,CAAAA,OAAQgQ,CAAAA,KADvC,CAEzB5Z,GAAI6P,MAAO/P,CAAAA,MAAO1E,CAAAA,GAAI4E,CAAAA,CAAtBA,CAA0B6P,MAAO/P,CAAAA,MAAO3E,CAAAA,GAAI6E,CAAAA,CAA5CA,EAAiD6P,MAAOjG,CAAAA,OAAQiQ,CAAAA,MAFvC,CAA7B,CAKA,CAAAyC,KAAM8B,CAAAA,SAAN,CAAgBvO,MAAO4M,CAAAA,KAAvB,CAA8B5M,MAAO/P,CAAAA,MAAO3E,CAAAA,GAA5C,CANJ,CA9BmB,CAAvB,IAuCI+O,YAGA,CAHc2C,KAGd,CAFA5C,MAEA,CAFS0C,SAET,CAAkC,CAAlC,GAAIkD,MAAOjG,CAAAA,OAAQoT,CAAAA,UAAnB,EACInN,MAAOoZ,CAAAA,OAAQgC,CAAAA,YAAf,CAA4Bpb,MAAOjG,CAAAA,OAAQoT,CAAAA,UAA3C,CAAuD,CAAvD,CAA0D,CAA1D,CAA6DnN,MAAOjG,CAAAA,OAAQoT,CAAAA,UAA5E,CAAwF,CAAxF,CAA2F,CAA3F,CAIJ,EAACpT,OAAQke,CAAAA,UAAb,EAA4B7H,MAAO0L,CAAAA,cAAnC,EAAqD/hB,OAAQme,CAAAA,YAA7D,CAEIlC,MAAO5b,CAAAA,MAAP,CAAc4F,MAAd,CAAsB5F,MAAtB,CAA8Bgf,OAA9B,CAFJ,EAIQrf,OAAQif,CAAAA,eAIZ;AAHIhD,MAAO+F,CAAAA,eAAP,CAAuB/b,MAAvB,CAA+B5F,MAA/B,CAAuCgf,OAAvC,CAGJ,CAAApD,MAAOgG,CAAAA,cAAP,CAAsBhc,MAAtB,CAA8B5F,MAA9B,CAAsCgf,OAAtC,CARJ,CAWIrf,QAAQwe,CAAAA,UAAZ,EACIvC,MAAOiG,CAAAA,UAAP,CAAkBjc,MAAlB,CAA0B5F,MAA1B,CAAkCgf,OAAlC,CAEJ,EAAIrf,OAAQ4e,CAAAA,QAAZ,EAAwB5e,OAAQ8e,CAAAA,kBAAhC,GACI7C,MAAOkG,CAAAA,QAAP,CAAgBlc,MAAhB,CAAwB5F,MAAxB,CAAgCgf,OAAhC,CAEArf,QAAQ6e,CAAAA,aAAZ,EACI5C,MAAOmG,CAAAA,aAAP,CAAqBnc,MAArB,CAA6B5F,MAA7B,CAAqCgf,OAArC,CAEArf,QAAQye,CAAAA,YAAZ,EACIxC,MAAOoG,CAAAA,YAAP,CAAoBpc,MAApB,CAA4B5F,MAA5B,CAAoCgf,OAApC,CAEArf,QAAQ+e,CAAAA,OAAZ,EACI9C,MAAOqG,CAAAA,OAAP,CAAerc,MAAf,CAAuB5F,MAAvB,CAA+Bgf,OAA/B,CAEArf,QAAQ2e,CAAAA,eAAZ,EACI1C,MAAOsG,CAAAA,WAAP,CAAmBtc,MAAnB,CAA2BoQ,MAAOpL,CAAAA,KAAM/W,CAAAA,IAAxC,CAA8CmrB,OAA9C,CAEArf;OAAQ0e,CAAAA,cAAZ,EACIzC,MAAO/F,CAAAA,UAAP,CAAkBjQ,MAAlB,CAA0BoQ,MAAOpL,CAAAA,KAAM/W,CAAAA,IAAvC,CAA6CmrB,OAA7C,CAEArf,QAAQgf,CAAAA,iBAAZ,EACI/C,MAAOuG,CAAAA,aAAP,CAAqBvc,MAArB,CAA6B5F,MAA7B,CAAqCgf,OAArC,CAEArf,QAAQmf,CAAAA,iBAAZ,EACIlD,MAAOwG,CAAAA,aAAP,CAAqBxc,MAArB,CAA6BA,MAAO4M,CAAAA,KAApC,CAA2CwM,OAA3C,CAEJpD,OAAO3b,CAAAA,WAAP,CAAmBA,WAAnB,CAAgC+e,OAAhC,CAEIrf,QAAQue,CAAAA,cAAZ,EACItC,MAAOyG,CAAAA,IAAP,CAAYzc,MAAZ,CAAoBoQ,MAAOqM,CAAAA,IAA3B,CAAiCrD,OAAjC,CAEArf,QAAQge,CAAAA,SAAZ,EAEI/B,MAAOqF,CAAAA,gBAAP,CAAwBrb,MAAxB,CAGJnH,OAAOW,CAAAA,OAAP,CAAewG,MAAf,CAAuB,aAAvB,CAAsCtG,KAAtC,CAGAwd,OAAOK,CAAAA,WAAP,CAAqB/vB,MAAOkE,CAAAA,GAAP,EAArB,CAAoC8vB,IAnIF,CA8ItCxF,OAAOgE,CAAAA,KAAP,CAAe0C,QAAQ,CAAC1c,MAAD,CAASoZ,OAAT,CAAkBQ,IAAlB,CAAwB,CACvCxJ,IAAAA;AAASpQ,MAAOoQ,CAAAA,MAUpB,KAX2C,IAEvC2J,MAAQ3J,IAAO2J,CAAAA,KAFwB,CAGvC3f,OAASR,SAAUkD,CAAAA,SAAV,CAAoBid,KAApB,CAH8B,CAIvCrwB,MAAQ,CAJ+B,CAWlCxE,EAJLgL,MAIKhL,CAJD,CAIR,CAAgBA,CAAhB,CAAoBkV,MAAO9R,CAAAA,MAA3B,CAAmCpD,CAAnC,EAAwC,CAAxC,CACIwE,KAAA,EAAS0Q,MAAA,CAAOlV,CAAP,CAAUwE,CAAAA,KAAMpB,CAAAA,MAIzBq0B,KAAAA,CAAW,CACX,KAAQjzB,KADG,CAEX,KAAQ0Q,MAAO9R,CAAAA,MAFJ,CAGX,KAAQsR,SAAUoD,CAAAA,cAAV,CAAyB+c,KAAzB,CAAgCzxB,CAAAA,MAH7B,CAIX,KAAQsR,SAAUsD,CAAAA,aAAV,CAAwB6c,KAAxB,CAA+BzxB,CAAAA,MAJ5B,CAKX,KAAQ8nB,IAAOpL,CAAAA,KAAM/W,CAAAA,IAAK3F,CAAAA,MALf,CASf8wB,QAAQhZ,CAAAA,SAAR,CAAoB,SACpBgZ,QAAQyC,CAAAA,QAAR,CAAiB3rB,MAAjB,CAlBQC,CAkBR,CAAuB,KAAvB,CApBa6Z,EAoBb,CAEAoP,QAAQwD,CAAAA,IAAR,CAAe,YACfxD,QAAQyD,CAAAA,YAAR,CAAuB,KACvBzD,QAAQ0D,CAAAA,SAAR,CAAoB,OAGpB,KAAKn2B,IAAIA,GAAT,GAAgBg2B,KAAhB,CACQI,KASJ,CATcJ,IAAA,CAASh2B,GAAT,CASd,CAPAyyB,OAAQhZ,CAAAA,SAOR,CAPoB,MAOpB,CANAgZ,OAAQ4D,CAAAA,QAAR,CAAiBr2B,GAAjB;AAAsBuJ,MAAtB,CAhCQ6Z,EAgCR,CAAiC,CAAjC,CAMA,CAHAqP,OAAQhZ,CAAAA,SAGR,CAHoB,MAGpB,CAFAgZ,OAAQ4D,CAAAA,QAAR,CAAiBD,KAAjB,CAA0B7sB,MAA1B,CApCQ6Z,EAoCR,CAAqC,EAArC,CAEA,CAAA7Z,MAAA,EAtCQ6Z,EAL+B,CAsD/CiM,OAAOnqB,CAAAA,WAAP,CAAqBoxB,QAAQ,CAACjd,MAAD,CAASoZ,OAAT,CAAkB,CAAA,IAEvClC,OAASlX,MAAOkX,CAAAA,MAFuB,CAGvCE,aAAeF,MAAOE,CAAAA,YAHiB,CAIvCQ,eAAiBV,MAAOU,CAAAA,cAJe,CAKvCH,wBAA0BP,MAAOO,CAAAA,uBALM,CAMvCC,mBAAqBR,MAAOQ,CAAAA,kBANW,CAOvCC,qBAAuBT,MAAOS,CAAAA,oBAC9BuF,OAAAA,CAPSld,MAAOoQ,CAAAA,MAOS8G,CAAAA,MAAO4C,CAAAA,SARO,KAUvCqD,UAAYC,KAAA,CAAMhG,YAAN,CAV2B,CAWvCiG,YAAcD,KAAA,CAAMxF,cAAN,CAXyB,CAYvC0F,gBAAkBF,KAAA,CAAM1F,kBAAN,CAZqB;AAavC6F,kBAAoBH,KAAA,CAAMzF,oBAAN,CAbmB,CAevC6F,SADuBJ,KAAAK,CAAMhG,uBAANgG,CACvBD,CAAmCL,SAAnCK,EAAiD,CACjDE,OAAAA,CAAO,GAAPA,CAAcP,SAAdO,EAA4B,CAUhCtE,QAAQhZ,CAAAA,SAAR,CAAoB,SACpBgZ,QAAQyC,CAAAA,QAAR,CAAiB,CAAjB,CAAoB,EAApB,CAAwB,GAAxB,CANa7R,EAMb,CAGAgM,OAAOlB,CAAAA,MAAP,CACIsE,OADJ,CARQlpB,EAQR,CAPQC,EAOR,CAVY4Z,EAUZ,CAZkB4T,CAYlB,CACuCvG,YAAa9uB,CAAAA,MADpD,CAEIyB,IAAK6zB,CAAAA,KAAL,CAAWF,MAAX,CAFJ,CAEsB,MAFtB,CAGIA,MAHJ,CAGU1H,MAAOY,CAAAA,QAHjB,CAII,QAAQ,CAAC1xB,CAAD,CAAI,CAAE,MAAQkyB,aAAA,CAAalyB,CAAb,CAAR,CAA0Bi4B,SAA1B,CAAuC,CAAzC,CAJhB,CAQAnH,OAAOlB,CAAAA,MAAP,CACIsE,OADJ,CACa,EADb,CAfQjpB,EAeR,CAlBY4Z,EAkBZ,CApBkB4T,CAoBlB,CACqDjG,kBAAmBpvB,CAAAA,MADxE,CAEI40B,MAAgB1T,CAAAA,OAAhB,CAAwB,CAAxB,CAFJ,CAEiC,KAFjC,CAGIwM,MAAOa,CAAAA,UAHX,CAGwBqG,MAHxB,CAII,QAAQ,CAACh4B,CAAD,CAAI,CAAE,MAAQwyB,mBAAA,CAAmBxyB,CAAnB,CAAR,CAAgCo4B,eAAhC,CAAmD,CAArD,CAJhB,CAQAtH;MAAOlB,CAAAA,MAAP,CACIsE,OADJ,CACa,GADb,CAvBQjpB,EAuBR,CA1BY4Z,EA0BZ,CA5BkB4T,CA4BlB,CAC2DhG,oBAAqBrvB,CAAAA,MADhF,CAEIi1B,iBAAkB/T,CAAAA,OAAlB,CAA0B,CAA1B,CAFJ,CAEmC,KAFnC,CAGI,CAHJ,CAGS+T,iBAHT,CAG6BvH,MAAOY,CAAAA,QAHpC,CAII,QAAQ,CAAC1xB,CAAD,CAAI,CAAE,MAAQyyB,qBAAA,CAAqBzyB,CAArB,CAAR,CAAkCq4B,iBAAlC,CAAuD,CAAzD,CAJhB,CAQAvH,OAAOlB,CAAAA,MAAP,CACIsE,OADJ,CACa,GADb,CA/BQjpB,EA+BR,CAlCY4Z,EAkCZ,CApCkB4T,CAoClB,CAC2D/F,cAAetvB,CAAAA,MAD1E,CAEI+0B,WAAY7T,CAAAA,OAAZ,CAAoB,CAApB,CAFJ,CAE6B,KAF7B,CAGI,CAHJ,CAGS6T,WAHT,CAGuBrH,MAAOY,CAAAA,QAH9B,CAII,QAAQ,CAAC1xB,CAAD,CAAI,CAAE,MAAQ0yB,eAAA,CAAe1yB,CAAf,CAAR,CAA4Bm4B,WAA5B,CAA2C,CAA7C,CAJhB,CAQArH,OAAOlB,CAAAA,MAAP,CACIsE,OADJ,CACa,GADb,CAvCQjpB,EAuCR,CA1CY4Z,EA0CZ,CA5CkB4T,CA4ClB,CAC2DlG,uBAAwBnvB,CAAAA,MADnF,CAEIk1B,QAAShU,CAAAA,OAAT,CAAiB,CAAjB,CAFJ,CAE0B,IAF1B,CAGIgU,QAHJ,CAGeA,QAHf,CAG0BA,QAH1B,CAII,QAAQ,CAACt4B,CAAD,CAAI,CAAE,OAAUuyB,uBAAA,CAAwBvyB,CAAxB,CAAV;AAAuCkyB,YAAA,CAAalyB,CAAb,CAAvC,CAA0Ds4B,QAA1D,EAAuE,CAAvE,EAA4E,CAA9E,CAJhB,CA9D2C,CAoF/CxH,OAAOlB,CAAAA,MAAP,CAAgB+I,QAAQ,CAACzE,OAAD,CAAUlpB,CAAV,CAAaC,CAAb,CAAgB4Z,KAAhB,CAAuBC,MAAvB,CAA+B8T,KAA/B,CAAsCvjB,KAAtC,CAA6CwjB,SAA7C,CAAwDC,KAAxD,CAA+D,CAEnF5E,OAAQjZ,CAAAA,WAAR,CAAsB,MACtBiZ,QAAQhZ,CAAAA,SAAR,CAAoB,MACpBgZ,QAAQ/Y,CAAAA,SAAR,CAAoB,CACpB+Y,QAAQyC,CAAAA,QAAR,CAAiB3rB,CAAjB,CAAoBC,CAApB,CAAwB,CAAxB,CAA2B4Z,KAA3B,CAAkC,CAAlC,CAGAqP,QAAQ6E,CAAAA,SAAR,EACA7E,QAAQ8E,CAAAA,MAAR,CAAehuB,CAAf,CAAkBC,CAAlB,CAAsB,CAAtB,CAA0B6Z,MAA1B,CAAmCxiB,MAAO4D,CAAAA,KAAP,CAAa,EAAb,CAAmB4yB,KAAA,CAAM,CAAN,CAAnB,CAA6B,EAA7B,CAAiC,CAAjC,CAAnC,CACA,KAAK,IAAI94B,EAAI,CAAb,CAAgBA,CAAhB,CAAoB6kB,KAApB,CAA2B7kB,CAA3B,EAAgC,CAAhC,CACIk0B,OAAQ+E,CAAAA,MAAR,CAAejuB,CAAf,CAAmBhL,CAAnB,CAAsBiL,CAAtB,CAA0B,CAA1B,EAA+BjL,CAAA,CAAI44B,KAAJ,CAAY9T,MAAZ,CAAqBxiB,MAAO4D,CAAAA,KAAP,CAAa,EAAb,CAAmB4yB,KAAA,CAAM94B,CAAN,CAAnB,CAA6B,EAA7B,CAAiC,CAAjC,CAArB,CAA2D,CAA1F,EAEJk0B,QAAQgF,CAAAA,MAAR,EAGAhF,QAAQhZ,CAAAA,SAAR,CAAoB,MAApB,CAA6B5Y,MAAO4D,CAAAA,KAAP,CAAa,EAAb,CAAkB,EAAlB,CAAuB2yB,SAAvB,CAAkC,CAAlC,CAAqC,GAArC,CAA7B,CAAyE,YACzE3E,QAAQyC,CAAAA,QAAR,CAAiB3rB,CAAjB;AAAoBC,CAApB,CAAwB,CAAxB,CAA2B,CAA3B,CAA8B,CAA9B,CAGAipB,QAAQwD,CAAAA,IAAR,CAAe,YACfxD,QAAQyD,CAAAA,YAAR,CAAuB,QACvBzD,QAAQ0D,CAAAA,SAAR,CAAoB,OACpB1D,QAAQhZ,CAAAA,SAAR,CAAoB,MACpBgZ,QAAQ4D,CAAAA,QAAR,CAAiBziB,KAAjB,CAAwBrK,CAAxB,CAA4B6Z,KAA5B,CAAmC5Z,CAAnC,CAAuC,CAAvC,CAxBmF,CAkCvF6lB,OAAO3b,CAAAA,WAAP,CAAqBgkB,QAAQ,CAAChkB,WAAD,CAAc+e,OAAd,CAAuB,CAGhD,IAAK,IAAIl0B,EAAI,CAAb,CAAgBA,CAAhB,CAAoBmV,WAAY/R,CAAAA,MAAhC,CAAwCpD,CAAA,EAAxC,CAA6C,CACzC,IAAIkW,WAAaf,WAAA,CAAYnV,CAAZ,CAEjB,IAAKkW,UAAW4E,CAAAA,MAAOC,CAAAA,OAAvB,EAAmC7E,UAAW2K,CAAAA,MAA9C,EAAyD3K,UAAW4K,CAAAA,MAApE,CAAA,CAHyC,IAMrCZ,MAAQhK,UAAWgK,CAAAA,KANkB,CAOrCC,MAAQjK,UAAWiK,CAAAA,KAKnBiZ,MAAA,CADAlZ,KAAJ,CACY5T,MAAO2B,CAAAA,GAAP,CAAWiS,KAAM/T,CAAAA,QAAjB,CAA2B+J,UAAW2K,CAAAA,MAAtC,CADZ,CAGY3K,UAAW2K,CAAAA,MAGvB,IAA+B,KAA/B,GAAI3K,UAAW4E,CAAAA,MAAO/F,CAAAA,IAAtB,CAnBImf,OAoBE6E,CAAAA,SAAF,EAEA;AAtBA7E,OAqBEmF,CAAAA,GAAF,CAAMD,KAAMpuB,CAAAA,CAAZ,CAAeouB,KAAMnuB,CAAAA,CAArB,CAAwB,CAAxB,CAA2B,CAA3B,CAA8B,CAA9B,CAAkCpG,IAAKghB,CAAAA,EAAvC,CACA,CAtBAqO,OAsBEoF,CAAAA,SAAF,EAHJ,KAIO,CAEC,IAAAp1B,IADAic,KAAJ,CACU7T,MAAO2B,CAAAA,GAAP,CAAWkS,KAAMhU,CAAAA,QAAjB,CAA2B+J,UAAW4K,CAAAA,MAAtC,CADV,CAGU5K,UAAW4K,CAAAA,MA3BrBoT,QA8BE6E,CAAAA,SAAF,EA9BA7E,QA+BE8E,CAAAA,MAAF,CAASI,KAAMpuB,CAAAA,CAAf,CAAkBouB,KAAMnuB,CAAAA,CAAxB,CAEA,IAA+B,QAA/B,GAAIiL,UAAW4E,CAAAA,MAAO/F,CAAAA,IAAtB,CAAyC,CACjCzD,KAAAA,CAAQhF,MAAO6B,CAAAA,GAAP,CAAWjK,GAAX,CAAgBk1B,KAAhB,CAKZ,KANqC,IAEjC9W,OAAShW,MAAOoC,CAAAA,IAAP,CAAYpC,MAAOgB,CAAAA,SAAP,CAAiBgE,KAAjB,CAAZ,CAFwB,CAGjCioB,MAAQ10B,IAAK6gB,CAAAA,IAAL,CAAUpjB,MAAO4D,CAAAA,KAAP,CAAagQ,UAAW9S,CAAAA,MAAxB,CAAiC,CAAjC,CAAoC,EAApC,CAAwC,EAAxC,CAAV,CAHyB,CAIjC0iB,MAJiC,CAM5BlhB,EAAI,CAAb,CAAgBA,CAAhB,CAAoB20B,KAApB,CAA2B30B,CAA3B,EAAgC,CAAhC,CACIkhB,MAEA,CAFmB,CAAV,GAAAlhB,CAAA,CAAI,CAAJ,CAAc,CAAd,CAAkB,EAE3B,CA1CRsvB,OA0CU+E,CAAAA,MAAF,CACIG,KAAMpuB,CAAAA,CADV,CACyBpG,CADzB,CAC6B20B,KAD7B,CACcjoB,KAAMtG,CAAAA,CADpB,CACsCsX,MAAOtX,CAAAA,CAD7C,CACiD8a,MADjD,CAC0D,CAD1D,CAEIsT,KAAMnuB,CAAAA,CAFV,CAEyBrG,CAFzB,CAE6B20B,KAF7B,CAEcjoB,KAAMrG,CAAAA,CAFpB,CAEsCqX,MAAOrX,CAAAA,CAF7C;AAEiD6a,MAFjD,CAE0D,CAF1D,CATiC,CAjCzCoO,OAiDE+E,CAAAA,MAAF,CAAS/0B,GAAI8G,CAAAA,CAAb,CAAgB9G,GAAI+G,CAAAA,CAApB,CA1BG,CA6BHiL,UAAW4E,CAAAA,MAAOK,CAAAA,SAAtB,GApDI+Y,OAqDE/Y,CAAAA,SAEF,CAFcjF,UAAW4E,CAAAA,MAAOK,CAAAA,SAEhC,CAvDA+Y,OAsDEjZ,CAAAA,WACF,CADgB/E,UAAW4E,CAAAA,MAAOG,CAAAA,WAClC,CAvDAiZ,OAuDEgF,CAAAA,MAAF,EAHJ,CAMIhjB,WAAW4E,CAAAA,MAAOwG,CAAAA,OAAtB,GA1DI4S,OA2DEhZ,CAAAA,SAKF,CALchF,UAAW4E,CAAAA,MAAOG,CAAAA,WAKhC,CAhEAiZ,OA4DE6E,CAAAA,SAAF,EAIA,CAhEA7E,OA6DEmF,CAAAA,GAAF,CAAMD,KAAMpuB,CAAAA,CAAZ,CAAeouB,KAAMnuB,CAAAA,CAArB,CAAwB,CAAxB,CAA2B,CAA3B,CAA8B,CAA9B,CAAkCpG,IAAKghB,CAAAA,EAAvC,CAGA,CAhEAqO,OA8DEmF,CAAAA,GAAF,CAAMn1B,GAAI8G,CAAAA,CAAV,CAAa9G,GAAI+G,CAAAA,CAAjB,CAAoB,CAApB,CAAuB,CAAvB,CAA0B,CAA1B,CAA8BpG,IAAKghB,CAAAA,EAAnC,CAEA,CAhEAqO,OA+DEoF,CAAAA,SAAF,EACA,CAhEApF,OAgEEsF,CAAAA,IAAF,EANJ,CArDA,CAHyC,CAHG,CA8EpD1I,OAAO5b,CAAAA,MAAP,CAAgBukB,QAAQ,CAAC3e,MAAD,CAAS5F,MAAT,CAAiBgf,OAAjB,CAA0B,CAAA,IAG1Crf,QAAUiG,MAAOjG,CAAAA,OAHyB,CAI1Ckf,kBAAoBlf,OAAQkf,CAAAA,iBAA5BA;AAAiD,CAAClf,OAAQke,CAAAA,UAJhB,CAO1C/yB,CAP0C,CAQ1CoT,CAEJ,KAAKpT,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBkV,MAAO9R,CAAAA,MAAvB,CAA+BpD,CAAA,EAA/B,CAAoC,CAChC,IAAAqP,KAAO6F,MAAA,CAAOlV,CAAP,CAEP,IAAKqP,IAAKyL,CAAAA,MAAOC,CAAAA,OAAjB,CAIA,IAAK3H,CAAL,CAA6B,CAApB,CAAA/D,IAAK7K,CAAAA,KAAMpB,CAAAA,MAAX,CAAwB,CAAxB,CAA4B,CAArC,CAAwCgQ,CAAxC,CAA4C/D,IAAK7K,CAAAA,KAAMpB,CAAAA,MAAvD,CAA+DgQ,CAAA,EAA/D,CAAoE,CAChE,IAAA+J,KAAO9N,IAAK7K,CAAAA,KAAL,CAAW4O,CAAX,CAEP,IAAK+J,IAAKrC,CAAAA,MAAOC,CAAAA,OAAjB,CAAA,CAGIlG,OAAQme,CAAAA,YAAZ,EAA4B3jB,IAAK2K,CAAAA,UAAjC,CAtBAka,OAuBMwF,CAAAA,WADN,CACoB,EADpB,CAC0Bvc,IAAKrC,CAAAA,MAAOE,CAAAA,OADtC,CAEmC,CAFnC,GAEWmC,IAAKrC,CAAAA,MAAOE,CAAAA,OAFvB,GAtBAkZ,OAyBMwF,CAAAA,WAHN,CAGoBvc,IAAKrC,CAAAA,MAAOE,CAAAA,OAHhC,CAMA,IAAImC,IAAKrC,CAAAA,MAAOM,CAAAA,MAAhB,EAA0B+B,IAAKrC,CAAAA,MAAOM,CAAAA,MAAOue,CAAAA,OAA7C,EAAwD,CAAC9kB,OAAQke,CAAAA,UAAjE,CAA6E,CAAA,IAErE3X,OAAS+B,IAAKrC,CAAAA,MAAOM,CAAAA,MACgBue,KAAAA,QAAPve,MAAOue,CAAAA,OAyvBrD,KAAIC,MAzvBkC9e,MAyvBnBsZ,CAAAA,QAAP,CAAgByF,OAAhB,CAERD;KAAJ,GAGAA,KACA,CA/vBsC9e,MA8vBvBsZ,CAAAA,QAAP,CAAgByF,OAAhB,CACR,CADqC,IAAIC,KACzC,CAAAF,KAAMG,CAAAA,GAAN,CAAYF,OAJZ,CACI,QAAA,CAAOD,KA3xBH1F,QAiCMpoB,CAAAA,SAAF,CAAYqR,IAAKhR,CAAAA,QAASnB,CAAAA,CAA1B,CAA6BmS,IAAKhR,CAAAA,QAASlB,CAAAA,CAA3C,CAjCJipB,QAkCMpnB,CAAAA,MAAF,CAASqQ,IAAKnQ,CAAAA,KAAd,CAlCJknB,QAoCM8F,CAAAA,SAAF,CACIL,OADJ,CAEIA,OAAQ9U,CAAAA,KAFZ,CAEoB,CAACzJ,MAAOG,CAAAA,OAF5B,CAEsCH,MAAOC,CAAAA,MAF7C,CAGIse,OAAQ7U,CAAAA,MAHZ,CAGqB,CAAC1J,MAAOI,CAAAA,OAH7B,CAGuCJ,MAAOE,CAAAA,MAH9C,CAIIqe,OAAQ9U,CAAAA,KAJZ,CAIoBzJ,MAAOC,CAAAA,MAJ3B,CAKIse,OAAQ7U,CAAAA,MALZ,CAKqB1J,MAAOE,CAAAA,MAL5B,CApCJ4Y,QA6CMpnB,CAAAA,MAAF,CAAS,CAACqQ,IAAKnQ,CAAAA,KAAf,CA7CJknB,QA8CMpoB,CAAAA,SAAF,CAAY,CAACqR,IAAKhR,CAAAA,QAASnB,CAAAA,CAA3B,CAA8B,CAACmS,IAAKhR,CAAAA,QAASlB,CAAAA,CAA7C,CAlByE,CAA7E,IAmBO,CAEH,GAAIkS,IAAK1B,CAAAA,YAAT,CAjDJyY,OAkDU6E,CAAAA,SAAF,EACA,CAnDR7E,OAmDUmF,CAAAA,GAAF,CAAMlc,IAAKhR,CAAAA,QAASnB,CAAAA,CAApB,CAAuBmS,IAAKhR,CAAAA,QAASlB,CAAAA,CAArC;AAAwCkS,IAAK1B,CAAAA,YAA7C,CAA2D,CAA3D,CAA8D,CAA9D,CAAkE5W,IAAKghB,CAAAA,EAAvE,CAFJ,KAGO,CApDXqO,OAqDU6E,CAAAA,SAAF,EArDR7E,QAsDU8E,CAAAA,MAAF,CAAS7b,IAAKrS,CAAAA,QAAL,CAAc,CAAd,CAAiBE,CAAAA,CAA1B,CAA6BmS,IAAKrS,CAAAA,QAAL,CAAc,CAAd,CAAiBG,CAAAA,CAA9C,CAEA,KAASrG,MAAT,CAAa,CAAb,CAAgBA,MAAhB,CAAoBuY,IAAKrS,CAAAA,QAAS1H,CAAAA,MAAlC,CAA0CwB,MAAA,EAA1C,CACQ,CAACuY,IAAKrS,CAAAA,QAAL,CAAclG,MAAd,CAAkB,CAAlB,CAAqB2K,CAAAA,UAA1B,EAAwCwkB,iBAAxC,CAzDZG,OA0DkB+E,CAAAA,MAAF,CAAS9b,IAAKrS,CAAAA,QAAL,CAAclG,MAAd,CAAiBoG,CAAAA,CAA1B,CAA6BmS,IAAKrS,CAAAA,QAAL,CAAclG,MAAd,CAAiBqG,CAAAA,CAA9C,CADJ,CAzDZipB,OA4DkB8E,CAAAA,MAAF,CAAS7b,IAAKrS,CAAAA,QAAL,CAAclG,MAAd,CAAiBoG,CAAAA,CAA1B,CAA6BmS,IAAKrS,CAAAA,QAAL,CAAclG,MAAd,CAAiBqG,CAAAA,CAA9C,CAGJ,CAAIkS,IAAKrS,CAAAA,QAAL,CAAclG,MAAd,CAAiB2K,CAAAA,UAArB,EAAmC,CAACwkB,iBAApC,EA/DZG,OAgEkB8E,CAAAA,MAAF,CAAS7b,IAAKrS,CAAAA,QAAL,EAAelG,MAAf,CAAmB,CAAnB,EAAwBuY,IAAKrS,CAAAA,QAAS1H,CAAAA,MAAtC,CAA8C4H,CAAAA,CAAvD,CAA0DmS,IAAKrS,CAAAA,QAAL,EAAelG,MAAf,CAAmB,CAAnB,EAAwBuY,IAAKrS,CAAAA,QAAS1H,CAAAA,MAAtC,CAA8C6H,CAAAA,CAAxG,CAhEhBipB;OAoEU+E,CAAAA,MAAF,CAAS9b,IAAKrS,CAAAA,QAAL,CAAc,CAAd,CAAiBE,CAAAA,CAA1B,CAA6BmS,IAAKrS,CAAAA,QAAL,CAAc,CAAd,CAAiBG,CAAAA,CAA9C,CApERipB,QAqEUoF,CAAAA,SAAF,EAjBG,CAoBFzkB,OAAQke,CAAAA,UAAb,EAxEJmB,OAmFU/Y,CAAAA,SAEF,CAFc,CAEd,CArFR+Y,OAoFUjZ,CAAAA,WACF,CADgB,MAChB,CArFRiZ,OAqFUgF,CAAAA,MAAF,EAbJ,GAxEJhF,OAyEUhZ,CAAAA,SAQF,CARciC,IAAKrC,CAAAA,MAAOI,CAAAA,SAQ1B,CANIiC,IAAKrC,CAAAA,MAAOK,CAAAA,SAMhB,GAjFR+Y,OA4Ec/Y,CAAAA,SAEF,CAFcgC,IAAKrC,CAAAA,MAAOK,CAAAA,SAE1B,CA9EZ+Y,OA6EcjZ,CAAAA,WACF,CADgBkC,IAAKrC,CAAAA,MAAOG,CAAAA,WAC5B,CA9EZiZ,OA8EcgF,CAAAA,MAAF,EAGJ,EAjFRhF,OAiFUsF,CAAAA,IAAF,EATJ,CAzBG,CA/CPtF,OAyFEwF,CAAAA,WAAF,CAAgB,CAtEhB,CAHgE,CAPpC,CAVU,CAuGlD5I,OAAOgG,CAAAA,cAAP,CAAwBmD,QAAQ,CAACnf,MAAD,CAAS5F,MAAT,CAAiBgf,OAAjB,CAA0B,CAElDH,MAAAA,CAAoBjZ,MAAOjG,CAAAA,OAAQkf,CAAAA,iBAFe,KAKlD/zB,CALkD,CAMlD4E,CANkD,CAOlDwO,CANI8gB,QAQN6E,CAAAA,SAAF,EAGA,KAAK/4B,CAAL,CAAS,CAAT,CAAYA,CAAZ;AAAgBkV,MAAO9R,CAAAA,MAAvB,CAA+BpD,CAAA,EAA/B,CAAoC,CAChC,IAAAqP,KAAO6F,MAAA,CAAOlV,CAAP,CAEP,IAAKqP,IAAKyL,CAAAA,MAAOC,CAAAA,OAAjB,CAIA,IAAK3H,CAAL,CAA6B,CAApB,CAAA/D,IAAK7K,CAAAA,KAAMpB,CAAAA,MAAX,CAAwB,CAAxB,CAA4B,CAArC,CAAwCgQ,CAAxC,CAA4C/D,IAAK7K,CAAAA,KAAMpB,CAAAA,MAAvD,CAA+DgQ,CAAA,EAA/D,CAAoE,CAChE,IAAA+J,KAAO9N,IAAK7K,CAAAA,KAAL,CAAW4O,CAAX,CAnBP8gB,QAqBE8E,CAAAA,MAAF,CAAS7b,IAAKrS,CAAAA,QAAL,CAAc,CAAd,CAAiBE,CAAAA,CAA1B,CAA6BmS,IAAKrS,CAAAA,QAAL,CAAc,CAAd,CAAiBG,CAAAA,CAA9C,CAEA,KAAKrG,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBuY,IAAKrS,CAAAA,QAAS1H,CAAAA,MAA9B,CAAsCwB,CAAA,EAAtC,CACQ,CAACuY,IAAKrS,CAAAA,QAAL,CAAclG,CAAd,CAAkB,CAAlB,CAAqB2K,CAAAA,UAA1B,EAAwCwkB,MAAxC,CAxBJG,OAyBU+E,CAAAA,MAAF,CAAS9b,IAAKrS,CAAAA,QAAL,CAAclG,CAAd,CAAiBoG,CAAAA,CAA1B,CAA6BmS,IAAKrS,CAAAA,QAAL,CAAclG,CAAd,CAAiBqG,CAAAA,CAA9C,CADJ,CAxBJipB,OA2BU8E,CAAAA,MAAF,CAAS7b,IAAKrS,CAAAA,QAAL,CAAclG,CAAd,CAAiBoG,CAAAA,CAA1B,CAA6BmS,IAAKrS,CAAAA,QAAL,CAAclG,CAAd,CAAiBqG,CAAAA,CAA9C,CAGJ,CAAIkS,IAAKrS,CAAAA,QAAL,CAAclG,CAAd,CAAiB2K,CAAAA,UAArB,EAAmC,CAACwkB,MAApC,EA9BJG,OA+BU8E,CAAAA,MAAF,CAAS7b,IAAKrS,CAAAA,QAAL,EAAelG,CAAf,CAAmB,CAAnB,EAAwBuY,IAAKrS,CAAAA,QAAS1H,CAAAA,MAAtC,CAA8C4H,CAAAA,CAAvD,CAA0DmS,IAAKrS,CAAAA,QAAL,EAAelG,CAAf,CAAmB,CAAnB,EAAwBuY,IAAKrS,CAAAA,QAAS1H,CAAAA,MAAtC,CAA8C6H,CAAAA,CAAxG,CA/BRipB;OAmCE+E,CAAAA,MAAF,CAAS9b,IAAKrS,CAAAA,QAAL,CAAc,CAAd,CAAiBE,CAAAA,CAA1B,CAA6BmS,IAAKrS,CAAAA,QAAL,CAAc,CAAd,CAAiBG,CAAAA,CAA9C,CAjBgE,CAPpC,CAX5BipB,OAuCN/Y,CAAAA,SAAF,CAAc,CAvCN+Y,QAwCNjZ,CAAAA,WAAF,CAAgB,MAxCRiZ,QAyCNgF,CAAAA,MAAF,EA1CsD,CAqD1DpI,OAAO+F,CAAAA,eAAP,CAAyBqD,QAAQ,CAACpf,MAAD,CAAS5F,MAAT,CAAiBgf,OAAjB,CAA0B,CAAA,IAInDl0B,CAJmD,CAKnD4E,CAJIsvB,QAON6E,CAAAA,SAAF,EAGA,KAAK/4B,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBkV,MAAO9R,CAAAA,MAAvB,CAA+BpD,CAAA,EAA/B,CAGI,GAFAqP,MAEI,CAFG6F,MAAA,CAAOlV,CAAP,CAEH,CAACqP,MAAKyL,CAAAA,MAAOC,CAAAA,OAAb,EAA8C,CAA9C,GAAwB1L,MAAK7K,CAAAA,KAAMpB,CAAAA,MAAvC,CAAA,CAbI8wB,OAgBF8E,CAAAA,MAAF,CAAS3pB,MAAKvE,CAAAA,QAAL,CAAc,CAAd,CAAiBE,CAAAA,CAA1B,CAA6BqE,MAAKvE,CAAAA,QAAL,CAAc,CAAd,CAAiBG,CAAAA,CAA9C,CAEA,KAAKrG,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgByK,MAAKvE,CAAAA,QAAS1H,CAAAA,MAA9B,CAAsCwB,CAAA,EAAtC,CAlBIsvB,OAmBE+E,CAAAA,MAAF,CAAS5pB,MAAKvE,CAAAA,QAAL,CAAclG,CAAd,CAAiBoG,CAAAA,CAA1B,CAA6BqE,MAAKvE,CAAAA,QAAL,CAAclG,CAAd,CAAiBqG,CAAAA,CAA9C,CAnBAipB,QAsBF+E,CAAAA,MAAF,CAAS5pB,MAAKvE,CAAAA,QAAL,CAAc,CAAd,CAAiBE,CAAAA,CAA1B,CAA6BqE,MAAKvE,CAAAA,QAAL,CAAc,CAAd,CAAiBG,CAAAA,CAA9C,CATA,CAbIipB,OAyBN/Y,CAAAA,SAAF;AAAc,CAzBN+Y,QA0BNjZ,CAAAA,WAAF,CAAgB,uBA1BRiZ,QA2BNgF,CAAAA,MAAF,EA5BuD,CAuC3DpI,OAAOuG,CAAAA,aAAP,CAAuB8C,QAAQ,CAACrf,MAAD,CAAS5F,MAAT,CAAiBgf,OAAjB,CAA0B,CAAA,IAGjDtvB,CAHiD,CAIjDwO,CAEJ,KAAKpT,MAAL,CAAS,CAAT,CAAYA,MAAZ,CAAgBkV,MAAO9R,CAAAA,MAAvB,CAA+BpD,MAAA,EAA/B,CAAoC,CAChC,IAAIwE,MAAQ0Q,MAAA,CAAOlV,MAAP,CAAUwE,CAAAA,KACtB,KAAK4O,CAAL,CAAwB,CAAf,CAAA5O,KAAMpB,CAAAA,MAAN,CAAmB,CAAnB,CAAuB,CAAhC,CAAmCgQ,CAAnC,CAAuC5O,KAAMpB,CAAAA,MAA7C,CAAqDgQ,CAAA,EAArD,CAA0D,CACtD,IAAI+J,KAAO3Y,KAAA,CAAM4O,CAAN,CACX,KAAKxO,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBuY,IAAKrS,CAAAA,QAAS1H,CAAAA,MAA9B,CAAsCwB,CAAA,EAAtC,CATAsvB,OAUMhZ,CAAAA,SACF,CADc,uBACd,CAXJgZ,OAWM4D,CAAAA,QAAF,CAAW93B,MAAX,CAAe,GAAf,CAAqB4E,CAArB,CAAwBuY,IAAKhR,CAAAA,QAASnB,CAAAA,CAAtC,CAAmF,EAAnF,EAA2CmS,IAAKrS,CAAAA,QAAL,CAAclG,CAAd,CAAiBoG,CAAAA,CAA5D,CAAgEmS,IAAKhR,CAAAA,QAASnB,CAAAA,CAA9E,EAAwFmS,IAAKhR,CAAAA,QAASlB,CAAAA,CAAtG,CAAmJ,EAAnJ,EAA2GkS,IAAKrS,CAAAA,QAAL,CAAclG,CAAd,CAAiBqG,CAAAA,CAA5H,CAAgIkS,IAAKhR,CAAAA,QAASlB,CAAAA,CAA9I,EAJkD,CAF1B,CANiB,CA0BzD6lB,OAAOwG,CAAAA,aAAP;AAAuB8C,QAAQ,CAACtf,MAAD,CAAS4M,KAAT,CAAgBwM,OAAhB,CAAyB,CAC5CA,OACNhZ,CAAAA,SAAF,CAAc,uBADNgZ,QAEN4D,CAAAA,QAAF,CAAWpQ,KAAMvb,CAAAA,QAASnB,CAAAA,CAA1B,CAA8B,IAA9B,CAAqC0c,KAAMvb,CAAAA,QAASlB,CAAAA,CAApD,CAAuDyc,KAAMvb,CAAAA,QAASnB,CAAAA,CAAtE,CAA0E,CAA1E,CAA6E0c,KAAMvb,CAAAA,QAASlB,CAAAA,CAA5F,CAAgG,CAAhG,CAHoD,CAcxD6lB,OAAOiG,CAAAA,UAAP,CAAoBsD,QAAQ,CAACvf,MAAD,CAAS5F,MAAT,CAAiBgf,OAAjB,CAA0B,CAG9Crf,MAAAA,CAAUiG,MAAOjG,CAAAA,OAFbqf,QAIN6E,CAAAA,SAAF,EAEA,KAAK,IAAI/4B,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkV,MAAO9R,CAAAA,MAA3B,CAAmCpD,CAAA,EAAnC,CAGI,GAFWkV,MAAA7F,CAAOrP,CAAPqP,CAEFyL,CAAAA,MAAOC,CAAAA,OAAhB,CAEI,IADA,IAAIvW,MAAQ0Q,MAAA,CAAOlV,CAAP,CAAUwE,CAAAA,KAAtB,CACSI,EAAmB,CAAf,CAAAJ,KAAMpB,CAAAA,MAAN,CAAmB,CAAnB,CAAuB,CAApC,CAAuCwB,CAAvC,CAA2CJ,KAAMpB,CAAAA,MAAjD,CAAyDwB,CAAA,EAAzD,CAA8D,CAC1D,IAAIuY,KAAO3Y,KAAA,CAAMI,CAAN,CAZfsvB,QAaMoG,CAAAA,IAAF,CAAOnd,IAAKpS,CAAAA,MAAO3E,CAAAA,GAAI4E,CAAAA,CAAvB,CAA0BmS,IAAKpS,CAAAA,MAAO3E,CAAAA,GAAI6E,CAAAA,CAA1C,CAA6CkS,IAAKpS,CAAAA,MAAO1E,CAAAA,GAAI2E,CAAAA,CAA7D,CAAiEmS,IAAKpS,CAAAA,MAAO3E,CAAAA,GAAI4E,CAAAA,CAAjF,CAAoFmS,IAAKpS,CAAAA,MAAO1E,CAAAA,GAAI4E,CAAAA,CAApG;AAAwGkS,IAAKpS,CAAAA,MAAO3E,CAAAA,GAAI6E,CAAAA,CAAxH,CAF0D,CAX9DipB,OAmBFjZ,CAAAA,WAAF,CADApG,MAAQke,CAAAA,UAAZ,CACoB,wBADpB,CAGoB,iBArBZmB,QAwBN/Y,CAAAA,SAAF,CAAc,CAxBN+Y,QAyBNgF,CAAAA,MAAF,EA1BkD,CAqCtDpI,OAAOkG,CAAAA,QAAP,CAAkBuD,QAAQ,CAACzf,MAAD,CAAS5F,MAAT,CAAiBgf,OAAjB,CAA0B,CAG5Crf,MAAAA,CAAUiG,MAAOjG,CAAAA,OAH2B,KAK5C7U,CAL4C,CAM5C4E,CAN4C,CAO5CwO,CANI8gB,QAQN6E,CAAAA,SAAF,EAEA,KAAK/4B,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBkV,MAAO9R,CAAAA,MAAvB,CAA+BpD,CAAA,EAA/B,CAAoC,CAC5BqP,IAAAA,KAAO6F,MAAA,CAAOlV,CAAP,CAAX,KACIwE,MAAQ6K,IAAK7K,CAAAA,KAEjB,IAAK6K,IAAKyL,CAAAA,MAAOC,CAAAA,OAAjB,CAGA,GAAIlG,MAAQ4e,CAAAA,QAAZ,CAEI,IAAK7uB,CAAL,CAAwB,CAAf,CAAAJ,KAAMpB,CAAAA,MAAN,CAAmB,CAAnB,CAAuB,CAAhC,CAAmCwB,CAAnC,CAAuCJ,KAAMpB,CAAAA,MAA7C,CAAqDwB,CAAA,EAArD,CAEI,IADAuY,IACK,CADE3Y,KAAA,CAAMI,CAAN,CACF,CAAAwO,CAAA,CAAI,CAAT,CAAYA,CAAZ,CAAgB+J,IAAKvB,CAAAA,IAAKxY,CAAAA,MAA1B,CAAkCgQ,CAAA,EAAlC,CAAuC,CACnC,IAAIoR,KAAOrH,IAAKvB,CAAAA,IAAL,CAAUxI,CAAV,CAtBnB8gB,QAuBU8E,CAAAA,MAAF,CAAS7b,IAAKhR,CAAAA,QAASnB,CAAAA,CAAvB,CAA0BmS,IAAKhR,CAAAA,QAASlB,CAAAA,CAAxC,CAvBRipB;OAwBU+E,CAAAA,MAAF,CAAS9b,IAAKhR,CAAAA,QAASnB,CAAAA,CAAvB,CAAoC,EAApC,CAA2BwZ,IAAKxZ,CAAAA,CAAhC,CAAwCmS,IAAKhR,CAAAA,QAASlB,CAAAA,CAAtD,CAAmE,EAAnE,CAA0DuZ,IAAKvZ,CAAAA,CAA/D,CAHmC,CAJ/C,IAWI,KAAKrG,CAAL,CAAwB,CAAf,CAAAJ,KAAMpB,CAAAA,MAAN,CAAmB,CAAnB,CAAuB,CAAhC,CAAmCwB,CAAnC,CAAuCJ,KAAMpB,CAAAA,MAA7C,CAAqDwB,CAAA,EAArD,CAEI,IADAuY,IACK,CADE3Y,KAAA,CAAMI,CAAN,CACF,CAAAwO,CAAA,CAAI,CAAT,CAAYA,CAAZ,CAAgB+J,IAAKvB,CAAAA,IAAKxY,CAAAA,MAA1B,CAAkCgQ,CAAA,EAAlC,CA9BJ8gB,OAgCU8E,CAAAA,MAAF,CAAS7b,IAAKhR,CAAAA,QAASnB,CAAAA,CAAvB,CAA0BmS,IAAKhR,CAAAA,QAASlB,CAAAA,CAAxC,CACA,CAjCRipB,OAiCU+E,CAAAA,MAAF,EAAU9b,IAAKrS,CAAAA,QAAL,CAAc,CAAd,CAAiBE,CAAAA,CAA3B,CAA+BmS,IAAKrS,CAAAA,QAAL,CAAcqS,IAAKrS,CAAAA,QAAS1H,CAAAA,MAA5B,CAAmC,CAAnC,CAAsC4H,CAAAA,CAArE,EAA0E,CAA1E,EACKmS,IAAKrS,CAAAA,QAAL,CAAc,CAAd,CAAiBG,CAAAA,CADtB,CAC0BkS,IAAKrS,CAAAA,QAAL,CAAcqS,IAAKrS,CAAAA,QAAS1H,CAAAA,MAA5B,CAAmC,CAAnC,CAAsC6H,CAAAA,CADhE,EACqE,CADrE,CAvBoB,CA8BhC4J,MAAQke,CAAAA,UAAZ,EAxCQmB,OAyCFjZ,CAAAA,WACF,CADgB,WAChB,CA1CIiZ,OA0CF/Y,CAAAA,SAAF,CAAc,CAFlB,GAxCQ+Y,OA4CFjZ,CAAAA,WAEF,CAFgB,0BAEhB,CA9CIiZ,OA6CFwC,CAAAA,wBACF;AAD6B,SAC7B,CA9CIxC,OA8CF/Y,CAAAA,SAAF,CAAc,CANlB,CAxCQ+Y,QAiDNgF,CAAAA,MAAF,EAjDQhF,QAkDNwC,CAAAA,wBAAF,CAA6B,aAnDmB,CA8DpD5F,OAAOmG,CAAAA,aAAP,CAAuBuD,QAAQ,CAAC1f,MAAD,CAAS5F,MAAT,CAAiBgf,OAAjB,CAA0B,CAGjDrf,MAAAA,CAAUiG,MAAOjG,CAAAA,OAHgC,KAMjD7U,CANiD,CAOjDoT,CANI8gB,QAQN6E,CAAAA,SAAF,EAGA,KAAK/4B,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBkV,MAAO9R,CAAAA,MAAvB,CAA+BpD,CAAA,EAA/B,CAAoC,CAChC,IAAAqP,KAAO6F,MAAA,CAAOlV,CAAP,CAEP,IAAKqP,IAAKyL,CAAAA,MAAOC,CAAAA,OAAjB,CAIA,IAAK3H,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB/D,IAAK7K,CAAAA,KAAMpB,CAAAA,MAA3B,CAAmCgQ,CAAA,EAAnC,CAAwC,CACpC,IAAA+J,KAAO9N,IAAK7K,CAAAA,KAAL,CAAW4O,CAAX,CAnBP8gB,QAoBEmF,CAAAA,GAAF,CAAMlc,IAAKhR,CAAAA,QAASnB,CAAAA,CAApB,CAAuBmS,IAAKhR,CAAAA,QAASlB,CAAAA,CAArC,CAAwC,CAAxC,CAA2C,CAA3C,CAA8C,CAA9C,CAAkDpG,IAAKghB,CAAAA,EAAvD,CAA2D,CAAA,CAA3D,CApBAqO,QAqBEoF,CAAAA,SAAF,EAHoC,CAPR,CAX5BpF,OA0BFhZ,CAAAA,SAAF,CADArG,MAAQke,CAAAA,UAAZ,CACkB,WADlB,CAGkB,iBA5BVmB,QA8BNsF,CAAAA,IAAF,EA9BQtF,QAgCN6E,CAAAA,SAAF,EAGA;IAAK/4B,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBkV,MAAO9R,CAAAA,MAAvB,CAA+BpD,CAAA,EAA/B,CACIqP,IACA,CADO6F,MAAA,CAAOlV,CAAP,CACP,CAAIqP,IAAKyL,CAAAA,MAAOC,CAAAA,OAAhB,GArCImZ,OAsCEmF,CAAAA,GAAF,CAAMhqB,IAAKqM,CAAAA,YAAa1Q,CAAAA,CAAxB,CAA2BqE,IAAKqM,CAAAA,YAAazQ,CAAAA,CAA7C,CAAgD,CAAhD,CAAmD,CAAnD,CAAsD,CAAtD,CAA0DpG,IAAKghB,CAAAA,EAA/D,CAAmE,CAAA,CAAnE,CACA,CAvCAqO,OAuCEoF,CAAAA,SAAF,EAFJ,CArCIpF,QA2CNhZ,CAAAA,SAAF,CAAc,qBA3CNgZ,QA4CNsF,CAAAA,IAAF,EA7CqD,CAwDzD1I,OAAOoG,CAAAA,YAAP,CAAsBuD,QAAQ,CAAC3f,MAAD,CAAS5F,MAAT,CAAiBgf,OAAjB,CAA0B,CAC5CA,OAEN6E,CAAAA,SAAF,EAEA,KAAS/4B,MAAT,CAAa,CAAb,CAAgBA,MAAhB,CAAoBkV,MAAO9R,CAAAA,MAA3B,CAAmCpD,MAAA,EAAnC,CAAwC,CACpC,IAAIqP,KAAO6F,MAAA,CAAOlV,MAAP,CAENqP,KAAKyL,CAAAA,MAAOC,CAAAA,OAAjB,GAPImZ,OAUF8E,CAAAA,MAAF,CAAS3pB,IAAKlD,CAAAA,QAASnB,CAAAA,CAAvB,CAA0BqE,IAAKlD,CAAAA,QAASlB,CAAAA,CAAxC,CACA,CAXIipB,OAWF+E,CAAAA,MAAF,CAAS5pB,IAAKlD,CAAAA,QAASnB,CAAAA,CAAvB,CAAqE,CAArE,EAA4BqE,IAAKlD,CAAAA,QAASnB,CAAAA,CAA1C,CAA8CqE,IAAKqM,CAAAA,YAAa1Q,CAAAA,CAAhE,EAAwEqE,IAAKlD,CAAAA,QAASlB,CAAAA,CAAtF;AAAoI,CAApI,EAA2FoE,IAAKlD,CAAAA,QAASlB,CAAAA,CAAzG,CAA6GoE,IAAKqM,CAAAA,YAAazQ,CAAAA,CAA/H,EAJA,CAHoC,CAJhCipB,OAcN/Y,CAAAA,SAAF,CAAc,CAdN+Y,QAeNjZ,CAAAA,WAAF,CAAgB,gBAfRiZ,QAgBNgF,CAAAA,MAAF,EAjBoD,CA4BxDpI,OAAOqG,CAAAA,OAAP,CAAiBuD,QAAQ,CAAC5f,MAAD,CAAS5F,MAAT,CAAiBgf,OAAjB,CAA0B,CAC/C,IAEItvB,CAEJ,KAAK5E,MAAL,CAAS,CAAT,CAAYA,MAAZ,CAAgBkV,MAAO9R,CAAAA,MAAvB,CAA+BpD,MAAA,EAA/B,CACI,GAAKkV,MAAA,CAAOlV,MAAP,CAAU8a,CAAAA,MAAOC,CAAAA,OAAtB,CAAA,CAGA,IAAIvW,MAAQ0Q,MAAA,CAAOlV,MAAP,CAAUwE,CAAAA,KACtB,KAAKI,CAAL,CAAwB,CAAf,CAAAJ,KAAMpB,CAAAA,MAAN,CAAmB,CAAnB,CAAuB,CAAhC,CAAmCwB,CAAnC,CAAuCJ,KAAMpB,CAAAA,MAA7C,CAAqDwB,CAAA,EAArD,CAA0D,CACtD,IAAIuY,KAAO3Y,KAAA,CAAMI,CAAN,CAVXsvB,QAWEwD,CAAAA,IAAF,CAAS,YAXTxD,QAYEhZ,CAAAA,SAAF,CAAc,uBAZdgZ,QAaE4D,CAAAA,QAAF,CAAW3a,IAAKrI,CAAAA,EAAhB,CAAoBqI,IAAKhR,CAAAA,QAASnB,CAAAA,CAAlC,CAAsC,EAAtC,CAA0CmS,IAAKhR,CAAAA,QAASlB,CAAAA,CAAxD,CAA4D,EAA5D,CAJsD,CAJ1D,CAN2C,CA2BnD6lB,OAAO/F,CAAAA,UAAP,CAAoB4P,QAAQ,CAAC7f,MAAD;AAASgF,KAAT,CAAgBoU,OAAhB,CAAyB,CAE7Crf,MAAAA,CAAUiG,MAAOjG,CAAAA,OAF4B,KAI7CoL,SAJ6C,CAQ7CjgB,CAPIk0B,QAUN6E,CAAAA,SAAF,EAGA,KAAK/4B,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB8f,KAAM1c,CAAAA,MAAtB,CAA8BpD,CAAA,EAA9B,CAAmC,CAC/B,IAAA+f,KAAOD,KAAA,CAAM9f,CAAN,CAEP,IAAK+f,IAAKC,CAAAA,QAAV,CAIA,IAAKpb,SAAL,CAAS,CAAT,CAAYA,SAAZ,CAAgBmb,IAAKsD,CAAAA,cAAejgB,CAAAA,MAApC,CAA4CwB,SAAA,EAA5C,CAAiD,CAC7C,IACI0G,OADUyU,IAAKsD,CAAAA,cAALU,CAAoBnf,SAApBmf,CACOzY,CAAAA,MAtBrB4oB,QAuBEoG,CAAAA,IAAF,CAAOhvB,MAAON,CAAAA,CAAd,CAAkB,GAAlB,CAAuBM,MAAOL,CAAAA,CAA9B,CAAkC,GAAlC,CAAuC,GAAvC,CAA4C,GAA5C,CAH6C,CAPlB,CAb3BipB,OA4BFhZ,CAAAA,SAAF,CADArG,MAAQke,CAAAA,UAAZ,CACkB,uBADlB,CAGkB,QA9BVmB,QAgCNsF,CAAAA,IAAF,EAhCQtF,QAkCN6E,CAAAA,SAAF,EAGA,KAAK/4B,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB8f,KAAM1c,CAAAA,MAAtB,CAA8BpD,CAAA,EAA9B,CAGI,GAFA+f,IAEUC,CAFHF,KAAA,CAAM9f,CAAN,CAEGggB,CAALD,IAAKC,CAAAA,QAAAA,GAGVC,SAEI,CAFQF,IAAKE,CAAAA,SAEb,CAA6B,CAA7B,CAAAF,IAAKsD,CAAAA,cAAejgB,CAAAA,MALd4c,CAAV,CAKoC,CAC5B4a,MAAAA;AAAa7a,IAAKsD,CAAAA,cAAL,CAAoB,CAApB,CAAuB/X,CAAAA,MAAON,CAAAA,CAA/C,KACI6vB,WAAa9a,IAAKsD,CAAAA,cAAL,CAAoB,CAApB,CAAuB/X,CAAAA,MAAOL,CAAAA,CAEZ,EAAnC,GAAI8U,IAAKsD,CAAAA,cAAejgB,CAAAA,MAAxB,GACIw3B,MACA,EADc7a,IAAKsD,CAAAA,cAAL,CAAoB,CAApB,CAAuB/X,CAAAA,MAAON,CAAAA,CAC5C,CADgD+U,IAAKsD,CAAAA,cAAL,CAAoB,CAApB,CAAuB/X,CAAAA,MAAON,CAAAA,CAC9E,EADmF,CACnF,CAAA6vB,UAAA,EAAc9a,IAAKsD,CAAAA,cAAL,CAAoB,CAApB,CAAuB/X,CAAAA,MAAOL,CAAAA,CAA5C,CAAgD8U,IAAKsD,CAAAA,cAAL,CAAoB,CAApB,CAAuB/X,CAAAA,MAAOL,CAAAA,CAA9E,EAAmF,CAFvF,CAKIgV,UAAUE,CAAAA,KAAd,GAAwBF,SAAU0D,CAAAA,QAAV,CAAmB,CAAnB,CAAsBtU,CAAAA,IAA9C,EAAmF,CAAA,CAAnF,GAAsD4Q,SAAUC,CAAAA,KAAMvI,CAAAA,QAAtE,CAtDAuc,OAuDM8E,CAAAA,MAAF,CAAS4B,MAAT,CAA2C,CAA3C,CAAsB3a,SAAUqC,CAAAA,MAAOtX,CAAAA,CAAvC,CAA8C6vB,UAA9C,CAAgF,CAAhF,CAA2D5a,SAAUqC,CAAAA,MAAOrX,CAAAA,CAA5E,CADJ,CAtDAipB,OAyDM8E,CAAAA,MAAF,CAAS4B,MAAT,CAA2C,CAA3C,CAAsB3a,SAAUqC,CAAAA,MAAOtX,CAAAA,CAAvC,CAA8C6vB,UAA9C,CAAgF,CAAhF,CAA2D5a,SAAUqC,CAAAA,MAAOrX,CAAAA,CAA5E,CAzDJipB,QA4DE+E,CAAAA,MAAF,CAAS2B,MAAT;AAAqBC,UAArB,CAfgC,CA7ChC3G,OAiEFjZ,CAAAA,WAAF,CADApG,MAAQke,CAAAA,UAAZ,CACoB,qBADpB,CAGoB,QAnEZmB,QAsEN/Y,CAAAA,SAAF,CAAc,CAtEN+Y,QAuENgF,CAAAA,MAAF,EAxEiD,CAmFrDpI,OAAOsG,CAAAA,WAAP,CAAqB0D,QAAQ,CAAChgB,MAAD,CAASgF,KAAT,CAAgBoU,OAAhB,CAAyB,CAE9Crf,MAAAA,CAAUiG,MAAOjG,CAAAA,OAF6B,KAQ9C7U,CAPIk0B,QAUN6E,CAAAA,SAAF,EAGA,KAAK/4B,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB8f,KAAM1c,CAAAA,MAAtB,CAA8BpD,CAAA,EAA9B,CAAmC,CAC/B,IAAA+f,KAAOD,KAAA,CAAM9f,CAAN,CAEP,IAAK+f,IAAKC,CAAAA,QAAV,CAAA,CAGAC,IAAA,CAAYF,IAAKE,CAAAA,SACjB,KAAAC,MAAQD,IAAUC,CAAAA,KAClB,KAAAC,MAAQF,IAAUE,CAAAA,KAElB,KAAI/M,EAAI,CAEH+M,MAAMxI,CAAAA,QAAX,EAAwBuI,KAAMvI,CAAAA,QAA9B,GAAwCvE,CAAxC,CAA4C,EAA5C,CACI+M,MAAMxI,CAAAA,QAAV,GAAoBvE,CAApB,CAAwB,CAAxB,CA1BI8gB,QA4BF8E,CAAAA,MAAF,CAAS7Y,KAAMhU,CAAAA,QAASnB,CAAAA,CAAxB,CAA2BmV,KAAMhU,CAAAA,QAASlB,CAAAA,CAA1C,CA5BIipB,QA6BF+E,CAAAA,MAAF,CAAS9Y,KAAMhU,CAAAA,QAASnB,CAAAA,CAAxB,CAA4BiV,IAAUwM,CAAAA,WAAYzhB,CAAAA,CAAlD;AAAsDoI,CAAtD,CAAyD+M,KAAMhU,CAAAA,QAASlB,CAAAA,CAAxE,CAA4EgV,IAAUwM,CAAAA,WAAYxhB,CAAAA,CAAlG,CAAsGmI,CAAtG,CAEAA,EAAA,CAAI,CAEC+M,MAAMxI,CAAAA,QAAX,EAAwBuI,KAAMvI,CAAAA,QAA9B,GAAwCvE,CAAxC,CAA4C,EAA5C,CACI8M,MAAMvI,CAAAA,QAAV,GAAoBvE,CAApB,CAAwB,CAAxB,CAlCI8gB,QAoCF8E,CAAAA,MAAF,CAAS9Y,KAAM/T,CAAAA,QAASnB,CAAAA,CAAxB,CAA2BkV,KAAM/T,CAAAA,QAASlB,CAAAA,CAA1C,CApCIipB,QAqCF+E,CAAAA,MAAF,CAAS/Y,KAAM/T,CAAAA,QAASnB,CAAAA,CAAxB,CAA4BiV,IAAUwM,CAAAA,WAAYzhB,CAAAA,CAAlD,CAAsDoI,CAAtD,CAAyD8M,KAAM/T,CAAAA,QAASlB,CAAAA,CAAxE,CAA4EgV,IAAUwM,CAAAA,WAAYxhB,CAAAA,CAAlG,CAAsGmI,CAAtG,CArBA,CAH+B,CAb3B8gB,OAyCFjZ,CAAAA,WAAF,CADApG,MAAQke,CAAAA,UAAZ,CACoB,qBADpB,CAGoB,QA3CZmB,QA6CNgF,CAAAA,MAAF,EA9CkD,CAyDtDpI,OAAOyG,CAAAA,IAAP,CAAcwD,QAAQ,CAACjgB,MAAD,CAASyc,IAAT,CAAerD,OAAf,CAAwB,CAClCA,OAIFjZ,CAAAA,WAAF,CAHUH,MAAOjG,CAAAA,OAETke,CAAAA,UAAZ,CACoB,qBADpB,CAGoB,qBANZmB,QASN6E,CAAAA,SAAF,EAEIiC,OAAAA,CAAa14B,MAAOoB,CAAAA,IAAP,CAAY6zB,IAAK0D,CAAAA,OAAjB,CAEjB;IAAK,IAAIj7B,EAAI,CAAb,CAAgBA,CAAhB,CAAoBg7B,MAAW53B,CAAAA,MAA/B,CAAuCpD,CAAA,EAAvC,CAA4C,CACxC,IAAIk7B,SAAWF,MAAA,CAAWh7B,CAAX,CAEqB,EAApC,CAAIu3B,IAAK0D,CAAAA,OAAL,CAAaC,QAAb,CAAuB93B,CAAAA,MAA3B,GAGI+3B,QACJ,CADaD,QAAS/2B,CAAAA,KAAT,CAAe,KAAf,CACb,CApBI+vB,OAoBFoG,CAAAA,IAAF,CAAO,EAAP,CAAanzB,QAAA,CAASg0B,QAAA,CAAO,CAAP,CAAT,CAAoB,EAApB,CAAb,CAAuC5D,IAAK6D,CAAAA,WAA5C,CACI,EADJ,CACUj0B,QAAA,CAASg0B,QAAA,CAAO,CAAP,CAAT,CAAoB,EAApB,CADV,CACoC5D,IAAK8D,CAAAA,YADzC,CAEI9D,IAAK6D,CAAAA,WAFT,CAGI7D,IAAK8D,CAAAA,YAHT,CAJA,CAHwC,CAbpCnH,OA0BN/Y,CAAAA,SAAF,CAAc,CA1BN+Y,QA2BNgF,CAAAA,MAAF,EA5B0C,CAsC9CpI,OAAOwK,CAAAA,SAAP,CAAmBC,QAAQ,CAACD,SAAD,CAAYpH,OAAZ,CAAqB,CAAA,IAExCsH,SAAWF,SAAUE,CAAAA,QAFmB,CAGxC1gB,OAASwgB,SAAUxgB,CAAAA,MAHqB,CAIxCjG,QAAUiG,MAAOjG,CAAAA,OAGjBA,QAAQge,CAAAA,SAAZ,GAMIqB,OAAQhjB,CAAAA,KAAR,CAAc,CAAd,GALkB4J,MAAO/P,CAAAA,MAAO1E,CAAAA,GAAI2E,CAAAA,CAKpC,CALwC8P,MAAO/P,CAAAA,MAAO3E,CAAAA,GAAI4E,CAAAA,CAK1D;AAHiC8P,MAAOjG,CAAAA,OAAQgQ,CAAAA,KAGhD,EAAgC,CAAhC,GAJmB/J,MAAO/P,CAAAA,MAAO1E,CAAAA,GAAI4E,CAAAA,CAIrC,CAJyC6P,MAAO/P,CAAAA,MAAO3E,CAAAA,GAAI6E,CAAAA,CAI3D,EAFkC6P,MAAOjG,CAAAA,OAAQiQ,CAAAA,MAEjD,EACA,CAAAoP,OAAQpoB,CAAAA,SAAR,CAAkB,CAACgP,MAAO/P,CAAAA,MAAO3E,CAAAA,GAAI4E,CAAAA,CAArC,CAAwC,CAAC8P,MAAO/P,CAAAA,MAAO3E,CAAAA,GAAI6E,CAAAA,CAA3D,CAPJ,CAUA,KAASjL,MAAT,CAAa,CAAb,CAAgBA,MAAhB,CAAoBw7B,QAASp4B,CAAAA,MAA7B,CAAqCpD,MAAA,EAArC,CAA0C,CAClCy7B,IAAAA,OAAOD,QAAA,CAASx7B,MAAT,CAAY07B,CAAAA,IAEvBxH,QAAQpoB,CAAAA,SAAR,CAAkB,EAAlB,CAAuB,EAAvB,CACAooB,QAAQ/Y,CAAAA,SAAR,CAAoB,CACpB+Y,QAAQjZ,CAAAA,WAAR,CAAsB,qBACtBiZ,QAAQyH,CAAAA,WAAR,CAAoB,CAAC,CAAD,CAAG,CAAH,CAApB,CAEA,QAAQF,MAAK1mB,CAAAA,IAAb,EAEA,KAAK,MAAL,CAGIhK,MAAA,CAAS0wB,MAAK1wB,CAAAA,MACdmpB,QAAQ6E,CAAAA,SAAR,EACA7E,QAAQoG,CAAAA,IAAR,CAAaz1B,IAAKC,CAAAA,KAAL,CAAWiG,MAAO3E,CAAAA,GAAI4E,CAAAA,CAAtB,CAA0B,CAA1B,CAAb,CAA2CnG,IAAKC,CAAAA,KAAL,CAAWiG,MAAO3E,CAAAA,GAAI6E,CAAAA,CAAtB,CAA0B,CAA1B,CAA3C,CACIpG,IAAKC,CAAAA,KAAL,CAAWiG,MAAO1E,CAAAA,GAAI2E,CAAAA,CAAtB;AAA0BD,MAAO3E,CAAAA,GAAI4E,CAAAA,CAArC,CAAyC,CAAzC,CADJ,CACiDnG,IAAKC,CAAAA,KAAL,CAAWiG,MAAO1E,CAAAA,GAAI4E,CAAAA,CAAtB,CAA0BF,MAAO3E,CAAAA,GAAI6E,CAAAA,CAArC,CAAyC,CAAzC,CADjD,CAEAipB,QAAQoF,CAAAA,SAAR,EACApF,QAAQgF,CAAAA,MAAR,EAEA,MAEJ,MAAK,YAAL,CAGI,IAAIztB,MAAQgwB,MAAK5a,CAAAA,MACb4a,OAAKvb,CAAAA,KAAT,GACIzU,KADJ,CACYgwB,MAAK3a,CAAAA,MADjB,CAEAoT,QAAQ6E,CAAAA,SAAR,EACA7E,QAAQmF,CAAAA,GAAR,CAAY5tB,KAAMT,CAAAA,CAAlB,CAAqBS,KAAMR,CAAAA,CAA3B,CAA8B,EAA9B,CAAkC,CAAlC,CAAqC,CAArC,CAAyCpG,IAAKghB,CAAAA,EAA9C,CACAqO,QAAQoF,CAAAA,SAAR,EACApF,QAAQgF,CAAAA,MAAR,EAvBJ,CA6BAhF,OAAQyH,CAAAA,WAAR,CAAoB,EAApB,CACAzH,QAAQpoB,CAAAA,SAAR,CAAkB,GAAlB,CAAwB,GAAxB,CAtCsC,CA0CZ,IAA9B,GAAIwvB,SAAUM,CAAAA,WAAd,GACI1H,OAAQpoB,CAAAA,SAAR,CAAkB,EAAlB,CAAuB,EAAvB,CAWA,CAVAooB,OAAQ/Y,CAAAA,SAUR,CAVoB,CAUpB,CATA+Y,OAAQjZ,CAAAA,WASR,CATsB,qBAStB,CARAiZ,OAAQhZ,CAAAA,SAQR,CARoB,qBAQpB,CAPAnQ,MAOA,CAPSuwB,SAAUO,CAAAA,YAOnB;AANA3H,OAAQ6E,CAAAA,SAAR,EAMA,CALA7E,OAAQoG,CAAAA,IAAR,CAAaz1B,IAAKC,CAAAA,KAAL,CAAWiG,MAAO3E,CAAAA,GAAI4E,CAAAA,CAAtB,CAAb,CAAuCnG,IAAKC,CAAAA,KAAL,CAAWiG,MAAO3E,CAAAA,GAAI6E,CAAAA,CAAtB,CAAvC,CACIpG,IAAKC,CAAAA,KAAL,CAAWiG,MAAO1E,CAAAA,GAAI2E,CAAAA,CAAtB,CAA0BD,MAAO3E,CAAAA,GAAI4E,CAAAA,CAArC,CADJ,CAC6CnG,IAAKC,CAAAA,KAAL,CAAWiG,MAAO1E,CAAAA,GAAI4E,CAAAA,CAAtB,CAA0BF,MAAO3E,CAAAA,GAAI6E,CAAAA,CAArC,CAD7C,CAKA,CAHAipB,OAAQoF,CAAAA,SAAR,EAGA,CAFApF,OAAQgF,CAAAA,MAAR,EAEA,CADAhF,OAAQsF,CAAAA,IAAR,EACA,CAAAtF,OAAQpoB,CAAAA,SAAR,CAAkB,GAAlB,CAAwB,GAAxB,CAZJ,CAeI+I,QAAQge,CAAAA,SAAZ,EACIqB,OAAQgC,CAAAA,YAAR,CAAqB,CAArB,CAAwB,CAAxB,CAA2B,CAA3B,CAA8B,CAA9B,CAAiC,CAAjC,CAAoC,CAApC,CA3EwC,CAwHhD,KAAIgC,MAAQA,QAAQ,CAACr0B,MAAD,CAAS,CAEzB,IADA,IAAIwF,OAAS,CAAb,CACSrJ,EAAI,CAAb,CAAgBA,CAAhB,CAAoB6D,MAAOT,CAAAA,MAA3B,CAAmCpD,CAAnC,EAAwC,CAAxC,CACIqJ,MAAA,EAAUxF,MAAA,CAAO7D,CAAP,CAEd,OAAQqJ,OAAR,CAAiBxF,MAAOT,CAAAA,MAAxB,EAAmC,CALV,CAA7B,CAeI6wB,cAAgBA,QAAQ,CAACpP,KAAD,CAAQC,MAAR,CAAgB,CACxC,IAAIgN,OAASnK,QAASmU,CAAAA,aAAT,CAAuB,QAAvB,CACbhK,OAAOjN,CAAAA,KAAP;AAAeA,KACfiN,OAAOhN,CAAAA,MAAP,CAAgBA,MAChBgN,OAAOiK,CAAAA,aAAP,CAAuBC,QAAQ,EAAG,CAAE,MAAO,CAAA,CAAT,CAClClK,OAAOmK,CAAAA,aAAP,CAAuBC,QAAQ,EAAG,CAAE,MAAO,CAAA,CAAT,CAClC,OAAOpK,OANiC,CAz6CpC,CAAX,CAAD,EArBsD,CAj/K5C,CAo0OH,QAAQ,CAACzyB,MAAD,CAASC,OAAT,CAAkB,CAQjC,IAAIyjB,QAAU,EAEd1jB,OAAOC,CAAAA,OAAP,CAAiByjB,OAEhB,UAAQ,EAAG,CAQRA,OAAQvhB,CAAAA,MAAR,CAAiB26B,QAAQ,CAAC7wB,MAAD,CAAS,CAC9B,MAAO,CACHwJ,GAAIiO,OAAQjO,CAAAA,EAAR,CAAWxJ,MAAX,CADD,CAEKA,MAFL,CAGH8wB,cAAe,CAHZ,CAIHC,eAAgB,CAJb,CADuB,CAelCtZ,QAAQjO,CAAAA,EAAR,CAAawnB,QAAQ,CAAChxB,MAAD,CAAS,CAC1B,MAAOA,OAAO+D,CAAAA,IAAKyF,CAAAA,EAAnB,CAAwB,GAAxB,CAA8BxJ,MAAOgE,CAAAA,KADX,CAvBtB,CAAX,CAAD,EAZiC,CAp0OvB,CAg3OH,QAAQ,CAACjQ,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAYtD,IAAI08B,OAAS,EAEbl9B,OAAOC,CAAAA,OAAP,CAAiBi9B,MAEjB,KAAIxjB,SAAWlZ,mBAAA,CAAoB,CAApB,CAAf,CACI28B;AAAW38B,mBAAA,CAAoB,EAApB,CADf,CAEIgrB,SAAWhrB,mBAAA,CAAoB,EAApB,CAFf,CAGI48B,MAAQ58B,mBAAA,CAAoB,EAApB,CAHZ,CAII68B,KAAO78B,mBAAA,CAAoB,EAApB,CAJX,CAKI8T,OAAS9T,mBAAA,CAAoB,CAApB,CALb,CAMI6U,UAAY7U,mBAAA,CAAoB,CAApB,CANhB,CAOI2gB,WAAa3gB,mBAAA,CAAoB,CAApB,CAPjB,CAQIyC,OAASzC,mBAAA,CAAoB,CAApB,CARb,CASI8U,KAAO9U,mBAAA,CAAoB,CAApB,CAEV,UAAQ,EAAG,CAUR08B,MAAO/6B,CAAAA,MAAP,CAAgBm7B,QAAQ,CAAC9nB,OAAD,CAAU,CAC9BA,OAAA,CAAUA,OAAV,EAAqB,EAuBrB,KAAIqW,OAAS5oB,MAAOO,CAAAA,MAAP,CArBEyW,CACXsjB,mBAAoB,CADTtjB,CAEXujB,mBAAoB,CAFTvjB,CAGXwjB,qBAAsB,CAHXxjB,CAIXsd,eAAgB,CAAA,CAJLtd,CAKXrF,OAAQ,EALGqF,CAMXhE,OAAQ,EANGgE,CAOXie,KAAM,IAPKje,CAQXyjB,QAAS,CACL/xB,EAAG,CADE,CAELC,EAAG,CAFE,CAGLiG,MAAO,IAHF,CAREoI;AAaX0Y,OAAQ,CACJ/O,UAAW,CADP,CAEJpI,UAAW,CAFP,CAGJ+Z,UAAW,CAHP,CAIJvC,YAAa,CAJT,CAbG/Y,CAqBF,CAAwBzE,OAAxB,CAEbqW,OAAO2J,CAAAA,KAAP,CAAehgB,OAAQggB,CAAAA,KAAvB,EAAgCngB,SAAUlT,CAAAA,MAAV,CAAiB,CAAE6T,MAAO,OAAT,CAAjB,CAChC6V,OAAOqM,CAAAA,IAAP,CAAcmF,IAAKl7B,CAAAA,MAAL,CAAYqT,OAAQ0iB,CAAAA,IAApB,EAA4B1iB,OAAQmoB,CAAAA,UAApC,CACd9R,OAAOpL,CAAAA,KAAP,CAAe2c,KAAMj7B,CAAAA,MAAN,EAGf0pB,OAAO2J,CAAAA,KAAMkI,CAAAA,OAAb,CAAuB7R,MAAO6R,CAAAA,OAC9B7R,OAAO8R,CAAAA,UAAP,CAAoB9R,MAAOqM,CAAAA,IAC3BrM,OAAO+R,CAAAA,OAAP,CAAiB,EAEjB,OAAO/R,OAnCuB,CAqDlCqR,OAAOrxB,CAAAA,MAAP,CAAgBgyB,QAAQ,CAAChS,MAAD,CAAS5Z,KAAT,CAAgBuN,UAAhB,CAA4B,CAChD,IAAIyX,UAAYh0B,MAAOkE,CAAAA,GAAP,EAEhB8K,MAAA,CAAQA,KAAR,EAAiB,GAAjB,CAAwB,EACxBuN,WAAA,CAAaA,UAAb,EAA2B,CAJqB,KAM5CgW,MAAQ3J,MAAO2J,CAAAA,KAN6B,CAO5C7C,OAAS9G,MAAO8G,CAAAA,MAP4B,CAQ5CuF,KAAOrM,MAAOqM,CAAAA,IAKlBvF,OAAO/O,CAAAA,SAAP;AAAoB3R,KAApB,CAA4B0gB,MAAOnX,CAAAA,SACnCmX,OAAO4C,CAAAA,SAAP,CAAmBtjB,KAAnB,CAA2B0gB,MAAOnX,CAAAA,SAGlC,KAAIrG,MAAQ,CACRyO,UAAW+O,MAAO/O,CAAAA,SADV,CAIZtP,OAAOW,CAAAA,OAAP,CAAe4W,MAAf,CAAuB,cAAvB,CAAuC1W,KAAvC,CArBgD,KAwB5CoD,UAAYlD,SAAUkD,CAAAA,SAAV,CAAoBid,KAApB,CAxBgC,CAyB5C/c,eAAiBpD,SAAUoD,CAAAA,cAAV,CAAyB+c,KAAzB,CAGjB3J,OAAO0L,CAAAA,cAAX,EACI7d,QAAS7N,CAAAA,MAAT,CAAgB0M,SAAhB,CAA2Boa,MAAOnX,CAAAA,SAAlC,CAGJ0hB,OAAOY,CAAAA,mBAAP,CAA2BvlB,SAA3B,CAAsCsT,MAAO6R,CAAAA,OAA7C,CAGAR,OAAOa,CAAAA,aAAP,CAAqBxlB,SAArB,CAAgCtG,KAAhC,CAAuC0gB,MAAOnX,CAAAA,SAA9C,CAAyDgE,UAAzD,CAAqEgW,KAAM9pB,CAAAA,MAA3E,CAGAyV,WAAWe,CAAAA,WAAX,CAAuB3J,SAAvB,CACA,KAAK5X,KAAL,CAAS,CAAT,CAAYA,KAAZ,CAAgBkrB,MAAO4R,CAAAA,oBAAvB,CAA6C98B,KAAA,EAA7C,CACIwgB,UAAWkB,CAAAA,QAAX,CAAoB5J,cAApB;AAAoCka,MAAOnX,CAAAA,SAA3C,CAEJ2F,WAAWkC,CAAAA,YAAX,CAAwB9K,SAAxB,CAKIid,MAAM5f,CAAAA,UAAV,EACIynB,IAAKnlB,CAAAA,KAAL,CAAWggB,IAAX,CAGJmF,KAAKxxB,CAAAA,MAAL,CAAYqsB,IAAZ,CAAkB3f,SAAlB,CAA6BsT,MAA7B,CAAqC2J,KAAM5f,CAAAA,UAA3C,CACAooB,KAAA,CAAY9F,IAAK+F,CAAAA,SAGbzI,MAAM5f,CAAAA,UAAV,EACIP,SAAUa,CAAAA,WAAV,CAAsBsf,KAAtB,CAA6B,CAAA,CAA7B,CAAoC,CAAA,CAApC,CAA2C,CAAA,CAA3C,CAIA9J,KAAAA,CAAaF,QAASE,CAAAA,UAAT,CAAoBsS,IAApB,CAA+BnS,MAA/B,CAGbpL,MAAAA,CAAQoL,MAAOpL,CAAAA,KACfmD,MAAAA,CAAY+O,MAAO/O,CAAAA,SACvBwZ,MAAMvxB,CAAAA,MAAN,CAAa4U,KAAb,CAAoBiL,IAApB,CAAgC9H,KAAhC,CACAwZ,MAAMc,CAAAA,SAAN,CAAgBzd,KAAhB,CAAuBmD,KAAvB,CAGIiI,OAAO0L,CAAAA,cAAX,EACI7d,QAAS6G,CAAAA,eAAT,CAAyBE,KAAM/W,CAAAA,IAA/B,CAAqCipB,MAAOnX,CAAAA,SAA5C,CAG8B,EAAlC,CAAIiF,KAAM0d,CAAAA,cAAep6B,CAAAA,MAAzB,EACIuQ,MAAOW,CAAAA,OAAP,CAAe4W,MAAf,CAAuB,gBAAvB;AAAyC,CAAEpL,MAAOA,KAAM0d,CAAAA,cAAf,CAAzC,CAGJhB,SAASiB,CAAAA,gBAAT,CAA0B3d,KAAM/W,CAAAA,IAAhC,CACA,KAAK/I,KAAL,CAAS,CAAT,CAAYA,KAAZ,CAAgBkrB,MAAO0R,CAAAA,kBAAvB,CAA2C58B,KAAA,EAA3C,CACIw8B,QAASkB,CAAAA,aAAT,CAAuB5d,KAAM/W,CAAAA,IAA7B,CAAmCipB,MAAOnX,CAAAA,SAA1C,CAEJ2hB,SAASmB,CAAAA,iBAAT,CAA2B/lB,SAA3B,CAGA4I,WAAWe,CAAAA,WAAX,CAAuB3J,SAAvB,CACA,KAAK5X,KAAL,CAAS,CAAT,CAAYA,KAAZ,CAAgBkrB,MAAO4R,CAAAA,oBAAvB,CAA6C98B,KAAA,EAA7C,CACIwgB,UAAWkB,CAAAA,QAAX,CAAoB5J,cAApB,CAAoCka,MAAOnX,CAAAA,SAA3C,CAEJ2F,WAAWkC,CAAAA,YAAX,CAAwB9K,SAAxB,CAGA4kB,SAASoB,CAAAA,gBAAT,CAA0B9d,KAAM/W,CAAAA,IAAhC,CACA,KAAK/I,KAAL,CAAS,CAAT,CAAYA,KAAZ,CAAgBkrB,MAAO2R,CAAAA,kBAAvB,CAA2C78B,KAAA,EAA3C,CACIw8B,QAASqB,CAAAA,aAAT,CAAuB/d,KAAM/W,CAAAA,IAA7B;AAAmCipB,MAAOnX,CAAAA,SAA1C,CAI+B,EAAnC,CAAIiF,KAAMge,CAAAA,eAAgB16B,CAAAA,MAA1B,EACIuQ,MAAOW,CAAAA,OAAP,CAAe4W,MAAf,CAAuB,iBAAvB,CAA0C,CAAEpL,MAAOA,KAAMge,CAAAA,eAAf,CAA1C,CAE4B,EAAhC,CAAIhe,KAAMie,CAAAA,YAAa36B,CAAAA,MAAvB,EACIuQ,MAAOW,CAAAA,OAAP,CAAe4W,MAAf,CAAuB,cAAvB,CAAuC,CAAEpL,MAAOA,KAAMie,CAAAA,YAAf,CAAvC,CAGJxB,OAAOyB,CAAAA,kBAAP,CAA0BpmB,SAA1B,CAEAjE,OAAOW,CAAAA,OAAP,CAAe4W,MAAf,CAAuB,aAAvB,CAAsC1W,KAAtC,CAGA0W,OAAO8G,CAAAA,MAAOK,CAAAA,WAAd,CAA4B/vB,MAAOkE,CAAAA,GAAP,EAA5B,CAA2C8vB,SAE3C,OAAOpL,OA/GyC,CAwHpDqR,OAAO0B,CAAAA,KAAP,CAAeC,QAAQ,CAACC,OAAD,CAAUC,OAAV,CAAmB,CACtC97B,MAAOO,CAAAA,MAAP,CAAcs7B,OAAd,CAAuBC,OAAvB,CAEA,IAAIA,OAAQvJ,CAAAA,KAAZ,CAOI,IANAsJ,OAAQtJ,CAAAA,KAMC70B,CANOo+B,OAAQvJ,CAAAA,KAMf70B,CAJTu8B,MAAOhlB,CAAAA,KAAP,CAAa4mB,OAAb,CAISn+B,CAFLkV,OAEKlV;AAFI0U,SAAUkD,CAAAA,SAAV,CAAoBumB,OAAQtJ,CAAAA,KAA5B,CAEJ70B,CAAAA,OAAAA,CAAI,CAAb,CAAgBA,OAAhB,CAAoBkV,OAAO9R,CAAAA,MAA3B,CAAmCpD,OAAA,EAAnC,CAAwC,CACpC,IAAIqP,KAAO6F,OAAA,CAAOlV,OAAP,CACX+Y,SAAS1U,CAAAA,GAAT,CAAagL,IAAb,CAAmB,CAAA,CAAnB,CACAA,KAAKyF,CAAAA,EAAL,CAAUxS,MAAOiG,CAAAA,MAAP,EAH0B,CAVN,CAuB1Cg0B,OAAOhlB,CAAAA,KAAP,CAAe8mB,QAAQ,CAACnT,MAAD,CAAS,CAC5B,IACIhW,OAASR,SAAUkD,CAAAA,SAAV,CADDsT,MAAO2J,CAAAA,KACN,CAEb4H,MAAMllB,CAAAA,KAAN,CAAY2T,MAAOpL,CAAAA,KAAnB,CACA4c,KAAKnlB,CAAAA,KAAL,CAAW2T,MAAOqM,CAAAA,IAAlB,CACAmF,KAAKxxB,CAAAA,MAAL,CAAYggB,MAAOqM,CAAAA,IAAnB,CAAyBriB,MAAzB,CAAiCgW,MAAjC,CAAyC,CAAA,CAAzC,CAN4B,CAehCqR,OAAOyB,CAAAA,kBAAP,CAA4BM,QAAQ,CAACppB,MAAD,CAAS,CACzC,IAAK,IAAIlV,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkV,MAAO9R,CAAAA,MAA3B,CAAmCpD,CAAA,EAAnC,CAAwC,CACpC,IAAIqP,KAAO6F,MAAA,CAAOlV,CAAP,CAGXqP,KAAKkK,CAAAA,KAAMvO,CAAAA,CAAX,CAAe,CACfqE,KAAKkK,CAAAA,KAAMtO,CAAAA,CAAX,CAAe,CACfoE,KAAKmK,CAAAA,MAAL,CAAc,CANsB,CADC,CAkB7C+iB,OAAOY,CAAAA,mBAAP,CAA6BoB,QAAQ,CAACrpB,MAAD;AAAS6nB,OAAT,CAAkB,CACnD,IAAIyB,aAAwC,WAAzB,GAAA,MAAOzB,QAAQ7rB,CAAAA,KAAf,CAAuC6rB,OAAQ7rB,CAAAA,KAA/C,CAAuD,IAE1E,KAAmB,CAAnB,GAAK6rB,OAAQ/xB,CAAAA,CAAb,EAAsC,CAAtC,GAAwB+xB,OAAQ9xB,CAAAA,CAAhC,GAA6D,CAA7D,GAA4CuzB,YAA5C,CAIA,IAAK,IAAIx+B,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkV,MAAO9R,CAAAA,MAA3B,CAAmCpD,CAAA,EAAnC,CAAwC,CACpC,IAAIqP,KAAO6F,MAAA,CAAOlV,CAAP,CAEPqP,KAAKsI,CAAAA,QAAT,EAAqBtI,IAAK2K,CAAAA,UAA1B,GAIA3K,IAAKkK,CAAAA,KAAMtO,CAAAA,CACX,EADgBoE,IAAKmB,CAAAA,IACrB,CAD4BusB,OAAQ9xB,CAAAA,CACpC,CADwCuzB,YACxC,CAAAnvB,IAAKkK,CAAAA,KAAMvO,CAAAA,CAAX,EAAgBqE,IAAKmB,CAAAA,IAArB,CAA4BusB,OAAQ/xB,CAAAA,CAApC,CAAwCwzB,YALxC,CAHoC,CAPW,CA+BvDjC,OAAOa,CAAAA,aAAP,CAAuBqB,QAAQ,CAACvpB,MAAD,CAAS0J,SAAT,CAAoB/D,SAApB,CAA+BgE,UAA/B,CAA2C6f,WAA3C,CAAwD,CACnF,IAAS1+B,WAAT,CAAa,CAAb,CAAgBA,WAAhB,CAAoBkV,MAAO9R,CAAAA,MAA3B,CAAmCpD,WAAA,EAAnC,CAAwC,CACpC,IAAIqP,KAAO6F,MAAA,CAAOlV,WAAP,CAEPqP,KAAKsI,CAAAA,QAAT,EAAqBtI,IAAK2K,CAAAA,UAA1B;AAGArF,IAAKzJ,CAAAA,MAAL,CAAYmE,IAAZ,CAAkBuP,SAAlB,CAA6B/D,SAA7B,CAAwCgE,UAAxC,CANoC,CAD2C,CA9Q/E,CAAX,CAAD,EA3BsD,CAh3O5C,CA63PH,QAAQ,CAACxf,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAQtD,IAAI28B,SAAW,EAEfn9B,OAAOC,CAAAA,OAAP,CAAiBk9B,QAEjB,KAAIttB,SAAWrP,mBAAA,CAAoB,CAApB,CAAf,CACIyM,OAASzM,mBAAA,CAAoB,CAApB,CADb,CAEIyC,OAASzC,mBAAA,CAAoB,CAApB,CAFb,CAGI+K,OAAS/K,mBAAA,CAAoB,CAApB,CAEZ,UAAQ,EAAG,CAER28B,QAASmC,CAAAA,cAAT,CAA0B,CAC1BnC,SAASoC,CAAAA,qBAAT,CAAiC,CACjCpC,SAASqC,CAAAA,eAAT,CAA2B,EAC3BrC,SAASsC,CAAAA,gBAAT,CAA4B,EAC5BtC,SAASuC,CAAAA,yBAAT,CAAqC,CAOrCvC,SAASiB,CAAAA,gBAAT,CAA4BuB,QAAQ,CAAClf,KAAD,CAAQ,CAAA,IACpC9f,CAKJ,KAAKA,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB8f,KAAM1c,CAAAA,MAAtB,CAA8BpD,CAAA,EAA9B,CAAmC,CAC/B,IAAA+f;AAAOD,KAAA,CAAM9f,CAAN,CAEP,IAAK+f,IAAKC,CAAAA,QAAV,CAAA,CAGA,IAAAif,YAAclf,IAAKsD,CAAAA,cAAejgB,CAAAA,MAClC2c,KAAKE,CAAAA,SAAUiD,CAAAA,OAAQvJ,CAAAA,aAAvB,EAAwCslB,WACxClf,KAAKE,CAAAA,SAAUkD,CAAAA,OAAQxJ,CAAAA,aAAvB,EAAwCslB,WALxC,CAH+B,CANK,CAwB5CzC,SAASkB,CAAAA,aAAT,CAAyBwB,QAAQ,CAACpf,KAAD,CAAQjF,SAAR,CAAmB,CAAA,IAC5C7a,CAUAm/B,KAAAA,gBAAQ7yB,MAAO2C,CAAAA,KAAP,CAAa,CAAb,CAXoC,KAY5CmwB,MAAQ9yB,MAAO2C,CAAAA,KAAP,CAAa,CAAb,CAZoC,CAa5CowB,MAAQ/yB,MAAO2C,CAAAA,KAAP,CAAa,CAAb,CAboC,CAc5CqwB,MAAQhzB,MAAO2C,CAAAA,KAAP,CAAa,CAAb,CAGZ,KAAKjP,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB8f,KAAM1c,CAAAA,MAAtB,CAA8BpD,CAAA,EAA9B,CAAmC,CAC/B,IAAA+f,KAAOD,KAAA,CAAM9f,CAAN,CAEP,IAAK+f,IAAKC,CAAAA,QAAV,EAA2BjG,CAALgG,IAAKhG,CAAAA,QAA3B,CAAA,CAGA,IAAAkG,UAAYF,IAAKE,CAAAA,SACjB,KAAAC,MAAQD,SAAUiD,CAAAA,OAClB,KAAA/C,MAAQF,SAAUkD,CAAAA,OAClB,KAAAb;AAASrC,SAAUqC,CAAAA,MAGnBid,MAAA,CAAWjzB,MAAO6B,CAAAA,GAAP,CAAW7B,MAAO2B,CAAAA,GAAP,CAAWkS,KAAM1G,CAAAA,eAAjB,CAAkC0G,KAAMhU,CAAAA,QAAxC,CAAkDgzB,eAAlD,CAAX,CACP7yB,MAAO2B,CAAAA,GAAP,CAAWiS,KAAMzG,CAAAA,eAAjB,CACInN,MAAO6B,CAAAA,GAAP,CAAWgS,KAAMhU,CAAAA,QAAjB,CAA2B8T,SAAUwM,CAAAA,WAArC,CAAkD2S,KAAlD,CADJ,CAC8DC,KAD9D,CADO,CAE+DC,KAF/D,CAIXvf,KAAKuD,CAAAA,UAAL,CAAkBhX,MAAOkB,CAAAA,GAAP,CAAW8U,MAAX,CAAmBid,KAAnB,CAblB,CAH+B,CAmBnC,IAAKv/B,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB8f,KAAM1c,CAAAA,MAAtB,CAA8BpD,CAAA,EAA9B,CAGI,GAFA+f,IAEI,CAFGD,KAAA,CAAM9f,CAAN,CAEH,CAAC+f,IAAKC,CAAAA,QAAN,EAAuBjG,CAALgG,IAAKhG,CAAAA,QAA3B,CAAA,CAGAkG,SAAA,CAAYF,IAAKE,CAAAA,SACjBC,MAAA,CAAQD,SAAUiD,CAAAA,OAClB/C,MAAA,CAAQF,SAAUkD,CAAAA,OAClBb,OAAA,CAASrC,SAAUqC,CAAAA,MACnB7I,gBAAA,EAAmBsG,IAAKuD,CAAAA,UAAxB,CAAqCvD,IAAKnF,CAAAA,IAA1C,EAAkDC,SAElD,IAAIqF,KAAMvI,CAAAA,QAAV,EAAsBwI,KAAMxI,CAAAA,QAA5B,CACI8B,eAAA;AAAmB,CAEjByG,MAAMvI,CAAAA,QAAZ,EAAwBuI,KAAMlG,CAAAA,UAA9B,GACIwlB,IAEA,CAFehD,QAASqC,CAAAA,eAExB,CAF0C3e,KAAMvG,CAAAA,aAEhD,CADAuG,KAAMzG,CAAAA,eAAgBzO,CAAAA,CACtB,EAD2BsX,MAAOtX,CAAAA,CAClC,CADsCyO,eACtC,CADwD+lB,IACxD,CAAAtf,KAAMzG,CAAAA,eAAgBxO,CAAAA,CAAtB,EAA2BqX,MAAOrX,CAAAA,CAAlC,CAAsCwO,eAAtC,CAAwD+lB,IAH5D,CAMMrf,MAAMxI,CAAAA,QAAZ,EAAwBwI,KAAMnG,CAAAA,UAA9B,GACIwlB,IAEA,CAFehD,QAASqC,CAAAA,eAExB,CAF0C1e,KAAMxG,CAAAA,aAEhD,CADAwG,KAAM1G,CAAAA,eAAgBzO,CAAAA,CACtB,EAD2BsX,MAAOtX,CAAAA,CAClC,CADsCyO,eACtC,CADwD+lB,IACxD,CAAArf,KAAM1G,CAAAA,eAAgBxO,CAAAA,CAAtB,EAA2BqX,MAAOrX,CAAAA,CAAlC,CAAsCwO,eAAtC,CAAwD+lB,IAH5D,CAlBA,CAvC4C,CAsEpDhD,SAASmB,CAAAA,iBAAT,CAA6B8B,QAAQ,CAACvqB,MAAD,CAAS,CAC1C,IAAK,IAAIlV,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkV,MAAO9R,CAAAA,MAA3B,CAAmCpD,CAAA,EAAnC,CAAwC,CACpC,IAAIqP,KAAO6F,MAAA,CAAOlV,CAAP,CAGXqP,KAAKsK,CAAAA,aAAL;AAAqB,CAErB,IAA+B,CAA/B,GAAItK,IAAKoK,CAAAA,eAAgBzO,CAAAA,CAAzB,EAA+D,CAA/D,GAAoCqE,IAAKoK,CAAAA,eAAgBxO,CAAAA,CAAzD,CAAkE,CAE9D,IAAK,IAAIrG,EAAI,CAAb,CAAgBA,CAAhB,CAAoByK,IAAK7K,CAAAA,KAAMpB,CAAAA,MAA/B,CAAuCwB,CAAA,EAAvC,CAA4C,CACxC,IAAIuY,KAAO9N,IAAK7K,CAAAA,KAAL,CAAWI,CAAX,CACXsK,SAASpD,CAAAA,SAAT,CAAmBqR,IAAKrS,CAAAA,QAAxB,CAAkCuE,IAAKoK,CAAAA,eAAvC,CACA7O,OAAOM,CAAAA,MAAP,CAAciS,IAAKpS,CAAAA,MAAnB,CAA2BoS,IAAKrS,CAAAA,QAAhC,CAA0CuE,IAAKjE,CAAAA,QAA/C,CACA+R,KAAKhR,CAAAA,QAASnB,CAAAA,CAAd,EAAmBqE,IAAKoK,CAAAA,eAAgBzO,CAAAA,CACxCmS,KAAKhR,CAAAA,QAASlB,CAAAA,CAAd,EAAmBoE,IAAKoK,CAAAA,eAAgBxO,CAAAA,CALA,CAS5CoE,IAAKqM,CAAAA,YAAa1Q,CAAAA,CAAlB,EAAuBqE,IAAKoK,CAAAA,eAAgBzO,CAAAA,CAC5CqE,KAAKqM,CAAAA,YAAazQ,CAAAA,CAAlB,EAAuBoE,IAAKoK,CAAAA,eAAgBxO,CAAAA,CAEU,EAAtD,CAAIqB,MAAOkB,CAAAA,GAAP,CAAW6B,IAAKoK,CAAAA,eAAhB,CAAiCpK,IAAKjE,CAAAA,QAAtC,CAAJ,EAEIiE,IAAKoK,CAAAA,eAAgBzO,CAAAA,CACrB,CADyB,CACzB,CAAAqE,IAAKoK,CAAAA,eAAgBxO,CAAAA,CAArB,CAAyB,CAH7B,GAMIoE,IAAKoK,CAAAA,eAAgBzO,CAAAA,CACrB;AAD0BwxB,QAASsC,CAAAA,gBACnC,CAAAzvB,IAAKoK,CAAAA,eAAgBxO,CAAAA,CAArB,EAA0BuxB,QAASsC,CAAAA,gBAPvC,CAd8D,CAN9B,CADE,CAuC9CtC,SAASoB,CAAAA,gBAAT,CAA4B8B,QAAQ,CAAC5f,KAAD,CAAQ,CAAA,IACpC9f,CADoC,CAepCyhB,QAAUnV,MAAO2C,CAAAA,KAAP,CAAa,CAAb,CAf0B,CAgBpCkwB,MAAQ7yB,MAAO2C,CAAAA,KAAP,CAAa,CAAb,CAEZ,KAAKjP,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB8f,KAAM1c,CAAAA,MAAtB,CAA8BpD,CAAA,EAA9B,CAAmC,CAC/B,IAAA+f,KAAOD,KAAA,CAAM9f,CAAN,CAEP,IAAK+f,IAAKC,CAAAA,QAAV,EAA2BjG,CAALgG,IAAKhG,CAAAA,QAA3B,CAAA,CAGA,IAAAqJ,SAAWrD,IAAKsD,CAAAA,cAChB,KAAApD,EAAYF,IAAKE,CAAAA,SACjBC,KAAA,CAAQD,CAAUiD,CAAAA,OAClB,KAAA/C,MAAQF,CAAUkD,CAAAA,OAClB,KAAAb,OAASrC,CAAUqC,CAAAA,MACnB,KAAAkK,QAAUvM,CAAUuM,CAAAA,OAGpB,KAAK5nB,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBwe,QAAShgB,CAAAA,MAAzB,CAAiCwB,CAAA,EAAjC,CAAsC,CAClC,IAAAmf,QAAUX,QAAA,CAASxe,CAAT,CACV,KAAA+6B,cAAgB5b,OAAQzY,CAAAA,MACxB,KAAA8wB,cAAgBrY,OAAQqY,CAAAA,aACxBC;OAAA,CAAiBtY,OAAQsY,CAAAA,cAEzB,IAAsB,CAAtB,GAAID,aAAJ,EAA8C,CAA9C,GAA2BC,OAA3B,CAEI5a,OAAQzW,CAAAA,CAWR,CAXasX,MAAOtX,CAAAA,CAWpB,CAXwBoxB,aAWxB,CAX0C5P,OAAQxhB,CAAAA,CAWlD,CAXsDqxB,OAWtD,CAVA5a,OAAQxW,CAAAA,CAUR,CAVaqX,MAAOrX,CAAAA,CAUpB,CAVwBmxB,aAUxB,CAV0C5P,OAAQvhB,CAAAA,CAUlD,CAVsDoxB,OAUtD,CAPMnc,IAAMvI,CAAAA,QAOZ,EAPwBuI,IAAMlG,CAAAA,UAO9B,GANI8L,aAGA,CAHSxZ,MAAO6B,CAAAA,GAAP,CAAWwxB,aAAX,CAA0Bzf,IAAM/T,CAAAA,QAAhC,CAA0CgzB,KAA1C,CAGT,CAFAjf,IAAMxE,CAAAA,YAAa1Q,CAAAA,CAEnB,EAFwByW,OAAQzW,CAAAA,CAEhC,CAFoCkV,IAAM9C,CAAAA,WAE1C,CADA8C,IAAMxE,CAAAA,YAAazQ,CAAAA,CACnB,EADwBwW,OAAQxW,CAAAA,CAChC,CADoCiV,IAAM9C,CAAAA,WAC1C,CAAA8C,IAAMvE,CAAAA,SAAN,EAAmBrP,MAAOsB,CAAAA,KAAP,CAAakY,aAAb,CAAqBrE,OAArB,CAAnB,CAAmDvB,IAAM7C,CAAAA,cAG7D,EAAM8C,KAAMxI,CAAAA,QAAZ,EAAwBwI,KAAMnG,CAAAA,UAA9B,GACI8L,aAGA,CAHSxZ,MAAO6B,CAAAA,GAAP,CAAWwxB,aAAX;AAA0Bxf,KAAMhU,CAAAA,QAAhC,CAA0CgzB,KAA1C,CAGT,CAFAhf,KAAMzE,CAAAA,YAAa1Q,CAAAA,CAEnB,EAFwByW,OAAQzW,CAAAA,CAEhC,CAFoCmV,KAAM/C,CAAAA,WAE1C,CADA+C,KAAMzE,CAAAA,YAAazQ,CAAAA,CACnB,EADwBwW,OAAQxW,CAAAA,CAChC,CADoCkV,KAAM/C,CAAAA,WAC1C,CAAA+C,KAAMxE,CAAAA,SAAN,EAAmBrP,MAAOsB,CAAAA,KAAP,CAAakY,aAAb,CAAqBrE,OAArB,CAAnB,CAAmDtB,KAAM9C,CAAAA,cAJ7D,CAnB8B,CAXtC,CAH+B,CAlBK,CAoE5Cmf,SAASqB,CAAAA,aAAT,CAAyB+B,QAAQ,CAAC9f,KAAD,CAAQjF,SAAR,CAAmB,CACzBA,SAAnBglB,EAA+BhlB,SAQnC,KATgD,IAE5C4G,QAAUnV,MAAO2C,CAAAA,KAAP,CAAa,CAAb,CAFkC,CAG5CkwB,MAAQ7yB,MAAO2C,CAAAA,KAAP,CAAa,CAAb,CAHoC,CAI5CmwB,MAAQ9yB,MAAO2C,CAAAA,KAAP,CAAa,CAAb,CAJoC,CAK5CowB,MAAQ/yB,MAAO2C,CAAAA,KAAP,CAAa,CAAb,CALoC,CAM5CqwB,MAAQhzB,MAAO2C,CAAAA,KAAP,CAAa,CAAb,CANoC,CAO5C6wB,MAAQxzB,MAAO2C,CAAAA,KAAP,CAAa,CAAb,CAPoC,CASvCjP,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8f,KAAM1c,CAAAA,MAA1B,CAAkCpD,CAAA,EAAlC,CAAuC,CACnC,IAAI+f,KAAOD,KAAA,CAAM9f,CAAN,CAEX,IAAK+f,IAAKC,CAAAA,QAAV,EAA2BjG,CAALgG,IAAKhG,CAAAA,QAA3B,CAAA,CAHmC,IAM/BkG;AAAYF,IAAKE,CAAAA,SANc,CAO/BC,MAAQD,SAAUiD,CAAAA,OAPa,CAQ/B/C,MAAQF,SAAUkD,CAAAA,OARa,CAS/Bb,OAASrC,SAAUqC,CAAAA,MACnBkK,UAAAA,CAAUvM,SAAUuM,CAAAA,OAVW,KAW/BpJ,SAAWrD,IAAKsD,CAAAA,cAXe,CAY/Bmc,aAAe,CAAfA,CAAmBpc,QAAShgB,CAAAA,MAGhC8c,MAAM9U,CAAAA,QAASJ,CAAAA,CAAf,CAAmBkV,KAAM/T,CAAAA,QAASnB,CAAAA,CAAlC,CAAsCkV,KAAMxE,CAAAA,YAAa1Q,CAAAA,CACzDkV,MAAM9U,CAAAA,QAASH,CAAAA,CAAf,CAAmBiV,KAAM/T,CAAAA,QAASlB,CAAAA,CAAlC,CAAsCiV,KAAMxE,CAAAA,YAAazQ,CAAAA,CACzDkV,MAAM/U,CAAAA,QAASJ,CAAAA,CAAf,CAAmBmV,KAAMhU,CAAAA,QAASnB,CAAAA,CAAlC,CAAsCmV,KAAMzE,CAAAA,YAAa1Q,CAAAA,CACzDmV,MAAM/U,CAAAA,QAASH,CAAAA,CAAf,CAAmBkV,KAAMhU,CAAAA,QAASlB,CAAAA,CAAlC,CAAsCkV,KAAMzE,CAAAA,YAAazQ,CAAAA,CACzDiV,MAAMpG,CAAAA,eAAN,CAAwBoG,KAAMlT,CAAAA,KAA9B,CAAsCkT,KAAMvE,CAAAA,SAC5CwE,MAAMrG,CAAAA,eAAN,CAAwBqG,KAAMnT,CAAAA,KAA9B,CAAsCmT,KAAMxE,CAAAA,SAG5C,KAAK,IAAI/W;AAAI,CAAb,CAAgBA,CAAhB,CAAoBwe,QAAShgB,CAAAA,MAA7B,CAAqCwB,CAAA,EAArC,CAA0C,CAAA,IAClCmf,QAAUX,QAAA,CAASxe,CAAT,CADwB,CAElC+6B,cAAgB5b,OAAQzY,CAAAA,MAFU,CAGlCy0B,QAAUzzB,MAAO6B,CAAAA,GAAP,CAAWwxB,aAAX,CAA0Bzf,KAAM/T,CAAAA,QAAhC,CAA0CgzB,KAA1C,CACVa,cAAAA,CAAU1zB,MAAO6B,CAAAA,GAAP,CAAWwxB,aAAX,CAA0Bxf,KAAMhU,CAAAA,QAAhC,CAA0CizB,KAA1C,CAJwB,KAKlCa,eAAiB3zB,MAAO2B,CAAAA,GAAP,CAAWiS,KAAM9U,CAAAA,QAAjB,CAA2BkB,MAAO+B,CAAAA,IAAP,CAAY/B,MAAOoC,CAAAA,IAAP,CAAYqxB,OAAZ,CAAZ,CAAkC7f,KAAMpG,CAAAA,eAAxC,CAA3B,CAAqFulB,KAArF,CALiB,CAMlCa,eAAiB5zB,MAAO2B,CAAAA,GAAP,CAAWkS,KAAM/U,CAAAA,QAAjB,CAA2BkB,MAAO+B,CAAAA,IAAP,CAAY/B,MAAOoC,CAAAA,IAAP,CAAYsxB,aAAZ,CAAZ,CAAkC7f,KAAMrG,CAAAA,eAAxC,CAA3B,CAAqFwlB,KAArF,CACjB/c,eAAAA,CAAmBjW,MAAO6B,CAAAA,GAAP,CAAW8xB,cAAX,CAA2BC,cAA3B,CAA2CJ,KAA3C,CANvB,KAOItd,eAAiBlW,MAAOkB,CAAAA,GAAP,CAAW8U,MAAX;AAAmBC,cAAnB,CAPrB,CASI4d,gBAAkB7zB,MAAOkB,CAAAA,GAAP,CAAWgf,SAAX,CAAoBjK,cAApB,CATtB,CAUI6d,aAAev7B,IAAKwL,CAAAA,GAAL,CAAS8vB,eAAT,CAVnB,CAWIE,yBAA2B/9B,MAAOgE,CAAAA,IAAP,CAAY65B,eAAZ,CAG3B/D,eAAAA,EAAiB,CAAjBA,CAAqBrc,IAAK3F,CAAAA,WAA1BgiB,EAAyC5Z,cAA7C,KACI8d,YAAch+B,MAAO4D,CAAAA,KAAP,CAAa6Z,IAAKuD,CAAAA,UAAlB,CAA+Bd,cAA/B,CAA+C,CAA/C,CAAkD,CAAlD,CAAd8d,CAAqE9D,QAASuC,CAAAA,yBAG9E1C,eAAAA,CAAiB8D,eAArB,KACII,YAAcl1B,QAEd+0B,aAAJ,CAAmBrgB,IAAK1F,CAAAA,QAAxB,CAAmC0F,IAAKzF,CAAAA,cAAxC,CAAyDgmB,WAAzD,CAAuET,SAAvE,GACIU,WACA,CADcH,YACd,CAAA/D,cAAA,CAAiB/5B,MAAO4D,CAAAA,KAAP,CACb6Z,IAAK1F,CAAAA,QADQ;AACGgmB,wBADH,CAC8BR,SAD9B,CAEb,CAACU,WAFY,CAECA,WAFD,CAFrB,CASIC,aAAAA,CAAOl0B,MAAOsB,CAAAA,KAAP,CAAamyB,OAAb,CAAsBzd,MAAtB,CACPme,yBAAAA,CAAOn0B,MAAOsB,CAAAA,KAAP,CAAaoyB,aAAb,CAAsB1d,MAAtB,CACPG,aAAAA,CAAQ+c,YAAR/c,EAAwBvC,KAAM9C,CAAAA,WAA9BqF,CAA4CtC,KAAM/C,CAAAA,WAAlDqF,CAAgEvC,KAAM7C,CAAAA,cAAtEoF,CAAuF+d,YAAvF/d,CAA8F+d,YAA9F/d,CAAsGtC,KAAM9C,CAAAA,cAA5GoF,CAA6Hge,wBAA7Hhe,CAAoIge,wBAApIhe,CAEJ2Z,eAAA,EAAiB3Z,YACjB4Z,eAAA,EAAkB5Z,YAGG,EAArB,CAAID,cAAJ,EAA0BA,cAA1B,CAA2CA,cAA3C,CAA4Dga,QAASmC,CAAAA,cAArE,CAAsFkB,SAAtF,CAEI9b,OAAQqY,CAAAA,aAFZ;AAE4B,CAF5B,EAMQsE,cAEJ,CAF2B3c,OAAQqY,CAAAA,aAEnC,CADArY,OAAQqY,CAAAA,aACR,CADwBv3B,IAAKuB,CAAAA,GAAL,CAAS2d,OAAQqY,CAAAA,aAAjB,CAAiCA,cAAjC,CAAgD,CAAhD,CACxB,CAAAA,cAAA,CAAgBrY,OAAQqY,CAAAA,aAAxB,CAAwCsE,cAR5C,CAYIP,gBAAJ,CAAsBA,eAAtB,CAAwC3D,QAASoC,CAAAA,qBAAjD,CAAyEiB,SAAzE,CAEI9b,OAAQsY,CAAAA,cAFZ,CAE6B,CAF7B,EAMQsE,cAEJ,CAF4B5c,OAAQsY,CAAAA,cAEpC,CADAtY,OAAQsY,CAAAA,cACR,CADyB/5B,MAAO4D,CAAAA,KAAP,CAAa6d,OAAQsY,CAAAA,cAArB,CAAsCA,cAAtC,CAAsD,CAACkE,WAAvD,CAAoEA,WAApE,CACzB,CAAAlE,cAAA,CAAiBtY,OAAQsY,CAAAA,cAAzB,CAA0CsE,cAR9C,CAYAlf,QAAQzW,CAAAA,CAAR,CAAasX,MAAOtX,CAAAA,CAApB,CAAwBoxB,cAAxB,CAA0C5P,SAAQxhB,CAAAA,CAAlD;AAAsDqxB,cACtD5a,QAAQxW,CAAAA,CAAR,CAAaqX,MAAOrX,CAAAA,CAApB,CAAwBmxB,cAAxB,CAA0C5P,SAAQvhB,CAAAA,CAAlD,CAAsDoxB,cAGhDnc,MAAMvI,CAAAA,QAAZ,EAAwBuI,KAAMlG,CAAAA,UAA9B,GACIkG,KAAMxE,CAAAA,YAAa1Q,CAAAA,CAEnB,EAFwByW,OAAQzW,CAAAA,CAEhC,CAFoCkV,KAAM9C,CAAAA,WAE1C,CADA8C,KAAMxE,CAAAA,YAAazQ,CAAAA,CACnB,EADwBwW,OAAQxW,CAAAA,CAChC,CADoCiV,KAAM9C,CAAAA,WAC1C,CAAA8C,KAAMvE,CAAAA,SAAN,EAAmBrP,MAAOsB,CAAAA,KAAP,CAAamyB,OAAb,CAAsBte,OAAtB,CAAnB,CAAoDvB,KAAM7C,CAAAA,cAH9D,CAMM8C,MAAMxI,CAAAA,QAAZ,EAAwBwI,KAAMnG,CAAAA,UAA9B,GACImG,KAAMzE,CAAAA,YAAa1Q,CAAAA,CAEnB,EAFwByW,OAAQzW,CAAAA,CAEhC,CAFoCmV,KAAM/C,CAAAA,WAE1C,CADA+C,KAAMzE,CAAAA,YAAazQ,CAAAA,CACnB,EADwBwW,OAAQxW,CAAAA,CAChC,CADoCkV,KAAM/C,CAAAA,WAC1C,CAAA+C,KAAMxE,CAAAA,SAAN,EAAmBrP,MAAOsB,CAAAA,KAAP,CAAaoyB,aAAb,CAAsBve,OAAtB,CAAnB,CAAoDtB,KAAM9C,CAAAA,cAH9D,CAzEsC,CApB1C,CAHmC,CATS,CAtN5C,CAAX,CAAD,EAjBsD,CA73P5C,CA2tQH,QAAQ,CAAChe,MAAD;AAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAQtD,IAAI48B,MAAQ,EAEZp9B,OAAOC,CAAAA,OAAP,CAAiBm9B,KAEjB,KAAI3Z,KAAOjjB,mBAAA,CAAoB,CAApB,CAAX,CACIyC,OAASzC,mBAAA,CAAoB,CAApB,CAEZ,UAAQ,EAAG,CAER48B,KAAMmE,CAAAA,gBAAN,CAAyB,GAQzBnE,MAAMj7B,CAAAA,MAAN,CAAeq/B,QAAQ,CAAChsB,OAAD,CAAU,CAC7B,MAAOvS,OAAOO,CAAAA,MAAP,CAAc,CACjBuoB,MAAO,EADU,CAEjBriB,KAAM,EAFW,CAGjBy0B,eAAgB,EAHC,CAIjBM,gBAAiB,EAJA,CAKjBC,aAAc,EALG,CAAd,CAMJlpB,OANI,CADsB,CAiBjC4nB,MAAMvxB,CAAAA,MAAN,CAAe41B,QAAQ,CAAChhB,KAAD,CAAQiL,UAAR,CAAoB9H,SAApB,CAA+B,CAAA,IAC9Cqa,UAAYxd,KAAM/W,CAAAA,IAD4B,CAE9CoiB,WAAarL,KAAMsL,CAAAA,KAF2B,CAG9CoS,eAAiB1d,KAAM0d,CAAAA,cAHuB,CAI9CO,aAAeje,KAAMie,CAAAA,YACrBD,MAAAA,CAAkBhe,KAAMge,CAAAA,eALsB,KAQ9C/d,IAR8C;AAS9C/f,CAGJw9B,eAAep6B,CAAAA,MAAf,CAAwB,CACxB26B,aAAa36B,CAAAA,MAAb,CAAsB,CAGtB,KAAKpD,CAAL,CAFA89B,KAAgB16B,CAAAA,MAEhB,CAFyB,CAEzB,CAAYpD,CAAZ,CAAgBs9B,SAAUl6B,CAAAA,MAA1B,CAAkCpD,CAAA,EAAlC,CACIs9B,SAAA,CAAUt9B,CAAV,CAAaujB,CAAAA,eAAb,CAA+B,CAAA,CAGnC,KAAKvjB,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB+qB,UAAW3nB,CAAAA,MAA3B,CAAmCpD,CAAA,EAAnC,CAAwC,CACpC,IAAAigB,UAAY8K,UAAA,CAAW/qB,CAAX,CAEZ,IAAIigB,SAAU2D,CAAAA,QAAd,CAAwB,CACpB,IAAA0H,OAASxI,IAAKhO,CAAAA,EAAL,CAAQmL,SAAUC,CAAAA,KAAlB,CAAyBD,SAAUE,CAAAA,KAAnC,CAIT,EAFAJ,IAEA,CAFOoL,UAAA,CAAWG,MAAX,CAEP,GAEQvL,IAAKC,CAAAA,QAAT,CAEI8d,KAAgBl6B,CAAAA,IAAhB,CAAqBmc,IAArB,CAFJ,CAKIyd,cAAe55B,CAAAA,IAAf,CAAoBmc,IAApB,CAKJ,CADA+C,IAAK5X,CAAAA,MAAL,CAAY6U,IAAZ,CAAkBE,SAAlB,CAA6BgD,SAA7B,CACA,CAAAlD,IAAKwD,CAAAA,eAAL,CAAuB,CAAA,CAZ3B,GAeIxD,IAKA,CALO+C,IAAKthB,CAAAA,MAAL,CAAYye,SAAZ,CAAuBgD,SAAvB,CAKP,CAJAkI,UAAA,CAAWG,MAAX,CAIA,CAJqBvL,IAIrB,CADAyd,cAAe55B,CAAAA,IAAf,CAAoBmc,IAApB,CACA,CAAAud,SAAU15B,CAAAA,IAAV,CAAemc,IAAf,CApBJ,CALoB,CAHY,CAkCxC,IAAK/f,CAAL;AAAS,CAAT,CAAYA,CAAZ,CAAgBs9B,SAAUl6B,CAAAA,MAA1B,CAAkCpD,CAAA,EAAlC,CACI+f,IACA,CADOud,SAAA,CAAUt9B,CAAV,CACP,CAAI+f,IAAKC,CAAAA,QAAT,EAAqB,CAACD,IAAKwD,CAAAA,eAA3B,GACIT,IAAKmB,CAAAA,SAAL,CAAelE,IAAf,CAAqB,CAAA,CAArB,CAA4BkD,SAA5B,CACA,CAAA8a,YAAan6B,CAAAA,IAAb,CAAkBmc,IAAlB,CAFJ,CAxD8C,CAqEtD0c,MAAMc,CAAAA,SAAN,CAAkBwD,QAAQ,CAACjhB,KAAD,CAAQmD,SAAR,CAAmB,CAAA,IACrCqa,UAAYxd,KAAM/W,CAAAA,IAClBoiB,MAAAA,CAAarL,KAAMsL,CAAAA,KAFkB,KAGrC4V,gBAAkB,EAHmB,CAOrChhC,CAEJ,KAAKA,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBs9B,SAAUl6B,CAAAA,MAA1B,CAAkCpD,CAAA,EAAlC,CAAuC,CACnC,IAAA+f,KAAOud,SAAA,CAAUt9B,CAAV,CACP,KAAAigB,UAAYF,IAAKE,CAAAA,SAGbA,UAAUC,CAAAA,KAAMlG,CAAAA,UAApB,EAAkCiG,SAAUE,CAAAA,KAAMnG,CAAAA,UAAlD,CACI+F,IAAK0D,CAAAA,WADT,CACuBR,SADvB,CAMIA,SANJ,CAMgBlD,IAAK0D,CAAAA,WANrB,CAMmCgZ,KAAMmE,CAAAA,gBANzC,EAOII,eAAgBp9B,CAAAA,IAAhB,CAAqB5D,CAArB,CAZ+B,CAiBvC,IAAKA,CAAL,CAAS,CAAT,CAAYA,CAAZ;AAAgBghC,eAAgB59B,CAAAA,MAAhC,CAAwCpD,CAAA,EAAxC,CACIihC,SAGA,CAHYD,eAAA,CAAgBhhC,CAAhB,CAGZ,CAHiCA,CAGjC,CAFA+f,IAEA,CAFOud,SAAA,CAAU2D,SAAV,CAEP,CADA,OAAO9V,KAAA,CAAWpL,IAAKjL,CAAAA,EAAhB,CACP,CAAAwoB,SAAUxmB,CAAAA,MAAV,CAAiBmqB,SAAjB,CAA4B,CAA5B,CA9BqC,CAwC7CxE,MAAMllB,CAAAA,KAAN,CAAc2pB,QAAQ,CAACphB,KAAD,CAAQ,CAC1BA,KAAMsL,CAAAA,KAAN,CAAc,EACdtL,MAAM/W,CAAAA,IAAK3F,CAAAA,MAAX,CAAoB,CACpB0c,MAAM0d,CAAAA,cAAep6B,CAAAA,MAArB,CAA8B,CAC9B0c,MAAMge,CAAAA,eAAgB16B,CAAAA,MAAtB,CAA+B,CAC/B0c,MAAMie,CAAAA,YAAa36B,CAAAA,MAAnB,CAA4B,CAC5B,OAAO0c,MANmB,CAxItB,CAAX,CAAD,EAfsD,CA3tQ5C,CAg4QH,QAAQ,CAACzgB,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAQtD,IAAI68B,KAAO,EAEXr9B,OAAOC,CAAAA,OAAP,CAAiBo9B,IAEjB,KAAI5Z,KAAOjjB,mBAAA,CAAoB,CAApB,CAAX,CACIyC,OAASzC,mBAAA,CAAoB,CAApB,CAEZ,UAAQ,EAAG,CAQR68B,IAAKl7B,CAAAA,MAAL,CAAc2/B,QAAQ,CAACtsB,OAAD,CAAU,CAS5B,MAAOvS,OAAOO,CAAAA,MAAP,CARQyW,CACX2hB,QAAS,EADE3hB;AAEXwG,MAAO,EAFIxG,CAGXgkB,UAAW,EAHAhkB,CAIX8hB,YAAa,EAJF9hB,CAKX+hB,aAAc,EALH/hB,CAQR,CAAwBzE,OAAxB,CATqB,CAoChC6nB,KAAKxxB,CAAAA,MAAL,CAAck2B,QAAQ,CAAC7J,IAAD,CAAOriB,MAAP,CAAegW,MAAf,CAAuBmW,WAAvB,CAAoC,CAAA,IAC1CC,GAD0C,CAElDzM,MAAQ3J,MAAO2J,CAAAA,KAFmC,CAGlDoG,QAAU1D,IAAK0D,CAAAA,OAGfsG,KAAAA,IAAc,CAAA,CAElB,KAAKvhC,MAAL,CAAS,CAAT,CAAYA,MAAZ,CAAgBkV,MAAO9R,CAAAA,MAAvB,CAA+BpD,MAAA,EAA/B,CAAoC,CAChC,IAAIqP,KAAO6F,MAAA,CAAOlV,MAAP,CAEX,IAASga,CAAL3K,IAAK2K,CAAAA,UAAT,EAAwBqnB,WAAxB,CAIA,GAAUt2B,CAAN8pB,KAAM9pB,CAAAA,MAAV,EAAqB,EAAAsE,IAAKtE,CAAAA,MAAO1E,CAAAA,GAAI2E,CAAAA,CAAhB,CAAoB6pB,KAAM9pB,CAAAA,MAAO3E,CAAAA,GAAI4E,CAAAA,CAArC,EAA0CqE,IAAKtE,CAAAA,MAAO3E,CAAAA,GAAI4E,CAAAA,CAA1D,CAA8D6pB,KAAM9pB,CAAAA,MAAO1E,CAAAA,GAAI2E,CAAAA,CAA/E,EACdqE,IAAKtE,CAAAA,MAAO1E,CAAAA,GAAI4E,CAAAA,CADF,CACM4pB,KAAM9pB,CAAAA,MAAO3E,CAAAA,GAAI6E,CAAAA,CADvB,EAC4BoE,IAAKtE,CAAAA,MAAO3E,CAAAA,GAAI6E,CAAAA,CAD5C,CACgD4pB,KAAM9pB,CAAAA,MAAO1E,CAAAA,GAAI4E,CAAAA,CADjE,CAArB,CAAA,CAIA,IAAIu2B,UAAY9E,IAAK+E,CAAAA,UAAL,CAAgBlK,IAAhB,CAAsBloB,IAAtB,CAGhB,IAAI,CAACA,IAAK8rB,CAAAA,MAAV;AAAoBqG,SAAU1sB,CAAAA,EAA9B,GAAqCzF,IAAK8rB,CAAAA,MAAOrmB,CAAAA,EAAjD,EAAuDusB,WAAvD,CAAoE,CAEhE,GAAI,CAAChyB,IAAK8rB,CAAAA,MAAV,EAAoBkG,WAApB,CACIhyB,IAAK8rB,CAAAA,MAAL,CAAcqG,SAElB,KAAIE,MAAQhF,IAAKiF,CAAAA,YAAL,CAAkBH,SAAlB,CAA6BnyB,IAAK8rB,CAAAA,MAAlC,CAIZ,KAAKyG,GAAL,CAAWF,KAAMG,CAAAA,QAAjB,CAA2BD,GAA3B,EAAkCF,KAAMI,CAAAA,MAAxC,CAAgDF,GAAA,EAAhD,CACI,IAAKN,GAAL,CAAWI,KAAMK,CAAAA,QAAjB,CAA2BT,GAA3B,EAAkCI,KAAMM,CAAAA,MAAxC,CAAgDV,GAAA,EAAhD,CAAuD,CACnD,IAAApG,SAAWwB,IAAKuF,CAAAA,YAAL,CAAkBL,GAAlB,CAAuBN,GAAvB,CACX,KAAAY,OAASjH,OAAA,CAAQC,QAAR,CAET,KAAIiH,kBAAqBP,GAArBO,EAA4BX,SAAUK,CAAAA,QAAtCM,EAAkDP,GAAlDO,EAAyDX,SAAUM,CAAAA,MAAnEK,EACuBb,GADvBa,EAC8BX,SAAUO,CAAAA,QADxCI,EACoDb,GADpDa,EAC2DX,SAAUQ,CAAAA,MADzE,CAGII,kBAAqBR,GAArBQ,EAA4B/yB,IAAK8rB,CAAAA,MAAO0G,CAAAA,QAAxCO,EAAoDR,GAApDQ,EAA2D/yB,IAAK8rB,CAAAA,MAAO2G,CAAAA,MAAvEM,EACuBd,GADvBc;AAC8B/yB,IAAK8rB,CAAAA,MAAO4G,CAAAA,QAD1CK,EACsDd,GADtDc,EAC6D/yB,IAAK8rB,CAAAA,MAAO6G,CAAAA,MAGzE,EAACG,iBAAL,EAA0BC,iBAA1B,EACQA,iBADR,EAEYF,MAFZ,EAGYxF,IAAK2F,CAAAA,iBAAL,CAAuB9K,IAAvB,CAA6B2K,MAA7B,CAAqC7yB,IAArC,CAKZ,IAAIA,IAAK8rB,CAAAA,MAAT,GAAoBqG,SAApB,EAAkCW,iBAAlC,EAAuD,CAACC,iBAAxD,EAA8Ef,WAA9E,CACSa,MAEL,GADIA,MACJ,CADaxF,IAAK4F,CAAAA,aAAL,CAAmBrH,OAAnB,CAA4BC,QAA5B,CACb,EAAAwB,IAAK6F,CAAAA,cAAL,CAAoBhL,IAApB,CAA0B2K,MAA1B,CAAkC7yB,IAAlC,CAtB+C,CA4B3DA,IAAK8rB,CAAAA,MAAL,CAAcqG,SAGdD,IAAA,CAAc,CAAA,CAzCkD,CAPpE,CAPgC,CA4DhCA,GAAJ,GACIhK,IAAK+F,CAAAA,SADT,CACqBZ,IAAK8F,CAAAA,sBAAL,CAA4BjL,IAA5B,CADrB,CApEsD,CA6E1DmF,KAAKnlB,CAAAA,KAAL,CAAakrB,QAAQ,CAAClL,IAAD,CAAO,CACxBA,IAAK0D,CAAAA,OAAL,CAAe,EACf1D,KAAKzX,CAAAA,KAAL,CAAa,EACbyX,KAAK+F,CAAAA,SAAL,CAAiB,EAHO,CAc5BZ,KAAKiF,CAAAA,YAAL;AAAoBe,QAAQ,CAACC,OAAD,CAAUC,OAAV,CAAmB,CAM3C,MAAOlG,KAAKmG,CAAAA,aAAL,CALQh+B,IAAKuB,CAAAA,GAALy7B,CAASc,OAAQd,CAAAA,QAAjBA,CAA2Be,OAAQf,CAAAA,QAAnCA,CAKR,CAJMh9B,IAAKwB,CAAAA,GAALy7B,CAASa,OAAQb,CAAAA,MAAjBA,CAAyBc,OAAQd,CAAAA,MAAjCA,CAIN,CAHQj9B,IAAKuB,CAAAA,GAAL27B,CAASY,OAAQZ,CAAAA,QAAjBA,CAA2Ba,OAAQb,CAAAA,QAAnCA,CAGR,CAFMl9B,IAAKwB,CAAAA,GAAL27B,CAASW,OAAQX,CAAAA,MAAjBA,CAAyBY,OAAQZ,CAAAA,MAAjCA,CAEN,CANoC,CAiB/CtF,KAAK+E,CAAAA,UAAL,CAAkBqB,QAAQ,CAACvL,IAAD,CAAOloB,IAAP,CAAa,CAC/BtE,IAAAA,CAASsE,IAAKtE,CAAAA,MAMlB,OAAO2xB,KAAKmG,CAAAA,aAAL,CALQh+B,IAAKC,CAAAA,KAAL+8B,CAAW92B,IAAO3E,CAAAA,GAAI4E,CAAAA,CAAtB62B,CAA0BtK,IAAK6D,CAAAA,WAA/ByG,CAKR,CAJMh9B,IAAKC,CAAAA,KAALg9B,CAAW/2B,IAAO1E,CAAAA,GAAI2E,CAAAA,CAAtB82B,CAA0BvK,IAAK6D,CAAAA,WAA/B0G,CAIN,CAHQj9B,IAAKC,CAAAA,KAALi9B,CAAWh3B,IAAO3E,CAAAA,GAAI6E,CAAAA,CAAtB82B,CAA0BxK,IAAK8D,CAAAA,YAA/B0G,CAGR,CAFMl9B,IAAKC,CAAAA,KAALk9B,CAAWj3B,IAAO1E,CAAAA,GAAI4E,CAAAA,CAAtB+2B,CAA0BzK,IAAK8D,CAAAA,YAA/B2G,CAEN,CAP4B,CAoBvCtF,KAAKmG,CAAAA,aAAL,CAAqBE,QAAQ,CAAClB,QAAD;AAAWC,MAAX,CAAmBC,QAAnB,CAA6BC,MAA7B,CAAqC,CAC9D,MAAO,CACHltB,GAAI+sB,QAAJ/sB,CAAe,GAAfA,CAAqBgtB,MAArBhtB,CAA8B,GAA9BA,CAAoCitB,QAApCjtB,CAA+C,GAA/CA,CAAqDktB,MADlD,CAEOH,QAFP,CAGKC,MAHL,CAIOC,QAJP,CAKKC,MALL,CADuD,CAkBlEtF,KAAKuF,CAAAA,YAAL,CAAoBe,QAAQ,CAACC,MAAD,CAAS3B,GAAT,CAAc,CACtC,MAAO,GAAP,CAAa2B,MAAb,CAAsB,GAAtB,CAA4B3B,GADU,CAY1C5E,KAAK4F,CAAAA,aAAL,CAAqBY,QAAQ,CAACjI,OAAD,CAAUC,QAAV,CAAoB,CAE7C,MADaD,QAAA,CAAQC,QAAR,CACb,CADiC,EADY,CAajDwB,KAAK6F,CAAAA,cAAL,CAAsBY,QAAQ,CAAC5L,IAAD,CAAO2K,MAAP,CAAe7yB,IAAf,CAAqB,CAE/C,IAAK,IAAIrP,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkiC,MAAO9+B,CAAAA,MAA3B,CAAmCpD,CAAA,EAAnC,CAAwC,CACpC,IAAImgB,MAAQ+hB,MAAA,CAAOliC,CAAP,CAEZ,IAAI,EAAAqP,IAAKyF,CAAAA,EAAL,GAAYqL,KAAMrL,CAAAA,EAAlB,EAAyBzF,IAAKsI,CAAAA,QAA9B,EAA0CwI,KAAMxI,CAAAA,QAAhD,CAAJ,CAAA,CAHoC,IAQhC2T,OAASxI,IAAKhO,CAAAA,EAAL,CAAQzF,IAAR,CAAc8Q,KAAd,CARuB,CAShCJ,KAAOwX,IAAKzX,CAAAA,KAAL,CAAWwL,MAAX,CAEPvL,KAAJ,CACIA,IAAA,CAAK,CAAL,CADJ,EACe,CADf,CAGIwX,IAAKzX,CAAAA,KAAL,CAAWwL,MAAX,CAHJ,CAGyB,CAACjc,IAAD;AAAO8Q,KAAP,CAAc,CAAd,CAXzB,CAHoC,CAmBxC+hB,MAAOt+B,CAAAA,IAAP,CAAYyL,IAAZ,CArB+C,CAgCnDqtB,KAAK2F,CAAAA,iBAAL,CAAyBe,QAAQ,CAAC7L,IAAD,CAAO2K,MAAP,CAAe7yB,IAAf,CAAqB,CAElD6yB,MAAOprB,CAAAA,MAAP,CAAcxU,MAAOmG,CAAAA,OAAP,CAAey5B,MAAf,CAAuB7yB,IAAvB,CAAd,CAA4C,CAA5C,CAGA,KAAK,IAAIrP,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkiC,MAAO9+B,CAAAA,MAA3B,CAAmCpD,CAAA,EAAnC,CAAwC,CAAA,IAIhCsrB,OAASxI,IAAKhO,CAAAA,EAAL,CAAQzF,IAAR,CADD6yB,MAAA/hB,CAAOngB,CAAPmgB,CACC,CAGb,EAFIJ,MAEJ,CAFWwX,IAAKzX,CAAAA,KAAL,CAAWwL,MAAX,CAEX,GACI,EAAAvL,MAAA,CAAK,CAAL,CARgC,CALU,CAwBtD2c,KAAK8F,CAAAA,sBAAL,CAA8Ba,QAAQ,CAAC9L,IAAD,CAAO,CAAA,IAGrCzX,MAAQ,EAGZ,KAAAwjB,SAAWhhC,MAAOoB,CAAAA,IAAP,CAAY6zB,IAAKzX,CAAAA,KAAjB,CAGX,KAAK,IAAI1M,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkwB,QAASlgC,CAAAA,MAA7B,CAAqCgQ,CAAA,EAArC,CAA0C,CACtC,IAAA2M,KAAOwX,IAAKzX,CAAAA,KAAL,CAAWwjB,QAAA,CAASlwB,CAAT,CAAX,CAIO,EAAd,CAAI2M,IAAA,CAAK,CAAL,CAAJ,CACID,KAAMlc,CAAAA,IAAN,CAAWmc,IAAX,CADJ,CAGI,OAAOwX,IAAKzX,CAAAA,KAAL,CAAWwjB,QAAA,CAASlwB,CAAT,CAAX,CAR2B,CAY1C,MAAO0M,MArBkC,CA/QrC,CAAX,CAAD,EAfsD,CAh4Q5C,CA2rRH,QAAQ,CAACzgB,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAElD0jC,MAAAA;AAASlkC,MAAOC,CAAAA,OAAhBikC,CAA0B1jC,mBAAA,CAAoB,EAApB,CAE9B0jC,OAAOvqB,CAAAA,IAAP,CAAcnZ,mBAAA,CAAoB,EAApB,CACd0jC,OAAO7e,CAAAA,MAAP,CAAgB7kB,mBAAA,CAAoB,EAApB,CAChB0jC,OAAO5uB,CAAAA,IAAP,CAAc9U,mBAAA,CAAoB,CAApB,CACd0jC,OAAO34B,CAAAA,MAAP,CAAgB/K,mBAAA,CAAoB,CAApB,CAChB0jC,OAAOjhC,CAAAA,MAAP,CAAgBzC,mBAAA,CAAoB,CAApB,CAChB0jC,OAAO7uB,CAAAA,SAAP,CAAmB7U,mBAAA,CAAoB,CAApB,CACnB0jC,OAAOC,CAAAA,UAAP,CAAoB3jC,mBAAA,CAAoB,EAApB,CACpB0jC,OAAO/iB,CAAAA,UAAP,CAAoB3gB,mBAAA,CAAoB,CAApB,CACpB0jC,OAAOxgB,CAAAA,OAAP,CAAiBljB,mBAAA,CAAoB,EAApB,CACjB0jC,OAAO1Y,CAAAA,QAAP,CAAkBhrB,mBAAA,CAAoB,EAApB,CAClB0jC,OAAOhH,CAAAA,MAAP,CAAgB18B,mBAAA,CAAoB,EAApB,CAChB0jC,OAAO5vB,CAAAA,MAAP,CAAgB9T,mBAAA,CAAoB,CAApB,CAChB0jC,OAAO7G,CAAAA,IAAP;AAAc78B,mBAAA,CAAoB,EAApB,CACd0jC,OAAOhc,CAAAA,KAAP,CAAe1nB,mBAAA,CAAoB,EAApB,CACf0jC,OAAOE,CAAAA,eAAP,CAAyB5jC,mBAAA,CAAoB,EAApB,CACzB0jC,OAAOzgB,CAAAA,IAAP,CAAcjjB,mBAAA,CAAoB,CAApB,CACd0jC,OAAO9G,CAAAA,KAAP,CAAe58B,mBAAA,CAAoB,EAApB,CACf0jC,OAAO5V,CAAAA,MAAP,CAAgB9tB,mBAAA,CAAoB,EAApB,CAChB0jC,OAAOG,CAAAA,KAAP,CAAe7jC,mBAAA,CAAoB,EAApB,CACf0jC,OAAOzS,CAAAA,MAAP,CAAgBjxB,mBAAA,CAAoB,EAApB,CAChB0jC,OAAO/G,CAAAA,QAAP,CAAkB38B,mBAAA,CAAoB,EAApB,CAClB0jC,OAAOI,CAAAA,MAAP,CAAgB9jC,mBAAA,CAAoB,EAApB,CAChB0jC,OAAOzY,CAAAA,GAAP,CAAajrB,mBAAA,CAAoB,EAApB,CACb0jC,OAAOxqB,CAAAA,QAAP,CAAkBlZ,mBAAA,CAAoB,CAApB,CAClB0jC,OAAOK,CAAAA,GAAP,CAAa/jC,mBAAA,CAAoB,EAApB,CACb0jC,OAAOj3B,CAAAA,MAAP,CAAgBzM,mBAAA,CAAoB,CAApB,CAChB0jC;MAAOr0B,CAAAA,QAAP,CAAkBrP,mBAAA,CAAoB,CAApB,CAClB0jC,OAAOM,CAAAA,KAAP,CAAehkC,mBAAA,CAAoB,EAApB,CAGf0jC,OAAOhH,CAAAA,MAAOhI,CAAAA,GAAd,CAAoBgP,MAAOI,CAAAA,MAAOpP,CAAAA,GAClCgP,OAAOjhC,CAAAA,MAAO6F,CAAAA,UAAd,CAAyBo7B,MAAOhH,CAAAA,MAAhC,CAAwC,KAAxC,CAA+C,oDAA/C,CAnCsD,CA3rR5C,CAmuRH,QAAQ,CAACl9B,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAQtD,IAAI0jC,OAAS,EAEblkC,OAAOC,CAAAA,OAAP,CAAiBikC,MAEjB,KAAI5V,OAAS9tB,mBAAA,CAAoB,EAApB,CAAb,CACIyC,OAASzC,mBAAA,CAAoB,CAApB,CAEZ,UAAQ,EAAG,CAQR0jC,MAAOhjC,CAAAA,IAAP,CAAc,WAQdgjC,OAAOpV,CAAAA,OAAP,CAAyB,QAQzBoV,OAAO9T,CAAAA,IAAP,CAAc,EAQd8T,OAAOvU,CAAAA,IAAP,CAAc,EAUduU,OAAOjU,CAAAA,GAAP,CAAawU,QAAQ,EAAG,CACpBnW,MAAO2B,CAAAA,GAAP,CAAWiU,MAAX,CAAmB77B,KAAMxF,CAAAA,SAAUkC,CAAAA,KAAMlE,CAAAA,IAAtB,CAA2BiD,SAA3B,CAAnB,CADoB,CAYxBogC;MAAOQ,CAAAA,MAAP,CAAgBC,QAAQ,CAAChgC,IAAD,CAAOgF,IAAP,CAAa,CACjChF,IAAA,CAAOA,IAAKiD,CAAAA,OAAL,CAAa,UAAb,CAAyB,EAAzB,CACP,OAAO3E,OAAO2H,CAAAA,eAAP,CAAuBs5B,MAAvB,CAA+Bv/B,IAA/B,CAAqCgF,IAArC,CAF0B,CAarCu6B,OAAOU,CAAAA,KAAP,CAAeC,QAAQ,CAAClgC,IAAD,CAAOgF,IAAP,CAAa,CAChChF,IAAA,CAAOA,IAAKiD,CAAAA,OAAL,CAAa,UAAb,CAAyB,EAAzB,CACP,OAAO3E,OAAO8H,CAAAA,cAAP,CAAsBm5B,MAAtB,CAA8Bv/B,IAA9B,CAAoCgF,IAApC,CAFyB,CAnE5B,CAAX,CAAD,EAfsD,CAnuR5C,CA+zRH,QAAQ,CAAC3J,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAWtD,IAAI2jC,WAAa,EAEjBnkC,OAAOC,CAAAA,OAAP,CAAiBkkC,UAEjB,KAAI9uB,UAAY7U,mBAAA,CAAoB,CAApB,CAAhB,CACI2gB,WAAa3gB,mBAAA,CAAoB,CAApB,CADjB,CAEIyC,OAASzC,mBAAA,CAAoB,CAApB,CAFb,CAGI8U,KAAO9U,mBAAA,CAAoB,CAApB,CAHX,CAII6kB,OAAS7kB,mBAAA,CAAoB,EAApB,CAJb,CAKIsI,WAAa7F,MAAO6F,CAAAA,UAEvB;SAAQ,EAAG,CAeRq7B,UAAWW,CAAAA,KAAX,CAAmBC,QAAQ,CAAC3f,EAAD,CAAKsB,EAAL,CAASse,OAAT,CAAkBC,IAAlB,CAAwBC,SAAxB,CAAmCC,MAAnC,CAA2CzwB,QAA3C,CAAqD,CAO5E,IAP4E,IACxEowB,MAAQzvB,SAAUlT,CAAAA,MAAV,CAAiB,CAAE6T,MAAO,OAAT,CAAjB,CADgE,CAExErK,EAAIyZ,EAFoE,CAIxEggB,QAJwE,CAKxEzkC,EAAI,CALoE,CAOnEshC,IAAM,CAAf,CAAkBA,GAAlB,CAAwBgD,IAAxB,CAA8BhD,GAAA,EAA9B,CAAqC,CAGjC,IAFA,IAAIoD,UAAY,CAAhB,CAESzB,OAAS,CAAlB,CAAqBA,MAArB,CAA8BoB,OAA9B,CAAuCpB,MAAA,EAAvC,CAAiD,CAC7C,IAAI5zB,KAAO0E,QAAA,CAAS/I,CAAT,CAAYC,EAAZ,CAAeg4B,MAAf,CAAuB3B,GAAvB,CAA4BmD,QAA5B,CAAsCzkC,CAAtC,CAEPqP,KAAJ,EACQs1B,CAaJ,CAbiBt1B,IAAKtE,CAAAA,MAAO1E,CAAAA,GAAI4E,CAAAA,CAajC,CAbqCoE,IAAKtE,CAAAA,MAAO3E,CAAAA,GAAI6E,CAAAA,CAarD,CAZI25B,QAYJ,CAZgBv1B,IAAKtE,CAAAA,MAAO1E,CAAAA,GAAI2E,CAAAA,CAYhC,CAZoCqE,IAAKtE,CAAAA,MAAO3E,CAAAA,GAAI4E,CAAAA,CAYpD,CAVI25B,CAUJ,CAViBD,SAUjB,GATIA,SASJ,CATgBC,CAShB,EAPAhwB,IAAK7I,CAAAA,SAAL,CAAeuD,IAAf,CAAqB,CAAErE,EAAe,EAAfA,CAAG45B,QAAL,CAAsB35B,EAAgB,EAAhBA,CAAG05B,CAAzB,CAArB,CAOA,CALA35B,CAKA,CALIqE,IAAKtE,CAAAA,MAAO1E,CAAAA,GAAI2E,CAAAA,CAKpB,CALwBu5B,SAKxB,CAHA7vB,SAAUqB,CAAAA,OAAV,CAAkBouB,KAAlB,CAAyB90B,IAAzB,CAGA,CADAo1B,QACA;AADWp1B,IACX,CAAArP,CAAA,EAAK,CAdT,EAgBIgL,CAhBJ,EAgBSu5B,SAnBoC,CAuBjDt5B,EAAA,EAAKy5B,SAAL,CAAiBF,MACjBx5B,EAAA,CAAIyZ,EA3B6B,CA8BrC,MAAO0f,MArCqE,CAmDhFX,WAAWl7B,CAAAA,KAAX,CAAmBu8B,QAAQ,CAACpvB,SAAD,CAAYqvB,QAAZ,CAAsBC,QAAtB,CAAgCC,QAAhC,CAA0CC,QAA1C,CAAoDpwB,OAApD,CAA6D,CAGpF,IAFA,IAAIK,OAASO,SAAUP,CAAAA,MAAvB,CAESlV,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkV,MAAO9R,CAAAA,MAA3B,CAAmCpD,CAAA,EAAnC,CAAwC,CAAA,IAChCkgB,MAAQhL,MAAA,CAAOlV,CAAP,CAAW,CAAX,CADwB,CAEhCmgB,MAAQjL,MAAA,CAAOlV,CAAP,CAaRkW,MAAAA,CAAa5T,MAAOO,CAAAA,MAAP,CAPFyW,CACJ4G,KADI5G,CAEXuH,OAAQ,CAAE7V,GANGkV,KAAMnV,CAAAA,MAAO1E,CAAAA,GAAI2E,CAAAA,CAMpBA,CANwBkV,KAAMnV,CAAAA,MAAO3E,CAAAA,GAAI4E,CAAAA,CAMzCA,EAAgB85B,QAAlB,CAA4B75B,GAPtBiV,KAAMnV,CAAAA,MAAO1E,CAAAA,GAAI4E,CAAAA,CAOKA,CAPDiV,KAAMnV,CAAAA,MAAO3E,CAAAA,GAAI6E,CAAAA,CAOhBA,EAAiB85B,QAA7C,CAFGzrB,CAGJ6G,KAHI7G,CAIXwH,OAAQ,CAAE9V,GANGmV,KAAMpV,CAAAA,MAAO1E,CAAAA,GAAI2E,CAAAA,CAMpBA,CANwBmV,KAAMpV,CAAAA,MAAO3E,CAAAA,GAAI4E,CAAAA,CAMzCA,EAAgBg6B,QAAlB,CAA4B/5B,GAPtBkV,KAAMpV,CAAAA,MAAO1E,CAAAA,GAAI4E,CAAAA,CAOKA,CAPDkV,KAAMpV,CAAAA,MAAO3E,CAAAA,GAAI6E,CAAAA,CAOhBA,EAAiBg6B,QAA7C,CAJG3rB,CAOE,CAAwBzE,OAAxB,CAEjBH;SAAUsB,CAAAA,aAAV,CAAwBP,SAAxB,CAAmC+K,UAAWhf,CAAAA,MAAX,CAAkB0U,KAAlB,CAAnC,CAjBoC,CAoBxCT,SAAUJ,CAAAA,KAAV,EAAmB,QAEnB,OAAOI,UAzB6E,CAsCxF+tB,WAAW0B,CAAAA,IAAX,CAAkBC,QAAQ,CAAC1vB,SAAD,CAAY4uB,OAAZ,CAAqBC,IAArB,CAA2Bc,UAA3B,CAAuCvwB,OAAvC,CAAgD,CAAA,IAClEK,OAASO,SAAUP,CAAAA,MAD+C,CAElEosB,GAFkE,CAGlEM,GAKJ,KAAKN,GAAL,CAAW,CAAX,CAAcA,GAAd,CAAoBgD,IAApB,CAA0BhD,GAAA,EAA1B,CAAiC,CAC7B,IAAKM,GAAL,CAAW,CAAX,CAAcA,GAAd,CAAoByC,OAApB,CAA6BzC,GAAA,EAA7B,CAAoC,CAChC,IAAA1hB,MAAQhL,MAAA,CAAQ0sB,GAAR,CAAc,CAAd,CAAoBN,GAApB,CAA0B+C,OAA1B,CACR,KAAAlkB,MAAQjL,MAAA,CAAO0sB,GAAP,CAAcN,GAAd,CAAoB+C,OAApB,CACR3vB,UAAUsB,CAAAA,aAAV,CAAwBP,SAAxB,CAAmC+K,UAAWhf,CAAAA,MAAX,CAAkBc,MAAOO,CAAAA,MAAP,CAAc,CAASqd,KAAT,CAAuBC,KAAvB,CAAd,CAA8CtL,OAA9C,CAAlB,CAAnC,CAHgC,CAMpC,GAAU,CAAV,CAAIysB,GAAJ,CACI,IAAKM,GAAL,CAAW,CAAX,CAAcA,GAAd,CAAoByC,OAApB,CAA6BzC,GAAA,EAA7B,CACI1hB,KASA,CATQhL,MAAA,CAAO0sB,GAAP,EAAeN,GAAf,CAAqB,CAArB,EAA0B+C,OAA1B,CASR,CARAlkB,KAQA;AARQjL,MAAA,CAAO0sB,GAAP,CAAcN,GAAd,CAAoB+C,OAApB,CAQR,CAPA3vB,SAAUsB,CAAAA,aAAV,CAAwBP,SAAxB,CAAmC+K,UAAWhf,CAAAA,MAAX,CAAkBc,MAAOO,CAAAA,MAAP,CAAc,CAASqd,KAAT,CAAuBC,KAAvB,CAAd,CAA8CtL,OAA9C,CAAlB,CAAnC,CAOA,CALIuwB,UAKJ,EALwB,CAKxB,CALkBxD,GAKlB,GAJIyD,KACA,CADQnwB,MAAA,CAAQ0sB,GAAR,CAAc,CAAd,EAAqBN,GAArB,CAA2B,CAA3B,EAAgC+C,OAAhC,CACR,CAAA3vB,SAAUsB,CAAAA,aAAV,CAAwBP,SAAxB,CAAmC+K,UAAWhf,CAAAA,MAAX,CAAkBc,MAAOO,CAAAA,MAAP,CAAc,CAASwiC,KAAT,CAAuBllB,KAAvB,CAAd,CAA8CtL,OAA9C,CAAlB,CAAnC,CAGJ,EAAIuwB,UAAJ,EAAkBxD,GAAlB,CAAwByC,OAAxB,CAAkC,CAAlC,GACIgB,KACA,CADQnwB,MAAA,CAAQ0sB,GAAR,CAAc,CAAd,EAAqBN,GAArB,CAA2B,CAA3B,EAAgC+C,OAAhC,CACR,CAAA3vB,SAAUsB,CAAAA,aAAV,CAAwBP,SAAxB,CAAmC+K,UAAWhf,CAAAA,MAAX,CAAkBc,MAAOO,CAAAA,MAAP,CAAc,CAASwiC,KAAT,CAAuBllB,KAAvB,CAAd,CAA8CtL,OAA9C,CAAlB,CAAnC,CAFJ,CAlBqB,CA0BjCY,SAAUJ,CAAAA,KAAV,EAAmB,OAEnB,OAAOI,UApC+D,CAoD1E+tB,WAAW8B,CAAAA,OAAX,CAAqBC,QAAQ,CAAC9gB,EAAD,CAAKsB,EAAL,CAASse,OAAT;AAAkBC,IAAlB,CAAwBC,SAAxB,CAAmCC,MAAnC,CAA2CzwB,QAA3C,CAAqD,CAC9E,MAAOyvB,WAAWW,CAAAA,KAAX,CAAiB1f,EAAjB,CAAqBsB,EAArB,CAAyBse,OAAzB,CAAkCC,IAAlC,CAAwCC,SAAxC,CAAmDC,MAAnD,CAA2D,QAAQ,CAACx5B,CAAD,CAAIC,CAAJ,CAAOg4B,MAAP,CAAe3B,GAAf,CAAoBmD,QAApB,CAA8BzkC,CAA9B,CAAiC,CAAA,IACnGwlC,WAAa3gC,IAAKuB,CAAAA,GAAL,CAASk+B,IAAT,CAAez/B,IAAK6gB,CAAAA,IAAL,CAAU2e,OAAV,CAAoB,CAApB,CAAf,CACboB,EAAAA,CAAgBhB,QAAA,CAAWA,QAAS15B,CAAAA,MAAO1E,CAAAA,GAAI2E,CAAAA,CAA/B,CAAmCy5B,QAAS15B,CAAAA,MAAO3E,CAAAA,GAAI4E,CAAAA,CAAvD,CAA2D,CAE/E,IAAI,EAAAs2B,GAAA,CAAMkE,UAAN,GAIJlE,GAKI,CALEkE,UAKF,CALelE,GAKf,CAFAp9B,UAEA,CAFMmgC,OAEN,CAFgB,CAEhB,CAFoB/C,GAEpB,CAAA2B,MAAA,CAHQ3B,GAGR,EAAkB2B,MAAlB,CAA2B/+B,UAT3B,EAAJ,CAmBA,MANU,EAMH,GANHlE,CAMG,EALH2U,IAAK7I,CAAAA,SAAL,CAAe24B,QAAf,CAAyB,CAAEz5B,GAAIi4B,MAAJj4B,EAA8B,CAAhB,GAAAq5B,OAAA,CAAU,CAAV,CAAoB,CAApB,CAAwB,EAAtCr5B,GAA6Cy6B,CAA/C,CAA8Dx6B,EAAG,CAAjE,CAAzB,CAKG,CAAA8I,QAAA,CAAS0Q,EAAT,EAFOggB,QAAAlpB,CAAW0nB,MAAX1nB,CAAoBkqB,CAApBlqB,CAAoC,CAE3C,EAAwB0nB,MAAxB,CAAiCsB,SAAjC,CAA4Ct5B,CAA5C,CAA+Cg4B,MAA/C,CAAuD3B,GAAvD,CAA4DmD,QAA5D,CAAsEzkC,CAAtE,CAvBgG,CAApG,CADuE,CAuClFwjC,WAAWkC,CAAAA,aAAX;AAA2BC,QAAQ,CAAClhB,EAAD,CAAKsB,EAAL,CAASqI,MAAT,CAAiBwX,IAAjB,CAAuBxiC,MAAvB,CAA+B,CAG9D,IAFA,IAAIsiC,cAAgBhxB,SAAUlT,CAAAA,MAAV,CAAiB,CAAE6T,MAAO,gBAAT,CAAjB,CAApB,CAESrV,EAAI,CAAb,CAAgBA,CAAhB,CAAoBouB,MAApB,CAA4BpuB,CAAA,EAA5B,CAAiC,CAAA,IAEzBslB,OAASZ,MAAOY,CAAAA,MAAP,CAAcb,EAAd,CADInB,GACJ,CAAmBtjB,CAAnB,CAAwB4lC,IAAxB,CAA4C7f,EAA5C,CAAiD3iB,MAAjD,CAAyDwiC,IAAzD,CACL,CAAEt1B,QAASjF,QAAX,CAAqB+O,YAAa,CAAlC,CAAqCC,SAAU,CAA/C,CAAkDE,YAAa,IAA/D,CAAuEK,KAAM,CAA7E,CADK,CAFgB,CAIzB1E,WAAasK,UAAWhf,CAAAA,MAAX,CAAkB,CAAEqf,OAAQ,CAAE7V,EAAGyZ,EAAHzZ,CAH9BsY,GAG8BtY,CAAQhL,CAARgL,CAAa46B,IAAf,CAAmC36B,EAAG8a,EAAtC,CAAV,CAAsD5F,MAAOmF,MAA7D,CAAlB,CAEjB5Q,UAAUqB,CAAAA,OAAV,CAAkB2vB,aAAlB,CAAiCpgB,MAAjC,CACA5Q,UAAUsB,CAAAA,aAAV,CAAwB0vB,aAAxB,CAAuCxvB,UAAvC,CAP6B,CAUjC,MAAOwvB,cAbuD,CAgBlEv9B,WAAA,CAAWq7B,UAAX,CAAuB,eAAvB,CAAwC,2DAAxC,CAaAA;UAAWqC,CAAAA,GAAX,CAAiBC,QAAQ,CAACrhB,EAAD,CAAKsB,EAAL,CAASlB,KAAT,CAAgBC,MAAhB,CAAwBihB,SAAxB,CAAmC,CAAA,IACpDprB,MAAQhG,IAAKsH,CAAAA,SAAL,CAAe,CAAA,CAAf,CAD4C,CAGpD+pB,aAAwB,EAAxBA,CAAe,CAACnhB,KAAhBmhB,CADYC,EAFwC,CAIpDC,aAAuB,EAAvBA,CAAerhB,KAAfqhB,CAFYD,EAFwC,CAOpDJ,IAAMnxB,SAAUlT,CAAAA,MAAV,CAAiB,CAAE6T,MAAO,KAAT,CAAjB,CACNhG,MAAAA,CAAOqV,MAAOC,CAAAA,SAAP,CAAiBF,EAAjB,CAAqBsB,EAArB,CAAyBlB,KAAzB,CAAgCC,MAAhC,CAAwC,CAC3CtK,gBAAiB,CACNG,KADM,CAD0B,CAI3CpJ,QAAS,CACLE,OAAiB,EAAjBA,CAAQqT,MADH,CAJkC,CAO3C3K,QAAS,IAPkC,CAAxC,CAUPgsB,OAAAA,CAASzhB,MAAOY,CAAAA,MAAP,CAAcb,EAAd,CAAmBuhB,YAAnB,CAAiCjgB,EAAjC,CAbMqgB,CAaN,CAAoDL,SAApD,CAA+D,CACxEvrB,gBAAiB,CACNG,KADM,CADuD,CAIxEN,SAAU,EAJ8D,CAA/D,CAOTgsB,GAAAA,CAAS3hB,MAAOY,CAAAA,MAAP,CAAcb,EAAd,CAAmByhB,YAAnB,CAAiCngB,EAAjC,CApBMqgB,CAoBN,CAAoDL,SAApD,CAA+D,CACxEvrB,gBAAiB,CACNG,KADM,CADuD,CAIxEN,SAAU,EAJ8D,CAA/D,CAOTisB,aAAAA,CAAQ9lB,UAAWhf,CAAAA,MAAX,CAAkB,CAC1B2e,MAAO9Q,KADmB;AAE1ByR,OAAQ,CAAE9V,EAAGg7B,YAAL,CAAmB/6B,EA7BZm7B,CA6BP,CAFkB,CAG1BlmB,MAAOimB,MAHmB,CAI1BllB,UAAW,CAJe,CAK1B7d,OAAQ,CALkB,CAAlB,CAQRmjC,aAAAA,CAAQ/lB,UAAWhf,CAAAA,MAAX,CAAkB,CAC1B2e,MAAO9Q,KADmB,CAE1ByR,OAAQ,CAAE9V,EAAGk7B,YAAL,CAAmBj7B,EArCZm7B,CAqCP,CAFkB,CAG1BlmB,MAAOmmB,EAHmB,CAI1BplB,UAAW,CAJe,CAK1B7d,OAAQ,CALkB,CAAlB,CAQZsR,UAAUqB,CAAAA,OAAV,CAAkB8vB,GAAlB,CAAuBx2B,KAAvB,CACAqF,UAAUqB,CAAAA,OAAV,CAAkB8vB,GAAlB,CAAuBM,MAAvB,CACAzxB,UAAUqB,CAAAA,OAAV,CAAkB8vB,GAAlB,CAAuBQ,EAAvB,CACA3xB,UAAUsB,CAAAA,aAAV,CAAwB6vB,GAAxB,CAA6BS,YAA7B,CACA5xB,UAAUsB,CAAAA,aAAV,CAAwB6vB,GAAxB,CAA6BU,YAA7B,CAEA,OAAOV,IAtDiD,CAyD5D19B,WAAA,CAAWq7B,UAAX,CAAuB,KAAvB,CAA8B,uCAA9B,CAmBAA,WAAWgD,CAAAA,QAAX,CAAsBC,QAAQ,CAAChiB,EAAD,CAAKsB,EAAL,CAASse,OAAT,CAAkBC,IAAlB,CAAwBC,SAAxB,CAAmCC,MAAnC,CAA2CY,UAA3C,CAAuDsB,cAAvD;AAAuEC,eAAvE,CAAwFC,iBAAxF,CAA2G,CACrID,eAAA,CAAkBrkC,MAAOO,CAAAA,MAAP,CAAc,CAAEyN,QAASjF,QAAX,CAAd,CAAqCs7B,eAArC,CAClBC,kBAAA,CAAoBtkC,MAAOO,CAAAA,MAAP,CAAc,CAAEoe,UAAW,EAAb,CAAkBnG,OAAQ,CAAE/F,KAAM,MAAR,CAAgBuM,QAAS,CAAA,CAAzB,CAA1B,CAAd,CAA4EslB,iBAA5E,CAEhBJ,GAAAA,CAAWhD,UAAWW,CAAAA,KAAX,CAAiB1f,EAAjB,CAAqBsB,EAArB,CAAyBse,OAAzB,CAAkCC,IAAlC,CAAwCC,SAAxC,CAAmDC,MAAnD,CAA2D,QAAQ,CAACx5B,CAAD,CAAIC,CAAJ,CAAO,CACrF,MAAOyZ,OAAOY,CAAAA,MAAP,CAActa,CAAd,CAAiBC,CAAjB,CAAoBy7B,cAApB,CAAoCC,eAApC,CAD8E,CAA1E,CAIfnD,WAAW0B,CAAAA,IAAX,CAAgBsB,EAAhB,CAA0BnC,OAA1B,CAAmCC,IAAnC,CAAyCc,UAAzC,CAAqDwB,iBAArD,CAEAJ,GAASnxB,CAAAA,KAAT,CAAiB,WAEjB,OAAOmxB,GAZ8H,CAezIr+B,WAAA,CAAWq7B,UAAX,CAAuB,UAAvB,CAAmC,4DAAnC,CA3TQ,CAAX,CAAD,EAtBsD,CA/zR5C;AAspSH,QAAQ,CAACnkC,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAWtD,IAAI4jC,gBAAkB,EAEtBpkC,OAAOC,CAAAA,OAAP,CAAiBmkC,eAEjB,KAAIv0B,SAAWrP,mBAAA,CAAoB,CAApB,CAAf,CACIkZ,SAAWlZ,mBAAA,CAAoB,CAApB,CADf,CAEI0nB,MAAQ1nB,mBAAA,CAAoB,EAApB,CAFZ,CAGI8T,OAAS9T,mBAAA,CAAoB,CAApB,CAHb,CAIIgrB,SAAWhrB,mBAAA,CAAoB,EAApB,CAJf,CAKI2gB,WAAa3gB,mBAAA,CAAoB,CAApB,CALjB,CAMI6U,UAAY7U,mBAAA,CAAoB,CAApB,CANhB,CAOIyC,OAASzC,mBAAA,CAAoB,CAApB,CAPb,CAQI+K,OAAS/K,mBAAA,CAAoB,CAApB,CAEZ,UAAQ,EAAG,CAWR4jC,eAAgBjiC,CAAAA,MAAhB,CAAyBqlC,QAAQ,CAAC3b,MAAD,CAASrW,OAAT,CAAkB,CAC/C,IAAI6S,OAASwD,MAAA,CAASA,MAAOxD,CAAAA,KAAhB,CAAwB,IAAjCA,IAA2C7S,OAAA,CAAUA,OAAQ6S,CAAAA,KAAlB;AAA0B,IAArEA,CAECA,MAAL,GACQwD,MAAJ,EAAcA,MAAOpQ,CAAAA,MAArB,EAA+BoQ,MAAOpQ,CAAAA,MAAOgX,CAAAA,MAA7C,CACIpK,KADJ,CACYH,KAAM/lB,CAAAA,MAAN,CAAa0pB,MAAOpQ,CAAAA,MAAOgX,CAAAA,MAA3B,CADZ,CAEWjd,OAAJ,EAAeA,OAAQ4S,CAAAA,OAAvB,CACHC,KADG,CACKH,KAAM/lB,CAAAA,MAAN,CAAaqT,OAAQ4S,CAAAA,OAArB,CADL,EAGHC,KACA,CADQH,KAAM/lB,CAAAA,MAAN,EACR,CAAAc,MAAOuF,CAAAA,IAAP,CAAY,kHAAZ,CAJG,CAHX,CAWA,KAAIqO,WAAasK,UAAWhf,CAAAA,MAAX,CAAkB,CAC/B6T,MAAO,kBADwB,CAE/BwL,OAAQ6G,KAAMvb,CAAAA,QAFiB,CAG/B2U,OAAQ,CAAE9V,EAAG,CAAL,CAAQC,EAAG,CAAX,CAHuB,CAI/B7H,OAAQ,GAJuB,CAK/B6d,UAAW,EALoB,CAM/BE,iBAAkB,CANa,CAO/BrG,OAAQ,CACJG,YAAa,SADT,CAEJE,UAAW,CAFP,CAPuB,CAAlB,CAAjB,CA0BI2rB;AAAkBxkC,MAAOO,CAAAA,MAAP,CAbPyW,CACXvE,KAAM,iBADKuE,CAEJoO,KAFIpO,CAGXmO,QAAS,IAHEnO,CAIXjK,KAAM,IAJKiK,CAKCpD,UALDoD,CAMXkB,gBAAiB,CACbC,SAAU,CADG,CAEbC,KAAM,UAFO,CAGbC,MAAO,CAHM,CANNrB,CAaO,CAAwBzE,OAAxB,CAEtBlB,OAAOC,CAAAA,EAAP,CAAUsX,MAAV,CAAkB,cAAlB,CAAkC,QAAQ,EAAG,CACzC,IAAItT,UAAYlD,SAAUkD,CAAAA,SAAV,CAAoBsT,MAAO2J,CAAAA,KAA3B,CAChB4O,gBAAgBv4B,CAAAA,MAAhB,CAAuB47B,eAAvB,CAAwClvB,SAAxC,CACA6rB,gBAAgBsD,CAAAA,cAAhB,CAA+BD,eAA/B,CAHyC,CAA7C,CAMA,OAAOA,gBAhDwC,CA0DnDrD,gBAAgBv4B,CAAAA,MAAhB,CAAyB87B,QAAQ,CAACF,eAAD,CAAkB5xB,MAAlB,CAA0B,CAAA,IACnDwS,MAAQof,eAAgBpf,CAAAA,KAD2B,CAEnDxR,WAAa4wB,eAAgB5wB,CAAAA,UAFsB,CAGnD7G,KAAOy3B,eAAgBz3B,CAAAA,IAE3B;GAAqB,CAArB,GAAIqY,KAAMM,CAAAA,MAAV,CACI,GAAK9R,UAAWiK,CAAAA,KAAhB,CAsBIpH,QAAS1U,CAAAA,GAAT,CAAa6R,UAAWiK,CAAAA,KAAxB,CAA+B,CAAA,CAA/B,CACA,CAAAjK,UAAW2K,CAAAA,MAAX,CAAoB6G,KAAMvb,CAAAA,QAvB9B,KACI,KAAK,IAAInM,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkV,MAAO9R,CAAAA,MAA3B,CAAmCpD,CAAA,EAAnC,CAEI,IADAqP,IACI,CADG6F,MAAA,CAAOlV,CAAP,CACH,CAAA4K,MAAOW,CAAAA,QAAP,CAAgB8D,IAAKtE,CAAAA,MAArB,CAA6B2c,KAAMvb,CAAAA,QAAnC,CAAA,EACO0e,QAASQ,CAAAA,UAAT,CAAoBhc,IAAKmL,CAAAA,eAAzB,CAA0CssB,eAAgBtsB,CAAAA,eAA1D,CADX,CAEI,IAAK,IAAI5V,EAAwB,CAApB,CAAAyK,IAAK7K,CAAAA,KAAMpB,CAAAA,MAAX,CAAwB,CAAxB,CAA4B,CAAzC,CAA4CwB,CAA5C,CAAgDyK,IAAK7K,CAAAA,KAAMpB,CAAAA,MAA3D,CAAmEwB,CAAA,EAAnE,CAEI,GAAIsK,QAAS3D,CAAAA,QAAT,CADO8D,IAAK7K,CAAAA,KAAL2Y,CAAWvY,CAAXuY,CACgBrS,CAAAA,QAAvB,CAAiC4c,KAAMvb,CAAAA,QAAvC,CAAJ,CAAsD,CAClD+J,UAAW2K,CAAAA,MAAX,CAAoB6G,KAAMvb,CAAAA,QAC1B+J,WAAWiK,CAAAA,KAAX,CAAmB2mB,eAAgBz3B,CAAAA,IAAnC,CAA0CA,IAC1C6G,WAAW4K,CAAAA,MAAX,CAAoB,CAAE9V,EAAG0c,KAAMvb,CAAAA,QAASnB,CAAAA,CAAlBA;AAAsBqE,IAAKlD,CAAAA,QAASnB,CAAAA,CAAtC,CAAyCC,EAAGyc,KAAMvb,CAAAA,QAASlB,CAAAA,CAAlBA,CAAsBoE,IAAKlD,CAAAA,QAASlB,CAAAA,CAA7E,CACpBiL,WAAWmL,CAAAA,MAAX,CAAoBhS,IAAKrC,CAAAA,KAEzB+L,SAAS1U,CAAAA,GAAT,CAAagL,IAAb,CAAmB,CAAA,CAAnB,CACAsE,OAAOW,CAAAA,OAAP,CAAewyB,eAAf,CAAgC,WAAhC,CAA6C,CAASpf,KAAT,CAAsBrY,IAAtB,CAA7C,CAEA,MATkD,CAJ9D,CAJZ,IA2BI6G,WAAWiK,CAAAA,KAGX,CAHmB2mB,eAAgBz3B,CAAAA,IAGnC,CAH0C,IAG1C,CAFA6G,UAAW4K,CAAAA,MAEX,CAFoB,IAEpB,CAAIzR,IAAJ,EACIsE,MAAOW,CAAAA,OAAP,CAAewyB,eAAf,CAAgC,SAAhC,CAA2C,CAASpf,KAAT,CAAsBrY,IAAtB,CAA3C,CApC+C,CA8C3Do0B,gBAAgBsD,CAAAA,cAAhB,CAAiCE,QAAQ,CAACH,eAAD,CAAkB,CAAA,IACnDpf,MAAQof,eAAgBpf,CAAAA,KAD2B,CAEnDwf,YAAcxf,KAAMS,CAAAA,YAEpB+e,YAAY9e,CAAAA,SAAhB,EACIzU,MAAOW,CAAAA,OAAP,CAAewyB,eAAf,CAAgC,WAAhC,CAA6C,CAASpf,KAAT,CAA7C,CAEAwf,YAAY7e,CAAAA,SAAhB;AACI1U,MAAOW,CAAAA,OAAP,CAAewyB,eAAf,CAAgC,WAAhC,CAA6C,CAASpf,KAAT,CAA7C,CAEAwf,YAAY5e,CAAAA,OAAhB,EACI3U,MAAOW,CAAAA,OAAP,CAAewyB,eAAf,CAAgC,SAAhC,CAA2C,CAASpf,KAAT,CAA3C,CAGJH,MAAM4B,CAAAA,iBAAN,CAAwBzB,KAAxB,CAduD,CAnHnD,CAAX,CAAD,EAzBsD,CAtpS5C,CAi6SH,QAAQ,CAACroB,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAUtD,IAAI6jC,MAAQ,EAEZrkC,OAAOC,CAAAA,OAAP,CAAiBokC,KAEjB,KAAIp3B,OAASzM,mBAAA,CAAoB,CAApB,CAAb,CACIirB,IAAMjrB,mBAAA,CAAoB,EAApB,CADV,CAEI+K,OAAS/K,mBAAA,CAAoB,CAApB,CAFb,CAGI6kB,OAAS7kB,mBAAA,CAAoB,EAApB,CAHb,CAIIqP,SAAWrP,mBAAA,CAAoB,CAApB,CAEd,UAAQ,EAAG,CASR6jC,KAAMnY,CAAAA,QAAN,CAAiB4b,QAAQ,CAAC93B,IAAD,CAAO6F,MAAP,CAAe,CAGpC,IAFA,IAAI6V,WAAa,EAAjB,CAES/qB,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkV,MAAO9R,CAAAA,MAA3B,CAAmCpD,CAAA,EAAnC,CAAwC,CACpC,IAAIkgB,MAAQhL,MAAA,CAAOlV,CAAP,CAEZ;GAAI4K,MAAOc,CAAAA,QAAP,CAAgBwU,KAAMnV,CAAAA,MAAtB,CAA8BsE,IAAKtE,CAAAA,MAAnC,CAAJ,CACI,IAAK,IAAInG,EAA2B,CAAvB,GAAAsb,KAAM1b,CAAAA,KAAMpB,CAAAA,MAAZ,CAA2B,CAA3B,CAA+B,CAA5C,CAA+CwB,CAA/C,CAAmDsb,KAAM1b,CAAAA,KAAMpB,CAAAA,MAA/D,CAAuEwB,CAAA,EAAvE,CAA4E,CACxE,IAAIuY,KAAO+C,KAAM1b,CAAAA,KAAN,CAAYI,CAAZ,CAEX,IAAIgG,MAAOc,CAAAA,QAAP,CAAgByR,IAAKpS,CAAAA,MAArB,CAA6BsE,IAAKtE,CAAAA,MAAlC,CAAJ,GACQkV,IAEU2D,CAFEkH,GAAIS,CAAAA,QAAJ,CAAapO,IAAb,CAAmB9N,IAAnB,CAEFuU,CAAV3D,IAAU2D,CAAAA,QAHlB,EAG4B,CACpBmH,UAAWnnB,CAAAA,IAAX,CAAgBqc,IAAhB,CACA,MAFoB,CAN4C,CAJ5C,CAmBxC,MAAO8K,WAtB6B,CAkCxC2Y,MAAM0D,CAAAA,GAAN,CAAYC,QAAQ,CAACnyB,MAAD,CAASoyB,UAAT,CAAqBC,QAArB,CAA+BC,QAA/B,CAAyC,CACzDA,QAAA,CAAWA,QAAX,EAAuB,MADkC,KAGrDC,SAAWn7B,MAAOU,CAAAA,KAAP,CAAas6B,UAAb,CAAyBC,QAAzB,CAH0C,CAIrDG,UAAYp7B,MAAOG,CAAAA,SAAP,CAAiBH,MAAO6B,CAAAA,GAAP,CAAWm5B,UAAX,CAAuBC,QAAvB,CAAjB,CAGZH,WAAAA,CAAM1iB,MAAOC,CAAAA,SAAP,CAF+B,EAE/B,EAFE4iB,QAASv8B,CAAAA,CAEX;AAFes8B,UAAWt8B,CAAAA,CAE1B,EAD+B,EAC/B,EADEu8B,QAASt8B,CAAAA,CACX,CADeq8B,UAAWr8B,CAAAA,CAC1B,EAA6By8B,SAA7B,CAAwCF,QAAxC,CAAkD,CAAEx6B,MAAOy6B,QAAT,CAAlD,CACN1c,OAAAA,CAAa2Y,KAAMnY,CAAAA,QAAN,CAAe6b,UAAf,CAAoBlyB,MAApB,CAEjB,KAASlV,UAAT,CAAa,CAAb,CAAgBA,UAAhB,CAAoB+qB,MAAW3nB,CAAAA,MAA/B,CAAuCpD,UAAvC,EAA4C,CAA5C,CACQigB,QACJ,CADgB8K,MAAA,CAAW/qB,UAAX,CAChB,CAAAigB,QAAU5Q,CAAAA,IAAV,CAAiB4Q,QAAUE,CAAAA,KAA3B,CAAmCF,QAAUC,CAAAA,KAGjD,OAAO6K,OAfkD,CA0B7D2Y,MAAMvI,CAAAA,MAAN,CAAewM,QAAQ,CAACzyB,MAAD,CAASnK,MAAT,CAAiB68B,OAAjB,CAA0B,CAG7C,IAFA,IAAIv+B,OAAS,EAAb,CAESrJ,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkV,MAAO9R,CAAAA,MAA3B,CAAmCpD,CAAA,EAAnC,CAAwC,CAAA,IAChCqP,KAAO6F,MAAA,CAAOlV,CAAP,CADyB,CAEhC0L,SAAWd,MAAOc,CAAAA,QAAP,CAAgB2D,IAAKtE,CAAAA,MAArB,CAA6BA,MAA7B,CACf,EAAKW,QAAL,EAAiB,CAACk8B,OAAlB,EAA+B,CAACl8B,QAAhC,EAA4Ck8B,OAA5C,GACIv+B,MAAOzF,CAAAA,IAAP,CAAYyL,IAAZ,CAJgC,CAOxC,MAAOhG,OAVsC,CAoBjDq6B,MAAMj4B,CAAAA,KAAN;AAAco8B,QAAQ,CAAC3yB,MAAD,CAASzJ,KAAT,CAAgB,CAGlC,IAFA,IAAIpC,OAAS,EAAb,CAESrJ,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkV,MAAO9R,CAAAA,MAA3B,CAAmCpD,CAAA,EAAnC,CAAwC,CACpC,IAAIqP,KAAO6F,MAAA,CAAOlV,CAAP,CAEX,IAAI4K,MAAOW,CAAAA,QAAP,CAAgB8D,IAAKtE,CAAAA,MAArB,CAA6BU,KAA7B,CAAJ,CACI,IAAK,IAAI7G,EAA0B,CAAtB,GAAAyK,IAAK7K,CAAAA,KAAMpB,CAAAA,MAAX,CAA0B,CAA1B,CAA8B,CAA3C,CAA8CwB,CAA9C,CAAkDyK,IAAK7K,CAAAA,KAAMpB,CAAAA,MAA7D,CAAqEwB,CAAA,EAArE,CAA0E,CACtE,IAAIuY,KAAO9N,IAAK7K,CAAAA,KAAL,CAAWI,CAAX,CAEX,IAAIgG,MAAOW,CAAAA,QAAP,CAAgB4R,IAAKpS,CAAAA,MAArB,CAA6BU,KAA7B,CAAJ,EACOyD,QAAS3D,CAAAA,QAAT,CAAkB4R,IAAKrS,CAAAA,QAAvB,CAAiCW,KAAjC,CADP,CACgD,CAC5CpC,MAAOzF,CAAAA,IAAP,CAAYyL,IAAZ,CACA,MAF4C,CAJsB,CAJ1C,CAgBxC,MAAOhG,OAnB2B,CAzF9B,CAAX,CAAD,EApBsD,CAj6S5C,CAyiTH,QAAQ,CAAChK,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CActD,IAAI8jC,OAAS,EAEbtkC,OAAOC,CAAAA,OAAP,CAAiBqkC,MAEjB,KAAIhwB,OAAS9T,mBAAA,CAAoB,CAApB,CAAb,CACI08B,OAAS18B,mBAAA,CAAoB,EAApB,CADb,CAEIyC,OAASzC,mBAAA,CAAoB,CAApB,CAEZ;SAAQ,EAAG,CAKR,GAAsB,WAAtB,GAAI,MAAO6G,OAAX,CAAmC,CAC/B,IAAAqqB,uBAAyBrqB,MAAOsqB,CAAAA,qBAAhCD,EAAyDrqB,MAAOuqB,CAAAA,2BAAhEF,EACiCrqB,MAAOwqB,CAAAA,wBADxCH,EACoErqB,MAAOyqB,CAAAA,uBAE3E,KAAAE,sBAAwB3qB,MAAO4qB,CAAAA,oBAA/BD,EAAuD3qB,MAAO6qB,CAAAA,uBAA9DF,EACiC3qB,MAAO8qB,CAAAA,0BADxCH,EACsE3qB,MAAO+qB,CAAAA,sBAL9C,CAQnC,GAAI,CAACV,sBAAL,CAA6B,CACzB,IAAI+W,aAEJ/W,uBAAA,CAAyBA,QAAQ,CAAChd,QAAD,CAAU,CACvC+zB,aAAA,CAAgB1W,UAAA,CAAW,QAAQ,EAAG,CAClCrd,QAAA,CAASzR,MAAOkE,CAAAA,GAAP,EAAT,CADkC,CAAtB;AAEb,GAFa,CAEN,EAFM,CADuB,CAM3C6qB,sBAAA,CAAwBA,QAAQ,EAAG,CAC/B0W,YAAA,CAAaD,aAAb,CAD+B,CATV,CAmB7BnE,MAAOniC,CAAAA,MAAP,CAAgBwmC,QAAQ,CAACnzB,OAAD,CAAU,CAe1BozB,OAAAA,CAAS3lC,MAAOO,CAAAA,MAAP,CAdEyW,CACXkf,IAAK,EADMlf,CAEXuF,WAAY,CAFDvF,CAGX4uB,gBAAiB,EAHN5uB,CAIX6uB,iBAAkB,CAJP7uB,CAKX8uB,aAAc,CALH9uB,CAMX4Y,aAAc,EANH5Y,CAOX+uB,SAAU,IAPC/uB,CAQXgvB,cAAe,CARJhvB,CASXyY,eAAgB,IATLzY,CAUXivB,QAAS,CAAA,CAVEjvB,CAWXwZ,QAAS,CAAA,CAXExZ,CAcF,CAAwBzE,OAAxB,CAEbozB,QAAO32B,CAAAA,KAAP,CAAe22B,OAAO32B,CAAAA,KAAtB,EAA+B,GAA/B,CAAsC22B,OAAOzP,CAAAA,GAC7CyP,QAAOO,CAAAA,QAAP,CAAkBP,OAAOO,CAAAA,QAAzB,EAAqC,GAArC,CAA4CP,OAAOzP,CAAAA,GACnDyP,QAAOQ,CAAAA,QAAP,CAAkBR,OAAOQ,CAAAA,QAAzB,EAAqC,GAArC,EAA0D,EAA1D,CAA6CR,OAAOzP,CAAAA,GAApD,CACAyP,QAAOzP,CAAAA,GAAP,CAAa,GAAb,CAAoByP,OAAO32B,CAAAA,KAE3B,OAAO22B,QAtBuB,CA8BlCtE,OAAOpP,CAAAA,GAAP;AAAamU,QAAQ,CAACT,MAAD,CAAS/c,MAAT,CAAiB,CAEO,WAAzC,GAAI,MAAO+c,OAAOrL,CAAAA,kBAAlB,GACI1R,MACA,CADS+c,MACT,CAAAA,MAAA,CAAStE,MAAOniC,CAAAA,MAAP,EAFb,CAKCsZ,UAASA,OAAM,CAAC4Z,IAAD,CAAM,CAClBuT,MAAOlW,CAAAA,cAAP,CAAwBhB,sBAAA,CAAuBjW,MAAvB,CAEpB4Z,KAAJ,EAAYuT,MAAOnV,CAAAA,OAAnB,EACI6Q,MAAOgF,CAAAA,IAAP,CAAYV,MAAZ,CAAoB/c,MAApB,CAA4BwJ,IAA5B,CAJc,CAArB5Z,CAAD,EAQA,OAAOmtB,OAf2B,CA2BtCtE,OAAOgF,CAAAA,IAAP,CAAcC,QAAQ,CAACX,MAAD,CAAS/c,MAAT,CAAiBwJ,IAAjB,CAAuB,CAAA,IACrC1C,OAAS9G,MAAO8G,CAAAA,MADqB,CAErCnT,WAAa,CAFwB,CAMrCrK,MAAQ,CACRyO,UAAW+O,MAAO/O,CAAAA,SADV,CAIZtP,OAAOW,CAAAA,OAAP,CAAe2zB,MAAf,CAAuB,YAAvB,CAAqCzzB,KAArC,CAEA,IAAIyzB,MAAOM,CAAAA,OAAX,CAEI,IAAAj3B,MAAQ22B,MAAO32B,CAAAA,KAFnB,KAKIA,MAgBA,CAhBSojB,IAgBT,CAhBgBuT,MAAOI,CAAAA,QAgBvB,EAhBoCJ,MAAO32B,CAAAA,KAgB3C;AAfA22B,MAAOI,CAAAA,QAeP,CAfkB3T,IAelB,CAZAuT,MAAO/V,CAAAA,YAAatuB,CAAAA,IAApB,CAAyB0N,KAAzB,CAYA,CAXA22B,MAAO/V,CAAAA,YAWP,CAXsB+V,MAAO/V,CAAAA,YAAa9tB,CAAAA,KAApB,CAA0B,CAAC6jC,MAAOC,CAAAA,eAAlC,CAWtB,CAVA52B,KAUA,CAVQzM,IAAKuB,CAAAA,GAAIoB,CAAAA,KAAT,CAAe,IAAf,CAAqBygC,MAAO/V,CAAAA,YAA5B,CAUR,CAPA5gB,KAOA,CAPQA,KAAA,CAAQ22B,MAAOO,CAAAA,QAAf,CAA0BP,MAAOO,CAAAA,QAAjC,CAA4Cl3B,KAOpD,CANAA,KAMA,CANQA,KAAA,CAAQ22B,MAAOQ,CAAAA,QAAf,CAA0BR,MAAOQ,CAAAA,QAAjC,CAA4Cn3B,KAMpD,CAHAuN,UAGA,CAHavN,KAGb,CAHqB22B,MAAO32B,CAAAA,KAG5B,CAAA22B,MAAO32B,CAAAA,KAAP,CAAeA,KAIU,EAA7B,GAAI22B,MAAOK,CAAAA,aAAX,GACIzpB,UADJ,EACkBmT,MAAOnX,CAAAA,SADzB,CACqCotB,MAAOK,CAAAA,aAD5C,CAGyB,EAAzB,GAAItW,MAAOnX,CAAAA,SAAX,GACIgE,UADJ,CACiB,CADjB,CAGAopB,OAAOK,CAAAA,aAAP,CAAuBtW,MAAOnX,CAAAA,SAC9BotB,OAAOppB,CAAAA,UAAP,CAAoBA,UAGpBopB;MAAOG,CAAAA,YAAP,EAAuB,CACe,IAAtC,EAAI1T,IAAJ,CAAWuT,MAAOE,CAAAA,gBAAlB,GACIF,MAAOzP,CAAAA,GAEP,EAFqC9D,IAErC,CAF4CuT,MAAOE,CAAAA,gBAEnD,EAFuE,GAEvE,CAFaF,MAAOG,CAAAA,YAEpB,CADAH,MAAOE,CAAAA,gBACP,CAD0BzT,IAC1B,CAAAuT,MAAOG,CAAAA,YAAP,CAAsB,CAH1B,CAMAz0B,OAAOW,CAAAA,OAAP,CAAe2zB,MAAf,CAAuB,MAAvB,CAA+BzzB,KAA/B,CAGAb,OAAOW,CAAAA,OAAP,CAAe2zB,MAAf,CAAuB,cAAvB,CAAuCzzB,KAAvC,CACA+nB,OAAOrxB,CAAAA,MAAP,CAAcggB,MAAd,CAAsB5Z,KAAtB,CAA6BuN,UAA7B,CACAlL,OAAOW,CAAAA,OAAP,CAAe2zB,MAAf,CAAuB,aAAvB,CAAsCzzB,KAAtC,CAEAb,OAAOW,CAAAA,OAAP,CAAe2zB,MAAf,CAAuB,WAAvB,CAAoCzzB,KAApC,CA7DyC,CAsE7CmvB,OAAO5O,CAAAA,IAAP,CAAc8T,QAAQ,CAACZ,MAAD,CAAS,CAC3B5W,qBAAA,CAAsB4W,MAAOlW,CAAAA,cAA7B,CAD2B,CAU/B4R,OAAOvK,CAAAA,KAAP,CAAe0P,QAAQ,CAACb,MAAD,CAAS/c,MAAT,CAAiB,CACpCyY,MAAOpP,CAAAA,GAAP,CAAW0T,MAAX;AAAmB/c,MAAnB,CADoC,CAzKhC,CAAX,CAAD,EAtBsD,CAziT5C,CA20TH,QAAQ,CAAC7rB,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAYtD,IAAI+jC,IAAM,EAEVvkC,OAAOC,CAAAA,OAAP,CAAiBskC,GAEJ/jC,oBAAA,CAAoB,CAApB,CACb,KAAIyC,OAASzC,mBAAA,CAAoB,CAApB,CAEZ,UAAQ,EAAG,CAaR+jC,GAAImF,CAAAA,cAAJ,CAAqBC,QAAQ,CAAChlC,IAAD,CAAOilC,YAAP,CAAqB,CACxB,WAAtB,GAAI,MAAOviC,OAAX,EAAuC,YAAvC,EAAuDA,OAAvD,EACIpE,MAAOuF,CAAAA,IAAP,CAAY,qEAAZ,CAF0C,KAM1C7H,CAN0C,CAO1CkpC,aAP0C,CAQ1CC,SAR0C,CAQjB/5B,OAAS,EARQ,CAS1Cg6B,EAT0C,CAStCC,EATsC,CASlCjmC,OAAS,CATyB,CAStB4H,EAAI,CATkB,CASfC,EAAI,CAEnCg+B,aAAA,CAAeA,YAAf,EAA+B,EAE/B,KAAIK,SAAWA,QAAQ,CAACC,EAAD,CAAKC,EAAL,CAASC,WAAT,CAAsB,CAErCC,WAAAA,CAAiC,CAAjCA,GAAaD,WAAbC;AAA2B,CAA3BA,EAAoD,CAApDA,CAAsCD,WAG1C,IAAI,CAACN,SAAL,EAAkBI,EAAlB,EAAwBJ,SAAUn+B,CAAAA,CAAlC,EAAuCw+B,EAAvC,EAA6CL,SAAUl+B,CAAAA,CAAvD,CAA0D,CAClDk+B,SAAJ,EAAiBO,WAAjB,EACIN,EACA,CADKD,SAAUn+B,CAAAA,CACf,CAAAq+B,EAAA,CAAKF,SAAUl+B,CAAAA,CAFnB,EAKIo+B,EALJ,CAIID,EAJJ,CAIS,CAIT,KAAI39B,MAAQ,CACRT,EAAGo+B,EAAHp+B,CAAQu+B,EADA,CAERt+B,EAAGo+B,EAAHp+B,CAAQu+B,EAFA,CAMZ,IAAIE,WAAJ,EAAkB,CAACP,SAAnB,CACIA,SAAA,CAAY19B,KAGhB2D,OAAOxL,CAAAA,IAAP,CAAY6H,KAAZ,CAEAT,EAAA,CAAIo+B,EAAJ,CAASG,EACTt+B,EAAA,CAAIo+B,EAAJ,CAASG,EAtB6C,CALjB,CAA7C,CA+BIG,gBAAkBA,QAAQ,CAACC,OAAD,CAAU,CACpC,IAAIC,QAAUD,OAAQE,CAAAA,mBAAoBC,CAAAA,WAA5B,EAGd,IAAgB,GAAhB,GAAIF,OAAJ,CAAA,CAIA,OAAQA,OAAR,EAEA,KAAK,GAAL,CACA,KAAK,GAAL,CACA,KAAK,GAAL,CACA,KAAK,GAAL,CACA,KAAK,GAAL,CACA,KAAK,GAAL,CACI7+B,CAAA,CAAI4+B,OAAQ5+B,CAAAA,CACZC,EAAA,CAAI2+B,OAAQ3+B,CAAAA,CACZ,MACJ,MAAK,GAAL,CACID,CAAA,CAAI4+B,OAAQ5+B,CAAAA,CACZ,MACJ,MAAK,GAAL,CACIC,CAAA,CAAI2+B,OAAQ3+B,CAAAA,CAfhB,CAmBAq+B,QAAA,CAASt+B,CAAT;AAAYC,CAAZ,CAAe2+B,OAAQH,CAAAA,WAAvB,CAvBA,CAJoC,CA+BxC7F,IAAIoG,CAAAA,kBAAJ,CAAuBhmC,IAAvB,CAGA,KAAA8Z,MAAQ9Z,IAAKimC,CAAAA,cAAL,EAGR,KAAAC,SAAW,EACX,KAAKlqC,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBgE,IAAKmmC,CAAAA,WAAYC,CAAAA,aAAjC,CAAgDpqC,CAAhD,EAAqD,CAArD,CACIkqC,QAAStmC,CAAAA,IAAT,CAAcI,IAAKmmC,CAAAA,WAAYE,CAAAA,OAAjB,CAAyBrqC,CAAzB,CAAd,CAKJ,KAHAkpC,aAGA,CAHgBgB,QAASziC,CAAAA,MAAT,EAGhB,CAAOrE,MAAP,CAAgB0a,KAAhB,CAAA,CAAuB,CAEnBwsB,CAAA,CAAetmC,IAAKumC,CAAAA,kBAAL,CAAwBnnC,MAAxB,CACfwmC,EAAA,CAAUM,QAAA,CAASI,CAAT,CAGV,IAAIV,CAAJ,EAAeY,WAAf,CAA4B,CACxB,IAAA,CAAOtB,aAAc9lC,CAAAA,MAArB,EAA+B8lC,aAAA,CAAc,CAAd,CAA/B,EAAmDU,CAAnD,CAAA,CACID,eAAA,CAAgBT,aAAcj9B,CAAAA,KAAd,EAAhB,CAEJ,KAAAu+B,YAAcZ,CAJU,CAS5B,OAAQA,CAAQE,CAAAA,mBAAoBC,CAAAA,WAA5B,EAAR,EAEA,KAAK,GAAL,CACA,KAAK,GAAL,CACA,KAAK,GAAL,CACA,KAAK,GAAL,CACA,KAAK,GAAL,CACIt+B,CACA;AADQzH,IAAKymC,CAAAA,gBAAL,CAAsBrnC,MAAtB,CACR,CAAAkmC,QAAA,CAAS79B,CAAMT,CAAAA,CAAf,CAAkBS,CAAMR,CAAAA,CAAxB,CAA2B,CAA3B,CARJ,CAcA7H,MAAA,EAAU6lC,YA7BS,CAiClBjpC,CAAA,CAAI,CAAT,KAAY0qC,IAAZ,CAAiBxB,aAAc9lC,CAAAA,MAA/B,CAAuCpD,CAAvC,CAA2C0qC,IAA3C,CAA+C,EAAE1qC,CAAjD,CACI2pC,eAAA,CAAgBT,aAAA,CAAclpC,CAAd,CAAhB,CAEJ,OAAOoP,OA5HuC,CA+HlDw0B,IAAIoG,CAAAA,kBAAJ,CAAyBW,QAAQ,CAAC3mC,IAAD,CAAO,CAQpC,IARoC,IAKhC4mC,EALgC,CAK5BC,EAL4B,CAKxB3lB,EALwB,CAKpB4lB,EALoB,CAKhB3lB,EALgB,CAKZ4lB,EALY,CAKRC,KAAOhnC,IAAKmmC,CAAAA,WALJ,CAMhCn/B,EAAI,CAN4B,CAMzBC,EAAI,CANqB,CAMlBggC,IAAMD,IAAKZ,CAAAA,aANO,CAQ3BpqC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBirC,GAApB,CAAyB,EAAEjrC,CAA3B,CAA8B,CAAA,IACtBkrC,IAAMF,IAAKX,CAAAA,OAAL,CAAarqC,CAAb,CADgB,CAEtB6pC,QAAUqB,GAAIpB,CAAAA,mBAElB,IAAI,aAAc1Z,CAAAA,IAAd,CAAmByZ,OAAnB,CAAJ,CACQ,GACJ,EADWqB,IACX,GADgBlgC,CAChB,CADoBkgC,GAAIlgC,CAAAA,CACxB,EAAI,GAAJ,EAAWkgC,IAAX,GAAgBjgC,CAAhB,CAAoBigC,GAAIjgC,CAAAA,CAAxB,CAFJ,KAWI,QAPI,IAOI4+B,EAPIqB,IAOJrB,GAPS3kB,EAOT2kB,CAPc7+B,CAOd6+B,CAPkBqB,GAAIhmB,CAAAA,EAOtB2kB,EANJ,IAMIA,EANIqB,IAMJrB,GANS1kB,EAMT0kB,CANc7+B,CAMd6+B,CANkBqB,GAAI/lB,CAAAA,EAMtB0kB,EALJ,IAKIA,EALIqB,IAKJrB;CALSiB,EAKTjB,CALc5+B,CAKd4+B,CALkBqB,GAAIJ,CAAAA,EAKtBjB,EAJJ,IAIIA,EAJIqB,IAIJrB,GAJSkB,EAITlB,CAJc5+B,CAId4+B,CAJkBqB,GAAIH,CAAAA,EAItBlB,EAHJ,GAGIA,EAHGqB,IAGHrB,GAHQ7+B,CAGR6+B,EAHaqB,GAAIlgC,CAAAA,CAGjB6+B,EAFJ,GAEIA,EAFGqB,IAEHrB,GAFQ5+B,CAER4+B,EAFaqB,GAAIjgC,CAAAA,CAEjB4+B,EAAAA,OAAR,EAEA,KAAK,GAAL,CACImB,IAAKG,CAAAA,WAAL,CAAiBnnC,IAAKonC,CAAAA,yBAAL,CAA+BpgC,CAA/B,CAAkCC,CAAlC,CAAjB,CAAuDjL,CAAvD,CACA,MACJ,MAAK,GAAL,CACIgrC,IAAKG,CAAAA,WAAL,CAAiBnnC,IAAKqnC,CAAAA,yBAAL,CAA+BrgC,CAA/B,CAAkCC,CAAlC,CAAjB,CAAuDjL,CAAvD,CACA,MACJ,MAAK,GAAL,CACIgrC,IAAKG,CAAAA,WAAL,CAAiBnnC,IAAKsnC,CAAAA,mCAAL,CAAyCtgC,CAAzC,CAAjB,CAA8DhL,CAA9D,CACA,MACJ,MAAK,GAAL,CACIgrC,IAAKG,CAAAA,WAAL,CAAiBnnC,IAAKunC,CAAAA,iCAAL,CAAuCtgC,CAAvC,CAAjB,CAA4DjL,CAA5D,CACA,MACJ,MAAK,GAAL,CACIgrC,IAAKG,CAAAA,WAAL,CAAiBnnC,IAAKwnC,CAAAA,+BAAL,CAAqCxgC,CAArC,CAAwCC,CAAxC,CAA2Cia,EAA3C,CAA+C4lB,EAA/C,CAAmD3lB,EAAnD,CAAuD4lB,EAAvD,CAAjB,CAA6E/qC,CAA7E,CACA,MACJ,MAAK,GAAL,CACIgrC,IAAKG,CAAAA,WAAL,CAAiBnnC,IAAKynC,CAAAA,qCAAL,CAA2CzgC,CAA3C;AAA8CC,CAA9C,CAAiDka,EAAjD,CAAqD4lB,EAArD,CAAjB,CAA2E/qC,CAA3E,CACA,MACJ,MAAK,GAAL,CACIgrC,IAAKG,CAAAA,WAAL,CAAiBnnC,IAAK0nC,CAAAA,mCAAL,CAAyC1gC,CAAzC,CAA4CC,CAA5C,CAA+Cia,EAA/C,CAAmD4lB,EAAnD,CAAjB,CAAyE9qC,CAAzE,CACA,MACJ,MAAK,GAAL,CACIgrC,IAAKG,CAAAA,WAAL,CAAiBnnC,IAAK2nC,CAAAA,yCAAL,CAA+C3gC,CAA/C,CAAkDC,CAAlD,CAAjB,CAAuEjL,CAAvE,CACA,MACJ,MAAK,GAAL,CACIgrC,IAAKG,CAAAA,WAAL,CAAiBnnC,IAAK4nC,CAAAA,sBAAL,CAA4B5gC,CAA5B,CAA+BC,CAA/B,CAAkCigC,GAAIW,CAAAA,EAAtC,CAA0CX,GAAIY,CAAAA,EAA9C,CAAkDZ,GAAIl+B,CAAAA,KAAtD,CAA6Dk+B,GAAIa,CAAAA,YAAjE,CAA+Eb,GAAIc,CAAAA,SAAnF,CAAjB,CAAgHhsC,CAAhH,CACA,MACJ,MAAK,GAAL,CACA,KAAK,GAAL,CACIgL,CACA,CADI4/B,EACJ,CAAA3/B,CAAA,CAAI4/B,EAhCR,CAsCJ,GAAe,GAAf,EAAIhB,OAAJ,EAAiC,GAAjC,EAAsBA,OAAtB,CACIe,EACA,CADK5/B,CACL,CAAA6/B,EAAA,CAAK5/B,CAvDiB,CARM,CA5IhC,CAAX,CAAD,EAnBsD,CA30T5C,CAkjUH,QAAQ,CAAC5L,MAAD,CAASC,OAAT,CAAkBO,mBAAlB,CAAuC,CAgBlDgkC,OAAAA,CAAQ,EAEZxkC,OAAOC,CAAAA,OAAP,CAAiBukC,OAEbnvB,OAAAA,CAAY7U,mBAAA,CAAoB,CAApB,CACHA,oBAAA,CAAoB,CAApB,CAOTgkC;OAAMriC,CAAAA,MAAN,CAAekT,MAAUlT,CAAAA,MACzBqiC,QAAM51B,CAAAA,GAAN,CAAYyG,MAAUzG,CAAAA,GACtB41B,QAAM1tB,CAAAA,MAAN,CAAezB,MAAUyB,CAAAA,MACzB0tB,QAAMtsB,CAAAA,KAAN,CAAc7C,MAAU6C,CAAAA,KACxBssB,QAAM5tB,CAAAA,YAAN,CAAqBvB,MAAUuB,CAAAA,YAC/B4tB,QAAM9tB,CAAAA,OAAN,CAAgBrB,MAAUqB,CAAAA,OAC1B8tB,QAAM7tB,CAAAA,aAAN,CAAsBtB,MAAUsB,CAAAA,aAlCkB,CAljU5C,CAtFM,CADI,CATpB,CA5BuG;",
"sources":["node_modules/matter-js/build/matter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$matter_js$build$matter\"] = function(global,require,module,exports) {\n/*!\n * matter-js 0.17.1 by @liabru\n * http://brm.io/matter-js/\n * License MIT\n * \n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Matter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Matter\"] = factory();\n\telse\n\t\troot[\"Matter\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 22);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n    Common._warnedOnce = {};\n    Common._decomp = null;\n    \n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result is in milliseconds and will use high-resolution timing if available.\n     * @method now\n     * @return {number} the current timestamp in milliseconds\n     */\n    Common.now = function() {\n        if (typeof window !== 'undefined' && window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        if (Date.now) {\n            return Date.now();\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Uses `Common.warn` to log the given message one time only.\n     * @method warnOnce\n     * @param ...objs {} The objects to log.\n     */\n    Common.warnOnce = function() {\n        var message = Array.prototype.slice.call(arguments).join(' ');\n\n        if (!Common._warnedOnce[message]) {\n            Common.warn(message);\n            Common._warnedOnce[message] = true;\n        }\n    };\n\n    /**\n     * Shows a deprecated console warning when the function on the given object is called.\n     * The target function will be replaced with a new function that first shows the warning\n     * and then calls the original function.\n     * @method deprecated\n     * @param {object} obj The object or module\n     * @param {string} name The property name of the function on obj\n     * @param {string} warning The one-time message to show if the function is called\n     */\n    Common.deprecated = function(obj, prop, warning) {\n        obj[prop] = Common.chain(function() {\n            Common.warnOnce('\ud83d\udd05 deprecated \ud83d\udd05', warning);\n        }, obj[prop]);\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n    /**\n     * Provide the [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module to enable\n     * concave vertex decomposition support when using `Bodies.fromVertices` e.g. `Common.setDecomp(require('poly-decomp'))`.\n     * @method setDecomp\n     * @param {} decomp The [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module.\n     */\n    Common.setDecomp = function(decomp) {\n        Common._decomp = decomp;\n    };\n\n    /**\n     * Returns the [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module provided through `Common.setDecomp`,\n     * otherwise returns the global `decomp` if set.\n     * @method getDecomp\n     * @return {} The [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module if provided.\n     */\n    Common.getDecomp = function() {\n        // get user provided decomp if set\n        var decomp = Common._decomp;\n\n        try {\n            // otherwise from window global\n            if (!decomp && typeof window !== 'undefined') {\n                decomp = window.decomp;\n            }\n    \n            // otherwise from node global\n            if (!decomp && typeof global !== 'undefined') {\n                decomp = global.decomp;\n            }\n        } catch (e) {\n            // decomp not available\n            decomp = null;\n        }\n\n        return decomp;\n    };\n})();\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([-\\d.e]+)[\\s,]*([-\\d.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        var events = object.events;\n        \n        if (events && Common.keys(events).length > 0) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* A composite is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite` objects.\n*\n* They are a container that can represent complex objects made of multiple parts, even if they are not physically connected.\n* A composite could contain anything from a single body all the way up to a whole world.\n* \n* When making any changes to composites, use the included functions rather than changing their properties directly.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = __webpack_require__(4);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\nvar Body = __webpack_require__(6);\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic single or multi-add function. Adds a single or an array of body(s), constraint(s) or composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {object|array} object A single or an array of body(s), constraint(s) or composite(s)\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {object|array} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n            .concat(Composite.allConstraints(composite))\n            .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Sleeping = __webpack_require__(7);\nvar Render = __webpack_require__(16);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\nvar Axes = __webpack_require__(10);\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                strokeStyle: null,\n                fillStyle: null,\n                lineWidth: null,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                }\n            },\n            events: null,\n            bounds: null,\n            chamfer: null,\n            circleRadius: 0,\n            positionPrev: null,\n            anglePrev: 0,\n            parent: null,\n            axes: null,\n            area: 0,\n            mass: 0,\n            inertia: 0,\n            _original: null\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#14151f' : Common.choose(['#f19648', '#f5d259', '#f55a3c', '#063e7b', '#ececd1'])),\n            defaultStrokeStyle = body.isStatic ? '#555' : '#ccc',\n            defaultLineWidth = body.isStatic && body.render.fillStyle === null ? 1 : 0;\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.lineWidth = body.render.lineWidth || defaultLineWidth;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            if (!Object.prototype.hasOwnProperty.call(settings, property))\n                continue;\n\n            value = settings[property];\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            case 'centre':\n                Body.setCentre(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                part._original = null;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Set the centre of mass of the body. \n     * The `centre` is a vector in world-space unless `relative` is set, in which case it is a translation.\n     * The centre of mass is the point the body rotates about and can be used to simulate non-uniform density.\n     * This is equal to moving `body.position` but not the `body.vertices`.\n     * Invalid if the `centre` falls outside the body's convex hull.\n     * @method setCentre\n     * @param {body} body\n     * @param {vector} centre\n     * @param {bool} relative\n     */\n    Body.setCentre = function(body, centre, relative) {\n        if (!relative) {\n            body.positionPrev.x = centre.x - (body.position.x - body.positionPrev.x);\n            body.positionPrev.y = centre.y - (body.position.y - body.positionPrev.y);\n            body.position.x = centre.x;\n            body.position.y = centre.y;\n        } else {\n            body.positionPrev.x += centre.x;\n            body.positionPrev.y += centre.y;\n            body.position.x += centre.x;\n            body.position.y += centre.y;\n        }\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = __webpack_require__(4);\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Sleeping = __webpack_require__(7);\nvar Bounds = __webpack_require__(1);\nvar Axes = __webpack_require__(10);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /**\n     * Returns the world-space position of `constraint.pointA`, accounting for `constraint.bodyA`.\n     * @method pointAWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n    Constraint.pointAWorld = function(constraint) {\n        return {\n            x: (constraint.bodyA ? constraint.bodyA.position.x : 0) + constraint.pointA.x,\n            y: (constraint.bodyA ? constraint.bodyA.position.y : 0) + constraint.pointA.y\n        };\n    };\n\n    /**\n     * Returns the world-space position of `constraint.pointB`, accounting for `constraint.bodyB`.\n     * @method pointBWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n    Constraint.pointBWorld = function(constraint) {\n        return {\n            x: (constraint.bodyB ? constraint.bodyB.position.x : 0) + constraint.pointB.x,\n            y: (constraint.bodyB ? constraint.bodyB.position.y : 0) + constraint.pointB.y\n        };\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = __webpack_require__(17);\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            confirmedActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = __webpack_require__(3);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(6);\nvar Bounds = __webpack_require__(1);\nvar Vector = __webpack_require__(2);\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Utility to create a compound body based on set(s) of vertices.\n     * \n     * _Note:_ To optionally enable automatic concave vertices decomposition the [poly-decomp](https://github.com/schteppe/poly-decomp.js) \n     * package must be first installed and provided see `Common.setDecomp`, otherwise the convex hull of each vertex set will be used.\n     * \n     * The resulting vertices are reorientated about their centre of mass,\n     * and offset such that `body.position` corresponds to this point.\n     * \n     * The resulting offset may be found if needed by subtracting `body.bounds` from the original input bounds.\n     * To later move the centre of mass see `Body.setCentre`.\n     * \n     * Note that automatic conconcave decomposition results are not always optimal. \n     * For best results, simplify the input vertices as much as possible first.\n     * By default this function applies some addtional simplification to help.\n     * \n     * Some outputs may also require further manual processing afterwards to be robust.\n     * In particular some parts may need to be overlapped to avoid collision gaps.\n     * Thin parts and sharp points should be avoided or removed where possible.\n     *\n     * The options parameter object specifies any `Matter.Body` properties you wish to override the defaults.\n     * \n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param {array} vertexSets One or more arrays of vertex points e.g. `[[{ x: 0, y: 0 }...], ...]`.\n     * @param {object} [options] The body options.\n     * @param {bool} [flagInternal=false] Optionally marks internal edges with `isInternal`.\n     * @param {number} [removeCollinear=0.01] Threshold when simplifying vertices along the same edge.\n     * @param {number} [minimumArea=10] Threshold when removing small parts.\n     * @param {number} [removeDuplicatePoints=0.01] Threshold when simplifying nearby vertices.\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea, removeDuplicatePoints) {\n        var decomp = Common.getDecomp(),\n            canDecomp,\n            body,\n            parts,\n            isConvex,\n            isConcave,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        // check decomp is as expected\n        canDecomp = Boolean(decomp && decomp.quickDecomp);\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n        removeDuplicatePoints = typeof removeDuplicatePoints !== 'undefined' ? removeDuplicatePoints : 0.01;\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n            isConcave = !isConvex;\n\n            if (isConcave && !canDecomp) {\n                Common.warnOnce(\n                    'Bodies.fromVertices: Install the \\'poly-decomp\\' library and use Common.setDecomp or provide \\'decomp\\' as a global to decompose concave vertices.'\n                );\n            }\n\n            if (isConvex || !canDecomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n                if (removeDuplicatePoints !== false && decomp.removeDuplicatePoints)\n                    decomp.removeDuplicatePoints(concave, removeDuplicatePoints);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n\n            // offset such that body.position is at the centre off mass\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = parseInt(mouse.element.getAttribute('data-pixel-ratio'), 10) || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = __webpack_require__(14);\nvar Pair = __webpack_require__(9);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth; \n\n        // find support points, there is always either exactly one or two\n        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    SAT._overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            SAT._projectToAxis(projectionA, verticesA, axis);\n            SAT._projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    SAT._projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    SAT._findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick \u2705 indicates a dependency was resolved and installed.\n     * - An orange diamond \ud83d\udd36 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross \u274c indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('\u274c ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('\ud83d\udd36 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('\u2705 ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Greater than ranges e.g. `>1.2.3`\n     * - Greater than or equal ranges e.g. `>=1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^(\\*)|(\\^|~|>=|>)?\\s*((\\d+)\\.(\\d+)\\.(\\d+))(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var parts = pattern.exec(range);\n        var major = Number(parts[4]);\n        var minor = Number(parts[5]);\n        var patch = Number(parts[6]);\n\n        return {\n            isRange: Boolean(parts[1] || parts[2]),\n            version: parts[3],\n            range: range,\n            operator: parts[1] || parts[2] || '',\n            major: major,\n            minor: minor,\n            patch: patch,\n            parts: [major, minor, patch],\n            prerelease: parts[7],\n            number: major * 1e8 + minor * 1e4 + patch\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var r = Plugin.versionParse(range),\n            v = Plugin.versionParse(version);\n\n        if (r.isRange) {\n            if (r.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (r.operator === '>') {\n                return v.number > r.number;\n            }\n\n            if (r.operator === '>=') {\n                return v.number >= r.number;\n            }\n\n            if (r.operator === '~') {\n                return v.major === r.major && v.minor === r.minor && v.patch >= r.patch;\n            }\n\n            if (r.operator === '^') {\n                if (r.major > 0) {\n                    return v.major === r.major && v.number >= r.number;\n                }\n\n                if (r.minor > 0) {\n                    return v.minor === r.minor && v.patch >= r.patch;\n                }\n\n                return v.patch === r.patch;\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Render` module is a simple canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = __webpack_require__(0);\nvar Composite = __webpack_require__(5);\nvar Bounds = __webpack_require__(1);\nvar Events = __webpack_require__(4);\nvar Vector = __webpack_require__(2);\nvar Mouse = __webpack_require__(12);\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    Render._goodFps = 30;\n    Render._goodDelta = 1000 / 60;\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            timing: {\n                historySize: 60,\n                delta: 0,\n                deltaHistory: [],\n                lastTime: 0,\n                lastTimestamp: 0,\n                lastElapsed: 0,\n                timestampElapsed: 0,\n                timestampElapsedHistory: [],\n                engineDeltaHistory: [],\n                engineElapsedHistory: [],\n                elapsedHistory: []\n            },\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#14151f',\n                wireframeBackground: '#14151f',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showStats: false,\n                showPerformance: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            \n            _updateTiming(render, time);\n\n            Render.world(render, time);\n\n            if (render.options.showStats || render.options.showDebug) {\n                Render.stats(render, render.context, time);\n            }\n\n            if (render.options.showPerformance || render.options.showDebug) {\n                Render.performance(render, render.context, time);\n            }\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.setTransform(\n            render.options.pixelRatio / boundsScaleX, 0, 0, \n            render.options.pixelRatio / boundsScaleY, 0, 0\n        );\n        \n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render, time) {\n        var startTime = Common.now(),\n            engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            timing = render.timing;\n\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.options.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.options.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n\n            if (render.options.pixelRatio !== 1) {\n                render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n            }\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase)\n            Render.grid(render, engine.grid, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n\n        // log the time elapsed computing this update\n        timing.lastElapsed = Common.now() - startTime;\n    };\n\n    /**\n     * Renders statistics about the engine and world useful for debugging.\n     * @private\n     * @method stats\n     * @param {render} render\n     * @param {RenderingContext} context\n     * @param {Number} time\n     */\n    Render.stats = function(render, context, time) {\n        var engine = render.engine,\n            world = engine.world,\n            bodies = Composite.allBodies(world),\n            parts = 0,\n            width = 55,\n            height = 44,\n            x = 0,\n            y = 0;\n        \n        // count parts\n        for (var i = 0; i < bodies.length; i += 1) {\n            parts += bodies[i].parts.length;\n        }\n\n        // sections\n        var sections = {\n            'Part': parts,\n            'Body': bodies.length,\n            'Cons': Composite.allConstraints(world).length,\n            'Comp': Composite.allComposites(world).length,\n            'Pair': engine.pairs.list.length\n        };\n\n        // background\n        context.fillStyle = '#0e0f19';\n        context.fillRect(x, y, width * 5.5, height);\n\n        context.font = '12px Arial';\n        context.textBaseline = 'top';\n        context.textAlign = 'right';\n\n        // sections\n        for (var key in sections) {\n            var section = sections[key];\n            // label\n            context.fillStyle = '#aaa';\n            context.fillText(key, x + width, y + 8);\n\n            // value\n            context.fillStyle = '#eee';\n            context.fillText(section, x + width, y + 26);\n\n            x += width;\n        }\n    };\n\n    /**\n     * Renders engine and render performance information.\n     * @private\n     * @method performance\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.performance = function(render, context) {\n        var engine = render.engine,\n            timing = render.timing,\n            deltaHistory = timing.deltaHistory,\n            elapsedHistory = timing.elapsedHistory,\n            timestampElapsedHistory = timing.timestampElapsedHistory,\n            engineDeltaHistory = timing.engineDeltaHistory,\n            engineElapsedHistory = timing.engineElapsedHistory,\n            lastEngineDelta = engine.timing.lastDelta;\n        \n        var deltaMean = _mean(deltaHistory),\n            elapsedMean = _mean(elapsedHistory),\n            engineDeltaMean = _mean(engineDeltaHistory),\n            engineElapsedMean = _mean(engineElapsedHistory),\n            timestampElapsedMean = _mean(timestampElapsedHistory),\n            rateMean = (timestampElapsedMean / deltaMean) || 0,\n            fps = (1000 / deltaMean) || 0;\n\n        var graphHeight = 4,\n            gap = 12,\n            width = 60,\n            height = 34,\n            x = 10,\n            y = 69;\n\n        // background\n        context.fillStyle = '#0e0f19';\n        context.fillRect(0, 50, gap * 4 + width * 5 + 22, height);\n\n        // show FPS\n        Render.status(\n            context, x, y, width, graphHeight, deltaHistory.length, \n            Math.round(fps) + ' fps', \n            fps / Render._goodFps,\n            function(i) { return (deltaHistory[i] / deltaMean) - 1; }\n        );\n\n        // show engine delta\n        Render.status(\n            context, x + gap + width, y, width, graphHeight, engineDeltaHistory.length,\n            lastEngineDelta.toFixed(2) + ' dt', \n            Render._goodDelta / lastEngineDelta,\n            function(i) { return (engineDeltaHistory[i] / engineDeltaMean) - 1; }\n        );\n\n        // show engine update time\n        Render.status(\n            context, x + (gap + width) * 2, y, width, graphHeight, engineElapsedHistory.length,\n            engineElapsedMean.toFixed(2) + ' ut', \n            1 - (engineElapsedMean / Render._goodFps),\n            function(i) { return (engineElapsedHistory[i] / engineElapsedMean) - 1; }\n        );\n\n        // show render time\n        Render.status(\n            context, x + (gap + width) * 3, y, width, graphHeight, elapsedHistory.length,\n            elapsedMean.toFixed(2) + ' rt', \n            1 - (elapsedMean / Render._goodFps),\n            function(i) { return (elapsedHistory[i] / elapsedMean) - 1; }\n        );\n\n        // show effective speed\n        Render.status(\n            context, x + (gap + width) * 4, y, width, graphHeight, timestampElapsedHistory.length, \n            rateMean.toFixed(2) + ' x', \n            rateMean * rateMean * rateMean,\n            function(i) { return (((timestampElapsedHistory[i] / deltaHistory[i]) / rateMean) || 0) - 1; }\n        );\n    };\n\n    /**\n     * Renders a label, indicator and a chart.\n     * @private\n     * @method status\n     * @param {RenderingContext} context\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} count\n     * @param {string} label\n     * @param {string} indicator\n     * @param {function} plotY\n     */\n    Render.status = function(context, x, y, width, height, count, label, indicator, plotY) {\n        // background\n        context.strokeStyle = '#888';\n        context.fillStyle = '#444';\n        context.lineWidth = 1;\n        context.fillRect(x, y + 7, width, 1);\n\n        // chart\n        context.beginPath();\n        context.moveTo(x, y + 7 - height * Common.clamp(0.4 * plotY(0), -2, 2));\n        for (var i = 0; i < width; i += 1) {\n            context.lineTo(x + i, y + 7 - (i < count ? height * Common.clamp(0.4 * plotY(i), -2, 2) : 0));\n        }\n        context.stroke();\n\n        // indicator\n        context.fillStyle = 'hsl(' + Common.clamp(25 + 95 * indicator, 0, 120) + ',100%,60%)';\n        context.fillRect(x, y - 7, 4, 4);\n\n        // label\n        context.font = '12px Arial';\n        context.textBaseline = 'middle';\n        context.textAlign = 'right';\n        context.fillStyle = '#eee';\n        context.fillText(label, x + width, y - 5);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                            (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                grid.bucketWidth,\n                grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                    Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Updates render timing.\n     * @method _updateTiming\n     * @private\n     * @param {render} render\n     * @param {number} time\n     */\n    var _updateTiming = function(render, time) {\n        var engine = render.engine,\n            timing = render.timing,\n            historySize = timing.historySize,\n            timestamp = engine.timing.timestamp;\n\n        timing.delta = time - timing.lastTime || Render._goodDelta;\n        timing.lastTime = time;\n\n        timing.timestampElapsed = timestamp - timing.lastTimestamp || 0;\n        timing.lastTimestamp = timestamp;\n\n        timing.deltaHistory.unshift(timing.delta);\n        timing.deltaHistory.length = Math.min(timing.deltaHistory.length, historySize);\n\n        timing.engineDeltaHistory.unshift(engine.timing.lastDelta);\n        timing.engineDeltaHistory.length = Math.min(timing.engineDeltaHistory.length, historySize);\n\n        timing.timestampElapsedHistory.unshift(timing.timestampElapsed);\n        timing.timestampElapsedHistory.length = Math.min(timing.timestampElapsedHistory.length, historySize);\n\n        timing.engineElapsedHistory.unshift(engine.timing.lastElapsed);\n        timing.engineElapsedHistory.length = Math.min(timing.engineElapsedHistory.length, historySize);\n\n        timing.elapsedHistory.unshift(timing.lastElapsed);\n        timing.elapsedHistory.length = Math.min(timing.elapsedHistory.length, historySize);\n    };\n\n    /**\n     * Returns the mean value of the given numbers.\n     * @method _mean\n     * @private\n     * @param {Number[]} values\n     * @return {Number} the mean of given values\n     */\n    var _mean = function(values) {\n        var result = 0;\n        for (var i = 0; i < values.length; i += 1) {\n            result += values[i];\n        }\n        return (result / values.length) || 0;\n    };\n\n    /**\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n    /**\n     * The mouse to render if `render.options.showMousePosition` is enabled.\n     *\n     * @property mouse\n     * @type mouse\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     * See also the `options.pixelRatio` property to change render quality.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     * See also the `options.pixelRatio` property to change render quality.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * The [pixel ratio](https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio) to use when rendering.\n     *\n     * @property options.pixelRatio\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A CSS background color string to use when `render.options.wireframes` is disabled.\n     * This may be also set to `'transparent'` or equivalent.\n     *\n     * @property options.background\n     * @type string\n     * @default '#14151f'\n     */\n\n    /**\n     * A CSS background color string to use when `render.options.wireframes` is enabled.\n     * This may be also set to `'transparent'` or equivalent.\n     *\n     * @property options.wireframeBackground\n     * @type string\n     * @default '#14151f'\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable all debug information overlays together.  \n     * This includes and has priority over the values of:\n     *\n     * - `render.options.showStats`\n     * - `render.options.showPerformance`\n     *\n     * @property options.showDebug\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the engine stats info overlay.  \n     * From left to right, the values shown are:\n     *\n     * - body parts total\n     * - body total\n     * - constraints total\n     * - composites total\n     * - collision pairs total\n     *\n     * @property options.showStats\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable performance charts.  \n     * From left to right, the values shown are:\n     *\n     * - average render frequency (e.g. 60 fps)\n     * - exact engine delta time used for last update (e.g. 16.66ms)\n     * - average engine execution duration (e.g. 5.00ms)\n     * - average render execution duration (e.g. 0.40ms)\n     * - average effective play speed (e.g. '1.00x' is 'real-time')\n     *\n     * Each value is recorded over a fixed sample of past frames (60 frames).\n     *\n     * A chart shown below each value indicates the variance from the average over the sample.\n     * The more stable or fixed the value is the flatter the chart will appear.\n     *\n     * @property options.showPerformance\n     * @type boolean\n     * @default false\n     */\n    \n    /**\n     * A flag to enable or disable rendering entirely.\n     *\n     * @property options.enabled\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to toggle wireframe rendering otherwise solid fill rendering is used.\n     *\n     * @property options.wireframes\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A flag to enable or disable sleeping bodies indicators.\n     *\n     * @property options.showSleeping\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A flag to enable or disable the debug information overlay.\n     *\n     * @property options.showDebug\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the collision broadphase debug overlay.\n     *\n     * @property options.showBroadphase\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body bounds debug overlay.\n     *\n     * @property options.showBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body velocity debug overlay.\n     *\n     * @property options.showVelocity\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body collisions debug overlay.\n     *\n     * @property options.showCollisions\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the collision resolver separations debug overlay.\n     *\n     * @property options.showSeparations\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body axes debug overlay.\n     *\n     * @property options.showAxes\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body positions debug overlay.\n     *\n     * @property options.showPositions\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body angle debug overlay.\n     *\n     * @property options.showAngleIndicator\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body and part ids debug overlay.\n     *\n     * @property options.showIds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body vertex numbers debug overlay.\n     *\n     * @property options.showVertexNumbers\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body convex hulls debug overlay.\n     *\n     * @property options.showConvexHulls\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body internal edges debug overlay.\n     *\n     * @property options.showInternalEdges\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the mouse position debug overlay.\n     *\n     * @property options.showMousePosition\n     * @type boolean\n     * @default false\n     */\n\n})();\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar Sleeping = __webpack_require__(7);\nvar Resolver = __webpack_require__(19);\nvar Detector = __webpack_require__(13);\nvar Pairs = __webpack_require__(20);\nvar Grid = __webpack_require__(21);\nvar Events = __webpack_require__(4);\nvar Composite = __webpack_require__(5);\nvar Constraint = __webpack_require__(8);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(6);\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(options) {\n        options = options || {};\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            grid: null,\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            timing: {\n                timestamp: 0,\n                timeScale: 1,\n                lastDelta: 0,\n                lastElapsed: 0\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        engine.world = options.world || Composite.create({ label: 'World' });\n        engine.grid = Grid.create(options.grid || options.broadphase);\n        engine.pairs = Pairs.create();\n\n        // temporary back compatibility\n        engine.world.gravity = engine.gravity;\n        engine.broadphase = engine.grid;\n        engine.metrics = {};\n        \n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        var startTime = Common.now();\n\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            grid = engine.grid,\n            gridPairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n        timing.lastDelta = delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, engine.gravity);\n\n        // update all body position and rotation by integration\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n\n        // if world is dirty, we must flush the whole grid\n        if (world.isModified)\n            Grid.clear(grid);\n\n        // update the grid buckets based on current bodies\n        Grid.update(grid, allBodies, engine, world.isModified);\n        gridPairs = grid.pairsList;\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = Detector.collisions(gridPairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        // log the time elapsed computing this update\n        engine.timing.lastElapsed = Common.now() - startTime;\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world,\n            bodies = Composite.allBodies(world);\n\n        Pairs.clear(engine.pairs);\n        Grid.clear(engine.grid);\n        Grid.update(engine.grid, bodies, engine, true);\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * A deprecated alias for `Runner.run`, use `Matter.Runner.run(engine)` instead and see `Matter.Runner` for more information.\n     * @deprecated use Matter.Runner.run(engine) instead\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that represents the total execution time elapsed during the last `Engine.update` in milliseconds.\n     * It is updated by timing from the start of the last `Engine.update` call until it ends.\n     *\n     * This value will also include the total execution time of all event handlers directly or indirectly triggered by the engine update.\n     *\n     * @property timing.lastElapsed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that represents the `delta` value used in the last engine update.\n     *\n     * @property timing.lastDelta\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Matter.Grid` instance.\n     *\n     * @property grid\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * Replaced by and now alias for `engine.grid`.\n     *\n     * @deprecated use `engine.grid`\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * The root `Matter.Composite` instance that will contain all bodies, constraints and other composites to be simulated by this engine.\n     *\n     * @property world\n     * @type composite\n     * @default a Matter.Composite instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * The gravity to apply on all bodies in `engine.world`.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n})();\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                Vector.add(bodyA.positionImpulse, \n                    Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = __webpack_require__(9);\nvar Common = __webpack_require__(0);\n\n(function() {\n    \n    Pairs._pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pairsList[i].confirmedActive = false;\n        }\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                    pair.confirmedActive = true;\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && !pair.confirmedActive) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = __webpack_require__(9);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // temporary back compatibility bounds check\n            if (world.bounds && (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y))\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Matter = module.exports = __webpack_require__(23);\r\n\r\nMatter.Axes = __webpack_require__(10);\r\nMatter.Bodies = __webpack_require__(11);\r\nMatter.Body = __webpack_require__(6);\r\nMatter.Bounds = __webpack_require__(1);\r\nMatter.Common = __webpack_require__(0);\r\nMatter.Composite = __webpack_require__(5);\r\nMatter.Composites = __webpack_require__(24);\r\nMatter.Constraint = __webpack_require__(8);\r\nMatter.Contact = __webpack_require__(17);\r\nMatter.Detector = __webpack_require__(13);\r\nMatter.Engine = __webpack_require__(18);\r\nMatter.Events = __webpack_require__(4);\r\nMatter.Grid = __webpack_require__(21);\r\nMatter.Mouse = __webpack_require__(12);\r\nMatter.MouseConstraint = __webpack_require__(25);\r\nMatter.Pair = __webpack_require__(9);\r\nMatter.Pairs = __webpack_require__(20);\r\nMatter.Plugin = __webpack_require__(15);\r\nMatter.Query = __webpack_require__(26);\r\nMatter.Render = __webpack_require__(16);\r\nMatter.Resolver = __webpack_require__(19);\r\nMatter.Runner = __webpack_require__(27);\r\nMatter.SAT = __webpack_require__(14);\r\nMatter.Sleeping = __webpack_require__(7);\r\nMatter.Svg = __webpack_require__(28);\r\nMatter.Vector = __webpack_require__(2);\r\nMatter.Vertices = __webpack_require__(3);\r\nMatter.World = __webpack_require__(29);\r\n\r\n// temporary back compatibility\r\nMatter.Engine.run = Matter.Runner.run;\r\nMatter.Common.deprecated(Matter.Engine, 'run', 'Engine.run \u27a4 use Matter.Runner.run(engine) instead');\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\r\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\r\n*\r\n* @class Matter\r\n*/\r\n\r\nvar Matter = {};\r\n\r\nmodule.exports = Matter;\r\n\r\nvar Plugin = __webpack_require__(15);\r\nvar Common = __webpack_require__(0);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * The library name.\r\n     * @property name\r\n     * @readOnly\r\n     * @type {String}\r\n     */\r\n    Matter.name = 'matter-js';\r\n\r\n    /**\r\n     * The library version.\r\n     * @property version\r\n     * @readOnly\r\n     * @type {String}\r\n     */\r\n    Matter.version =  true ? \"0.17.1\" : undefined;\r\n\r\n    /**\r\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\r\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\r\n     * @property uses\r\n     * @type {Array}\r\n     */\r\n    Matter.uses = [];\r\n\r\n    /**\r\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\r\n     * @property used\r\n     * @readOnly\r\n     * @type {Array}\r\n     */\r\n    Matter.used = [];\r\n\r\n    /**\r\n     * Installs the given plugins on the `Matter` namespace.\r\n     * This is a short-hand for `Plugin.use`, see it for more information.\r\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\r\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\r\n     * @method use\r\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\r\n     */\r\n    Matter.use = function() {\r\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\r\n    };\r\n\r\n    /**\r\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\r\n     * See also docs for `Common.chain`.\r\n     * @method before\r\n     * @param {string} path The path relative to `Matter`\r\n     * @param {function} func The function to chain before the original\r\n     * @return {function} The chained function that replaced the original\r\n     */\r\n    Matter.before = function(path, func) {\r\n        path = path.replace(/^Matter./, '');\r\n        return Common.chainPathBefore(Matter, path, func);\r\n    };\r\n\r\n    /**\r\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\r\n     * See also docs for `Common.chain`.\r\n     * @method after\r\n     * @param {string} path The path relative to `Matter`\r\n     * @param {function} func The function to chain after the original\r\n     * @return {function} The chained function that replaced the original\r\n     */\r\n    Matter.after = function(path, func) {\r\n        path = path.replace(/^Matter./, '');\r\n        return Common.chainPathAfter(Matter, path, func);\r\n    };\r\n\r\n})();\r\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = __webpack_require__(5);\nvar Constraint = __webpack_require__(8);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(6);\nvar Bodies = __webpack_require__(11);\nvar deprecated = Common.deprecated;\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * This has now moved to the [newtonsCradle example](https://github.com/liabru/matter-js/blob/master/examples/newtonsCradle.js), follow that instead as this function is deprecated here.\n     * @deprecated moved to newtonsCradle example\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                    { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n\n    deprecated(Composites, 'newtonsCradle', 'Composites.newtonsCradle \u27a4 moved to newtonsCradle example');\n    \n    /**\n     * This has now moved to the [car example](https://github.com/liabru/matter-js/blob/master/examples/car.js), follow that instead as this function is deprecated here.\n     * @deprecated moved to car example\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    deprecated(Composites, 'car', 'Composites.car \u27a4 moved to car example');\n\n    /**\n     * This has now moved to the [softBody example](https://github.com/liabru/matter-js/blob/master/examples/softBody.js)\n     * and the [cloth example](https://github.com/liabru/matter-js/blob/master/examples/cloth.js), follow those instead as this function is deprecated here.\n     * @deprecated moved to softBody and cloth examples\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n    deprecated(Composites, 'softBody', 'Composites.softBody \u27a4 moved to softBody and cloth examples');\n})();\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = __webpack_require__(3);\nvar Sleeping = __webpack_require__(7);\nvar Mouse = __webpack_require__(12);\nvar Events = __webpack_require__(4);\nvar Detector = __webpack_require__(13);\nvar Constraint = __webpack_require__(8);\nvar Composite = __webpack_require__(5);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = __webpack_require__(2);\nvar SAT = __webpack_require__(14);\nvar Bounds = __webpack_require__(1);\nvar Bodies = __webpack_require__(11);\nvar Vertices = __webpack_require__(3);\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {object[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                        var collision = SAT.collides(part, body);\n\n                        if (collision.collided) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = __webpack_require__(4);\nvar Engine = __webpack_require__(18);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        Events.trigger(runner, 'afterTick', event);\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = __webpack_require__(1);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* This module has now been replaced by `Matter.Composite`.\n*\n* All usage should be migrated to the equivalent functions found on `Matter.Composite`.\n* For example `World.add(world, body)` now becomes `Composite.add(world, body)`.\n*\n* The property `world.gravity` has been moved to `engine.gravity`.\n*\n* For back-compatibility purposes this module will remain as a direct alias to `Matter.Composite` in the short term during migration.\n* Eventually this alias module will be marked as deprecated and then later removed in a future release.\n*\n* @class World\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = __webpack_require__(5);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * See above, aliases for back compatibility only\n     */\n    World.create = Composite.create;\n    World.add = Composite.add;\n    World.remove = Composite.remove;\n    World.clear = Composite.clear;\n    World.addComposite = Composite.addComposite;\n    World.addBody = Composite.addBody;\n    World.addConstraint = Composite.addConstraint;\n\n})();\n\n\n/***/ })\n/******/ ]);\n});\n};"],
"names":["shadow$provide","global","require","module","exports","webpackUniversalModuleDefinition","root","factory","define","amd","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","__webpack_require__.d","name","getter","o","Object","defineProperty","enumerable","get","r","__webpack_require__.r","Symbol","toStringTag","value","t","__webpack_require__.t","mode","__esModule","ns","create","key","bind","n","__webpack_require__.n","getDefault","getModuleExports","__webpack_require__.o","object","property","prototype","hasOwnProperty","p","s","Common","_nextId","_seed","_nowStartTime","Date","_warnedOnce","_decomp","extend","Common.extend","obj","deep","argsStart","deepClone","arguments","length","source","prop","constructor","clone","Common.clone","keys","Common.keys","push","values","Common.values","Common.get","path","begin","end","split","slice","set","Common.set","val","parts","shuffle","Common.shuffle","array","j","Math","floor","random","temp","choose","Common.choose","choices","isElement","Common.isElement","HTMLElement","nodeType","nodeName","isArray","Common.isArray","toString","isFunction","Common.isFunction","isPlainObject","Common.isPlainObject","isString","Common.isString","clamp","Common.clamp","min","max","sign","Common.sign","now","Common.now","window","performance","webkitNow","Common.random","colorToNumber","Common.colorToNumber","colorString","replace","charAt","parseInt","logLevel","log","Common.log","console","apply","concat","Array","info","Common.info","warn","Common.warn","warnOnce","Common.warnOnce","message","join","deprecated","Common.deprecated","warning","chain","nextId","Common.nextId","indexOf","Common.indexOf","haystack","needle","map","Common.map","list","func","mapped","topologicalSort","Common.topologicalSort","graph","result","visited","node","_topologicalSort","Common._topologicalSort","neighbors","neighbor","Common.chain","funcs","_chained","lastResult","args","chainPathBefore","Common.chainPathBefore","base","chainPathAfter","Common.chainPathAfter","setDecomp","Common.setDecomp","decomp","getDecomp","Common.getDecomp","e","Bounds","Bounds.create","vertices","bounds","x","y","update","Bounds.update","velocity","Infinity","vertex","contains","Bounds.contains","point","overlaps","Bounds.overlaps","boundsA","boundsB","translate","Bounds.translate","vector","shift","Bounds.shift","position","deltaX","deltaY","Vector","Vector.create","Vector.clone","magnitude","Vector.magnitude","sqrt","magnitudeSquared","Vector.magnitudeSquared","rotate","Vector.rotate","angle","output","cos","sin","rotateAbout","Vector.rotateAbout","normalise","Vector.normalise","dot","Vector.dot","vectorA","vectorB","cross","Vector.cross","cross3","Vector.cross3","vectorC","add","Vector.add","sub","Vector.sub","mult","Vector.mult","scalar","div","Vector.div","perp","Vector.perp","negate","neg","Vector.neg","Vector.angle","atan2","_temp","Vertices","Vertices.create","points","body","index","isInternal","fromPath","Vertices.fromPath","pathPattern","match","parseFloat","centre","Vertices.centre","area","mean","Vertices.mean","average","Vertices.area","signed","abs","inertia","Vertices.inertia","mass","numerator","denominator","Vertices.translate","Vertices.rotate","vertice","dx","dy","Vertices.contains","nextVertice","scale","Vertices.scale","scaleX","scaleY","delta","chamfer","Vertices.chamfer","radius","quality","qualityMin","qualityMax","newVertices","prevVertex","nextVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","pow","radiusVector","midNormal","scaledVertex","precision","theta","acos","alpha","clockwiseSort","Vertices.clockwiseSort","sort","vertexA","vertexB","isConvex","Vertices.isConvex","flag","k","z","hull","Vertices.hull","upper","lower","pop","Events","on","Events.on","eventNames","callback","names","events","off","Events.off","callbacks","newCallbacks","trigger","Events.trigger","event","eventClone","Composite","Body","Composite.create","options","id","type","parent","isModified","bodies","constraints","composites","label","plugin","setModified","Composite.setModified","composite","updateParents","updateChildren","childComposite","Composite.add","objects","addBody","addConstraint","addComposite","constraint","remove","Composite.remove","removeBody","removeConstraint","removeComposite","Composite.addComposite","compositeA","compositeB","Composite.removeComposite","removeCompositeAt","Composite.removeCompositeAt","splice","Composite.addBody","Composite.removeBody","removeBodyAt","Composite.removeBodyAt","Composite.addConstraint","Composite.removeConstraint","removeConstraintAt","Composite.removeConstraintAt","clear","Composite.clear","keepStatic","filter","isStatic","allBodies","Composite.allBodies","allConstraints","Composite.allConstraints","allComposites","Composite.allComposites","Composite.get","move","Composite.move","rebase","Composite.rebase","Composite.translate","translation","recursive","Composite.rotate","rotation","setPosition","Composite.scale","Composite.bounds","Sleeping","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","Body.create","defaults","force","torque","positionImpulse","constraintImpulse","totalContacts","speed","angularSpeed","angularVelocity","isSensor","isSleeping","motion","sleepThreshold","density","restitution","friction","frictionStatic","frictionAir","collisionFilter","category","mask","group","slop","timeScale","render","visible","opacity","strokeStyle","fillStyle","lineWidth","sprite","xScale","yScale","xOffset","yOffset","circleRadius","positionPrev","anglePrev","axes","_original","defaultFillStyle","defaultStrokeStyle","defaultLineWidth","nextGroup","Body.nextGroup","isNonColliding","nextCategory","Body.nextCategory","Body.set","settings","setStatic","setMass","setDensity","setInertia","setVertices","setAngle","setVelocity","setAngularVelocity","setParts","setCentre","Body.setStatic","part","inverseMass","inverseInertia","Body.setMass","Body.setDensity","Body.setInertia","Body.setVertices","fromVertices","Body.setParts","autoHull","hullCentre","total","_totalProperties","Body.setCentre","relative","Body.setPosition","Body.setAngle","Body.setVelocity","Body.setAngularVelocity","Body.translate","Body.rotate","Body.scale","totalArea","totalInertia","Body.update","deltaTime","correction","deltaTimeSquared","velocityPrevY","applyForce","Body.applyForce","Body._totalProperties","properties","_motionWakeThreshold","_motionSleepThreshold","_minBias","Sleeping.update","timeFactor","minMotion","maxMotion","sleepCounter","afterCollisions","Sleeping.afterCollisions","pairs","pair","isActive","collision","bodyA","bodyB","sleepingBody","movingBody","Sleeping.set","wasSleeping","Constraint","_warming","_torqueDampen","_minLength","Constraint.create","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","Constraint.preSolveAll","impulse","solveAll","Constraint.solveAll","fixedA","fixedB","solve","Constraint.solve","pointAWorld","pointBWorld","currentLength","massTotal","resistanceTotal","zero","normal","relativeVelocity","normalVelocity","share","postSolveAll","Constraint.postSolveAll","Constraint.pointAWorld","Constraint.pointBWorld","Pair","Contact","Pair.create","timestamp","parentA","parentB","contacts","activeContacts","separation","confirmedActive","timeCreated","timeUpdated","Pair.update","supports","collided","support","contactId","contact","depth","setActive","Pair.setActive","Pair.id","Axes.fromVertices","gradient","toFixed","Axes.rotate","axis","xx","Bodies","rectangle","Bodies.rectangle","width","height","trapezoid","Bodies.trapezoid","slope","x1","x2","x3","verticesPath","circle","Bodies.circle","maxSides","sides","ceil","polygon","Bodies.polygon","PI","offset","yy","Bodies.fromVertices","vertexSets","flagInternal","removeCollinear","minimumArea","removeDuplicatePoints","isConcave","v","canDecomp","quickDecomp","concave","makeCCW","removeCollinearPoints","decomposed","chunkVertices","chunk","partA","partB","pav","pbv","da","db","coincident_max_dist","Mouse","Mouse.create","element","mouse","document","absolute","mousedownPosition","mouseupPosition","wheelDelta","button","pixelRatio","getAttribute","sourceEvents","mousemove","mousedown","mouseup","mousewheel","mouse.mousemove","_getRelativeMousePosition","changedTouches","preventDefault","mouse.mousedown","mouse.mouseup","mouse.mousewheel","detail","setElement","Mouse.setElement","addEventListener","clearSourceEvents","Mouse.clearSourceEvents","setOffset","Mouse.setOffset","setScale","Mouse.setScale","Mouse._getRelativeMousePosition","elementBounds","getBoundingClientRect","rootNode","documentElement","parentNode","scrollX","undefined","pageXOffset","scrollLeft","scrollY","pageYOffset","scrollTop","touches","pageX","left","pageY","top","clientWidth","clientHeight","Detector","SAT","collisions","Detector.collisions","broadphasePairs","engine","pairsTable","table","canCollide","pairId","collides","previousCollision","Detector.canCollide","filterA","filterB","SAT.collides","canReusePrevCol","axisBodyA","axisBody","minOverlap","_overlapAxes","axisBodyB","axisNumber","reused","overlap","overlapAB","overlapBA","tangent","penetration","verticesB","_findSupports","verticesA","SAT._overlapAxes","projectionA","projectionB","Number","MAX_VALUE","_projectToAxis","SAT._projectToAxis","projection","SAT._findSupports","nearestDistance","vertexToBody","bodyAPosition","distance","prevIndex","Plugin","_registry","register","Plugin.register","isPlugin","registered","pluginVersion","versionParse","version","number","registeredVersion","resolve","Plugin.resolve","dependency","dependencyParse","Plugin.toString","range","Plugin.isPlugin","install","isUsed","Plugin.isUsed","used","isFor","Plugin.isFor","parsed","for","versionSatisfies","use","Plugin.use","plugins","uses","dependencies","sortedDependencies","status","_warned","Plugin.dependencies","tracked","parsedBase","resolved","Plugin.dependencyParse","pattern","test","Plugin.versionParse","exec","major","minor","patch","isRange","operator","prerelease","Plugin.versionSatisfies","Render","_requestAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","setTimeout","_cancelAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","_goodFps","_goodDelta","Render.create","controller","canvas","frameRequestId","timing","historySize","deltaHistory","lastTime","lastTimestamp","lastElapsed","timestampElapsed","timestampElapsedHistory","engineDeltaHistory","engineElapsedHistory","elapsedHistory","background","wireframeBackground","hasBounds","enabled","wireframes","showSleeping","showDebug","showStats","showPerformance","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","context","getContext","textures","setPixelRatio","appendChild","run","Render.run","loop","time","unshift","lastDelta","world","stats","stop","Render.stop","Render.setPixelRatio","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","setAttribute","style","lookAt","Render.lookAt","padding","center","outerRatio","innerRatio","startViewTransform","Render.startViewTransform","setTransform","endViewTransform","Render.endViewTransform","Render.world","startTime","currentBackground","cssBackground","backgroundSize","globalCompositeOperation","fillRect","enableSleeping","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","vertexNumbers","mousePosition","grid","Render.stats","sections","font","textBaseline","textAlign","section","fillText","Render.performance","lastEngineDelta","deltaMean","_mean","elapsedMean","engineDeltaMean","engineElapsedMean","rateMean","timestampElapsedMean","fps","graphHeight","round","Render.status","count","indicator","plotY","beginPath","moveTo","lineTo","stroke","Render.constraints","start","arc","closePath","coils","fill","Render.bodies","globalAlpha","texture","image","imagePath","Image","src","drawImage","Render.bodyWireframes","Render.bodyConvexHulls","Render.vertexNumbers","Render.mousePosition","Render.bodyBounds","rect","Render.bodyAxes","Render.bodyPositions","Render.bodyVelocity","Render.bodyIds","Render.collisions","normalPosX","normalPosY","Render.separations","Render.grid","bucketKeys","buckets","bucketId","region","bucketWidth","bucketHeight","inspector","Render.inspector","selected","item","data","setLineDash","selectStart","selectBounds","createElement","oncontextmenu","canvas.oncontextmenu","onselectstart","canvas.onselectstart","Contact.create","normalImpulse","tangentImpulse","Contact.id","Engine","Resolver","Pairs","Grid","Engine.create","positionIterations","velocityIterations","constraintIterations","gravity","broadphase","metrics","Engine.update","_bodiesApplyGravity","_bodiesUpdate","gridPairs","pairsList","removeOld","collisionStart","preSolvePosition","solvePosition","postSolvePosition","preSolveVelocity","solveVelocity","collisionActive","collisionEnd","_bodiesClearForces","merge","Engine.merge","engineA","engineB","Engine.clear","Engine._bodiesClearForces","Engine._bodiesApplyGravity","gravityScale","Engine._bodiesUpdate","worldBounds","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","Resolver.preSolvePosition","activeCount","Resolver.solvePosition","tempA","tempB","tempC","tempD","bodyBtoA","contactShare","Resolver.postSolvePosition","Resolver.preSolveVelocity","contactVertex","Resolver.solveVelocity","timeScaleSquared","tempE","offsetA","offsetB","velocityPointA","velocityPointB","tangentVelocity","tangentSpeed","tangentVelocityDirection","normalForce","maxFriction","oAcN","oBcN","contactNormalImpulse","contactTangentImpulse","_pairMaxIdleLife","Pairs.create","Pairs.update","Pairs.removeOld","indexesToRemove","pairIndex","Pairs.clear","Grid.create","Grid.update","forceUpdate","row","gridChanged","newRegion","_getRegion","union","_regionUnion","col","startCol","endCol","startRow","endRow","_getBucketId","bucket","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","Grid.clear","Grid._regionUnion","regionA","regionB","_createRegion","Grid._getRegion","Grid._createRegion","Grid._getBucketId","column","Grid._createBucket","Grid._bucketAddBody","Grid._bucketRemoveBody","Grid._createActivePairsList","pairKeys","Matter","Composites","MouseConstraint","Query","Runner","Svg","World","Matter.use","before","Matter.before","after","Matter.after","stack","Composites.stack","columns","rows","columnGap","rowGap","lastBody","maxHeight","bodyHeight","bodyWidth","Composites.chain","xOffsetA","yOffsetA","xOffsetB","yOffsetB","mesh","Composites.mesh","crossBrace","bodyC","pyramid","Composites.pyramid","actualRows","lastBodyWidth","newtonsCradle","Composites.newtonsCradle","size","car","Composites.car","wheelSize","wheelAOffset","wheelBase","wheelBOffset","wheelA","wheelYOffset","wheelB","axelA","axelB","softBody","Composites.softBody","particleRadius","particleOptions","constraintOptions","MouseConstraint.create","mouseConstraint","_triggerEvents","MouseConstraint.update","MouseConstraint._triggerEvents","mouseEvents","Query.collides","ray","Query.ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","Query.region","outside","Query.point","_frameTimeout","clearTimeout","Runner.create","runner","deltaSampleSize","counterTimestamp","frameCounter","timePrev","timeScalePrev","isFixed","deltaMin","deltaMax","Runner.run","tick","Runner.tick","Runner.stop","Runner.start","pathToVertices","Svg.pathToVertices","sampleLength","segmentsQueue","lastPoint","lx","ly","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segment","segType","pathSegTypeAsLetter","toUpperCase","_svgPathToAbsolute","getTotalLength","segments","pathSegList","numberOfItems","getItem","segmentIndex","getPathSegAtLength","lastSegment","getPointAtLength","il","Svg._svgPathToAbsolute","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag"]
}
