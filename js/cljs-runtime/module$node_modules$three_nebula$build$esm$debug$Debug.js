shadow$provide.module$node_modules$three_nebula$build$esm$debug$Debug=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _constants=require("module$node_modules$three_nebula$build$esm$debug$constants");global={addEventListener:function(system,onSystemUpdated){system.eventDispatcher.addEventListener("SYSTEM_UPDATE",onSystemUpdated);return this},drawZone:function(THREE,system,container,zone={}){const {width=_constants.DEFAULT_SIZE,
height=_constants.DEFAULT_SIZE,depth=_constants.DEFAULT_SIZE,radius=_constants.DEFAULT_SIZE,x=_constants.DEFAULT_POSITION,y=_constants.DEFAULT_POSITION,z=_constants.DEFAULT_POSITION}=zone;let geometry;zone.isPointZone()&&(geometry=new THREE.SphereGeometry(15));zone.isLineZone();zone.isBoxZone()&&(geometry=new THREE.BoxGeometry(width,height,depth));zone.isSphereZone()&&(geometry=new THREE.SphereGeometry(radius,_constants.DEFAULT_SIZE,_constants.DEFAULT_SIZE));zone.isMeshZone()&&(geometry=zone.geometry.geometry?
zone.geometry.geometry.clone():zone.geometry.clone());geometry||(geometry=new THREE.BoxGeometry(width,height,depth));zone=new THREE.MeshBasicMaterial({color:"#2194ce",wireframe:!0});const mesh=new THREE.Mesh(geometry.clone(),zone);container.add(mesh);this.addEventListener(system,function(){mesh.position.set(x,y,z)})},drawEmitter:function(THREE,system,container,emitter,color){const geometry=new THREE.OctahedronGeometry(_constants.DEFAULT_SIZE);color=new THREE.MeshBasicMaterial({color:color||"#aaa",
wireframe:!0});const mesh=new THREE.Mesh(geometry.clone(),color);container.add(mesh);this.addEventListener(system,function(){mesh.position.copy(emitter.position);mesh.rotation.set(emitter.rotation.x,emitter.rotation.y,emitter.rotation.z)})},renderInfo:function(){function getCreatedNumber(type,system){return system.renderers[0]["material"==type?"_materialPool":"_targetPool"].cID}return function(system,style){this.addInfo(style);style="";switch(this._infoType){case 2:style+="emitter:"+system.emitters.length+
"\x3cbr\x3e";style+="em speed:"+system.emitters[0].cID+"\x3cbr\x3e";system=system.emitters[0];style+="pos:"+(Math.round(system.p.x)+","+Math.round(system.p.y)+","+Math.round(system.p.z));break;case 3:style+=system.renderers[0].name+"\x3cbr\x3e";style+="target:"+getCreatedNumber("target")+"\x3cbr\x3e";style+="material:"+getCreatedNumber("material");break;default:style+="particles:"+system.getCount()+"\x3cbr\x3e",style+="pool:"+system.pool.getCount()+"\x3cbr\x3e",style+="total:"+(system.getCount()+
system.pool.getCount())}this._infoCon.innerHTML=style}}(),addInfo:function(){return function(style){var self=this;if(!this._infoCon){this._infoCon=document.createElement("div");this._infoCon.style.cssText="position:fixed;bottom:0px;left:0;cursor:pointer;opacity:0.9;z-index:10000;padding:10px;font-size:12px;width:120px;height:50px;background-color:#002;color:#0ff;";this._infoType=1;this._infoCon.addEventListener("click",function(){self._infoType++;3<self._infoType&&(self._infoType=1)},!1);switch(style){case 2:style=
"#201";var color="#f08";break;case 3:style="#020";color="#0f0";break;default:style="#002",color="#0ff"}this._infoCon.style["background-color"]=style;this._infoCon.style.color=color}this._infoCon.parentNode||document.body.appendChild(this._infoCon)}}()};exports.default=global}
//# sourceMappingURL=module$node_modules$three_nebula$build$esm$debug$Debug.js.map
