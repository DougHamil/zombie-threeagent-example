{"version":3,"sources":["zombie/util/timer.cljs"],"mappings":";AAEA,0BAAA,1BAAMA,4DAAOC,GAAGC;AAAhB,AACE,OAACC,WAAcD,GAAGD;;AAEpB,+BAAA,/BAAMG,sEAAgBC,OAAOC;AAA7B,AACE,IAAMC,WAAS,AAAQF;IACjBG,WAAS,CAAGD,WAASD;IACrBG,OAAK,AAAaJ;AAFxB,AAGE,GAAI,CAAGI,OAAKD;AACV,AACE,CAAM,AAAQH,cAAQ,CAAGG,WAASC;;AAClC,IAAAC,eAAC,AAAUL;AAAX,AAAA,QAAAK,6CAAAA,+CAAAA;;AACF,QAAM,AAAQL,cAAQG;;;AAE5B,kCAAA,lCAAMG,4EAAeC,OAAOH,KAAKI;AAAjC,AACE,4BAAA,2CAAA,0GAAA,iEAAA,3OAACC,qHAAe,AAACC,6CAAKH,iEACJC,wEACGJ","names":["zombie.util.timer/after","ms","cb","js/setTimeout","zombie.util.timer/maybe-tick","ticker","delta-time","old-time","new-time","freq","fexpr__12903","zombie.util.timer/jitter-ticker","jitter","tick-fn","cljs.core/clj->js","cljs.core.rand"],"sourcesContent":["(ns zombie.util.timer)\r\n\r\n(defn after [ms cb]\r\n  (js/setTimeout cb ms))\r\n\r\n(defn maybe-tick [^js ticker delta-time]\r\n  (let [old-time (.-time ticker)\r\n        new-time (+ old-time delta-time)\r\n        freq (.-frequency ticker)]\r\n    (if (< freq new-time)\r\n      (do\r\n        (set! (.-time ticker) (- new-time freq))\r\n        ((.-tickFn ticker)))\r\n      (set! (.-time ticker) new-time))))\r\n\r\n(defn jitter-ticker [jitter freq tick-fn]\r\n  (clj->js {:time (rand jitter)\r\n            :tickFn tick-fn\r\n            :frequency freq}))\r\n"]}