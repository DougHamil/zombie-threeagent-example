{"version":3,"sources":["zombie/assets/font.cljs"],"mappings":";;AAGA,iCAAA,mDAAAA,pFAAMI,0EAAaC,KAAKC;AAAxB,AAAA,IAAAL,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;iBAAA,AAAAE,4CAAAF,eAAA,xEAAqCM;AAArC,AACE,YAAAC,QAAa,WAAKC,IAAIC;AAAT,AACE,OAACC,6EAAmB,qBAAA,2CAAA,2DAAA,3HAACC,sHAAeN,sEACMC,oBACtB;AAAA,AAEE,IAAMM,OAAK,KAAAC;AAAX,AACE,iBAAA,VAAOD;AAAP,AAAa,QAACJ,oCAAAA,0CAAAA,RAAIH,sBAAAA","names":["p__10519","map__10520","cljs.core/--destructure-map","cljs.core.get","zombie.assets.font/font-loader","_key","path","characters","js/Promise","res","rej","js/module$node_modules$troika_three_text$dist$troika_three_text_esm.preloadFont","cljs.core/clj->js","text","js/module$node_modules$troika_three_text$dist$troika_three_text_esm.Text"],"sourcesContent":["(ns zombie.assets.font\r\n  (:require [\"troika-three-text\" :as troika]))\r\n\r\n(defn font-loader [_key path {:keys [characters]}]\r\n  (js/Promise. (fn [res rej]\r\n                 (troika/preloadFont (clj->js {:font path\r\n                                               :characters characters})\r\n                                     (fn []\r\n                                       ;; Force shader to compile\r\n                                       (let [text (troika/Text.)]\r\n                                         (.sync text #(res path))))))))\r\n  \r\n"]}