shadow$provide.module$node_modules$three_nebula$build$esm$renderer$MeshRenderer=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;global=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require("module$node_modules$three_nebula$build$esm$renderer$BaseRenderer"));var _utils=require("module$node_modules$three_nebula$build$esm$utils$index"),_core=require("module$node_modules$three_nebula$build$esm$core$index"),_types=require("module$node_modules$three_nebula$build$esm$renderer$types");
class MeshRenderer extends global.default{constructor(container,THREE){super(_types.RENDERER_TYPE_MESH);this.container=container;this._targetPool=new _core.Pool;this._materialPool=new _core.Pool;this._body=new THREE.Mesh(new THREE.BoxGeometry(50,50,50),new THREE.MeshLambertMaterial({color:"#ff0000"}))}isThreeSprite(particle){return particle.target.isSprite}onSystemUpdate(){}onParticleCreated(particle){!particle.target&&(particle.body||(particle.body=this._body),particle.target=this._targetPool.get(particle.body),
particle.useAlpha||particle.useColor)&&(particle.target.material.__puid=_utils.PUID.id(particle.body.material),particle.target.material=this._materialPool.get(particle.target.material));particle.target&&(particle.target.position.copy(particle.position),this.container.add(particle.target))}onParticleUpdate(particle){const {target,useAlpha,useColor,rotation}=particle;target&&(target.position.copy(particle.position),this.isThreeSprite(particle)||target.rotation.set(rotation.x,rotation.y,rotation.z),
this.scale(particle),useAlpha&&(target.material.opacity=particle.alpha,target.material.transparent=!0),useColor&&target.material.color.copy(particle.color))}scale(particle){particle.target.scale.set(particle.scale,particle.scale,particle.scale)}onParticleDead(particle){particle.target&&((particle.useAlpha||particle.useColor)&&this._materialPool.expire(particle.target.material),this._targetPool.expire(particle.target),this.container.remove(particle.target),particle.target=null)}}exports.default=MeshRenderer}
//# sourceMappingURL=module$node_modules$three_nebula$build$esm$renderer$MeshRenderer.js.map
