{
"version":3,
"file":"module$node_modules$three$examples$jsm$curves$NURBSCurve.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/three/examples/jsm/curves/NURBSCurve.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$examples$jsm$curves$NURBSCurve\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NURBSCurve = void 0;\n\nvar _three = require(\"three\");\n\nvar NURBSUtils = _interopRequireWildcard(require(\"../curves/NURBSUtils.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\nclass NURBSCurve extends _three.Curve {\n  constructor(degree, knots\n  /* array of reals */\n  , controlPoints\n  /* array of Vector(2|3|4) */\n  , startKnot\n  /* index in knots */\n  , endKnot\n  /* index in knots */\n  ) {\n    super();\n    this.degree = degree;\n    this.knots = knots;\n    this.controlPoints = []; // Used by periodic NURBS to remove hidden spans\n\n    this.startKnot = startKnot || 0;\n    this.endKnot = endKnot || this.knots.length - 1;\n\n    for (let i = 0; i < controlPoints.length; ++i) {\n      // ensure Vector4 for control points\n      const point = controlPoints[i];\n      this.controlPoints[i] = new _three.Vector4(point.x, point.y, point.z, point.w);\n    }\n  }\n\n  getPoint(t, optionalTarget = new _three.Vector3()) {\n    const point = optionalTarget;\n    const u = this.knots[this.startKnot] + t * (this.knots[this.endKnot] - this.knots[this.startKnot]); // linear mapping t->u\n    // following results in (wx, wy, wz, w) homogeneous point\n\n    const hpoint = NURBSUtils.calcBSplinePoint(this.degree, this.knots, this.controlPoints, u);\n\n    if (hpoint.w !== 1.0) {\n      // project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n      hpoint.divideScalar(hpoint.w);\n    }\n\n    return point.set(hpoint.x, hpoint.y, hpoint.z);\n  }\n\n  getTangent(t, optionalTarget = new _three.Vector3()) {\n    const tangent = optionalTarget;\n    const u = this.knots[0] + t * (this.knots[this.knots.length - 1] - this.knots[0]);\n    const ders = NURBSUtils.calcNURBSDerivatives(this.degree, this.knots, this.controlPoints, u, 1);\n    tangent.copy(ders[1]).normalize();\n    return tangent;\n  }\n\n}\n\nexports.NURBSCurve = NURBSCurve;\n};"],
"names":["shadow$provide","global","require","module","exports","_getRequireWildcardCache","WeakMap","cache","Object","defineProperty","value","NURBSCurve","_three","NURBSUtils","_interopRequireWildcard","obj","__esModule","default","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Curve","constructor","degree","knots","controlPoints","startKnot","endKnot","length","i","point","Vector4","x","y","z","w","getPoint","t","optionalTarget","Vector3","hpoint","calcBSplinePoint","divideScalar","getTangent","ders","calcNURBSDerivatives","copy","normalize"]
}
