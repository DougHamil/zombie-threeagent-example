{"version":3,"sources":["zombie/scene/core.cljs"],"mappings":";;;AAUA,yBAAA,zBAAOA;AAAP,AAAA,0FAAA,yDAAA,mFAAA,sDAAA,2CAAA,sDAAA,oBAGG,iBAAAC,WAAA,AAAAC,gBAAO,iBAAAG,WAAWG;IAAXF,WAAA,mFAAA;AAAA,AAAA,oHAAAD,SAAAC,6CAAAD,SAAAC,3KAACC,uDAAAA,0EAAAA;;IAARN,eAAA,EAAA,CAAAA,oBAAAE,oBAAA,AAAAF,aAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,0FACUQ;;;KADV;AAAA,0FAEUC;;;;AAFV,MAAA,KAAAN,MAAA,CAAA,mEAAAH;;;;;AAIH,+BAAA,/BAAMU;AAAN,AACE,IAAMC,MAAI,4GAAA,2CAAA,iEAAA,2CAAA,2DAAA,aAAA,8FAAA,6GAAA,4EAAA,WAAAC,7mBAACC,qDAAUd,uBACA,wBAAA,xBAACe,2TAES,AAACC,wGACI,AAACC;AAJ3B,AAK+B,AAAI,uGAAA,wHAAAJ,/NAACK,0DAAMV,4BAAQW,sEAAaC;;AAC5B,+FAAA,kEAAAP,jKAACK,mDAAMV,4BAAQa;;AACf,OAASC;;IAChDC,QAAM,AAAA,oGAAgBX;IACtBY,WAAS,AAAA,0GAAmBZ;AATlC,AAUE,sBAAA,lBAAMa;AAAN,AACE,CAAM,AAAOF,YAAO,KAAAG,iEAAA,MAAA,tBAAYD;;AAChC,AAAgBD,uBAASC;;AAC3B,uGAAA,hGAACP,mDAAMS,6BAASN,iGAA0BT","names":["zombie.scene.core/root","G__13410","cljs.core/deref","cljs.core/Keyword","js/Error","G__13411","G__13412","threeagent.core/cursor","zombie.state.databases/game","zombie.scene.view.game/render","zombie.scene.view.title/render","zombie.scene.core/init!","ctx","p1__13413#","threeagent.core.render","js/document.getElementById","zombie.scene.system.core/create","zombie.scene.entity-type.core/create","cljs.core.swap_BANG_","cljs.core/update","cljs.core/+","cljs.core/assoc","js/module$node_modules$$tweenjs$tween_js$dist$tween_esm","scene","renderer","fog-color","js/module$node_modules$three$build$three_module.Fog","zombie.state.databases/scene"],"sourcesContent":["(ns zombie.scene.core\r\n  (:require [threeagent.core :as th]\r\n            [\"three\" :as three]\r\n            [\"@tweenjs/tween.js\" :as tween]\r\n            [zombie.scene.view.game :as game-view]\r\n            [zombie.scene.view.title :as title-view]\r\n            [zombie.state.databases :as db]\r\n            [zombie.scene.system.core :as systems]\r\n            [zombie.scene.entity-type.core :as entity-types]))\r\n\r\n(defn- root []\r\n  [:object\r\n   [:text {:text \"a\"}] ;; Force text shader to compile\r\n   (case @(th/cursor db/game [:active-view])\r\n     :game  [game-view/render]\r\n     :title [title-view/render])])\r\n\r\n(defn init! []\r\n  (let [ctx (th/render root\r\n                       (js/document.getElementById \"root\")\r\n                       {:shadow-map {:enabled true}\r\n                        :systems (systems/create)\r\n                        :entity-types (entity-types/create)\r\n                        :on-before-render #(do (swap! db/game update :time + %)\r\n                                               (swap! db/game assoc :delta-time %)\r\n                                               (.update tween))})\r\n        scene (:threejs-scene ctx)\r\n        renderer (:threejs-renderer ctx)]\r\n    (let [fog-color 0x101010]\r\n      (set! (.-fog scene) (three/Fog. fog-color 100 100))\r\n      (.setClearColor renderer fog-color))\r\n    (swap! db/scene assoc :threeagent-context ctx)))\r\n"]}