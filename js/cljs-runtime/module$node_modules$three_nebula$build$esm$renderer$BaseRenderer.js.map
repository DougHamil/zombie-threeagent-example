{
"version":3,
"file":"module$node_modules$three_nebula$build$esm$renderer$BaseRenderer.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,gEAAA,CAAqF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAAkB,IAAK,EAEvB,KAAIC,WAAaP,OAAA,CAAQ,6DAAR,CAAjB,CAEIQ,OAASR,OAAA,CAAQ,2DAAR,CAFb,CAIIS,YAAcT,OAAA,CAAQ,4DAAR,CAElB,MAAMU,aAAN,CACEC,WAAW,CAACC,IAAA,CAAOJ,MAAOK,CAAAA,kBAAf,CAAmC,CAK5C,IAAKD,CAAAA,IAAL;AAAYA,IALgC,CAQ9CE,IAAI,CAACC,eAAD,CAAS,CACX,IAAIC,KAAO,IACX,KAAKD,CAAAA,MAAL,CAAcA,eACd,KAAKA,CAAAA,MAAOE,CAAAA,eAAgBC,CAAAA,gBAA5B,CAA6CX,UAAWY,CAAAA,aAAxD,CAAuE,QAAS,CAACJ,MAAD,CAAS,CACvFC,IAAKI,CAAAA,cAAeC,CAAAA,IAApB,CAAyBL,IAAzB,CAA+BD,MAA/B,CADuF,CAAzF,CAGA,KAAKA,CAAAA,MAAOE,CAAAA,eAAgBC,CAAAA,gBAA5B,CAA6CX,UAAWe,CAAAA,gBAAxD,CAA0E,QAAS,CAACC,QAAD,CAAW,CAC5FP,IAAKQ,CAAAA,iBAAkBH,CAAAA,IAAvB,CAA4BL,IAA5B,CAAkCO,QAAlC,CAD4F,CAA9F,CAGA,KAAKR,CAAAA,MAAOE,CAAAA,eAAgBC,CAAAA,gBAA5B,CAA6CX,UAAWkB,CAAAA,eAAxD,CAAyE,QAAS,CAACF,QAAD,CAAW,CAC3FP,IAAKU,CAAAA,gBAAiBL,CAAAA,IAAtB,CAA2BL,IAA3B,CAAiCO,QAAjC,CAD2F,CAA7F,CAGA,KAAKR,CAAAA,MAAOE,CAAAA,eAAgBC,CAAAA,gBAA5B,CAA6CX,UAAWoB,CAAAA,aAAxD;AAAuE,QAAS,CAACJ,QAAD,CAAW,CACzFP,IAAKY,CAAAA,cAAeP,CAAAA,IAApB,CAAyBL,IAAzB,CAA+BO,QAA/B,CADyF,CAA3F,CAGA,KAAKM,CAAAA,eAAL,EAfW,CAkBbC,MAAM,EAAG,CACP,IAAKf,CAAAA,MAAL,CAAc,IADP,CAQTS,iBAAiB,CAACD,QAAD,CAAW,EAO5BG,gBAAgB,CAACH,QAAD,CAAW,EAO3BK,cAAc,CAACL,QAAD,CAAW,EAOzBH,cAAc,CAACL,MAAD,CAAS,EASvBc,eAAe,EAAG,CACXpB,WAAYsB,CAAAA,OAAjB,EAIAC,OAAQC,CAAAA,GAAR,CAAY,GAAG,IAAKrB,CAAAA,IAAR,EAAZ,CALgB,CAjEpB,CA2EAV,OAAQI,CAAAA,OAAR,CAAkBI,YAzF2G;",
"sources":["node_modules/three-nebula/build/esm/renderer/BaseRenderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three_nebula$build$esm$renderer$BaseRenderer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _constants = require(\"../events/constants\");\n\nvar _types = require(\"./types\");\n\nvar _constants2 = require(\"../constants\");\n\nclass BaseRenderer {\n  constructor(type = _types.RENDERER_TYPE_BASE) {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n  }\n\n  init(system) {\n    var self = this;\n    this.system = system;\n    this.system.eventDispatcher.addEventListener(_constants.SYSTEM_UPDATE, function (system) {\n      self.onSystemUpdate.call(self, system);\n    });\n    this.system.eventDispatcher.addEventListener(_constants.PARTICLE_CREATED, function (particle) {\n      self.onParticleCreated.call(self, particle);\n    });\n    this.system.eventDispatcher.addEventListener(_constants.PARTICLE_UPDATE, function (particle) {\n      self.onParticleUpdate.call(self, particle);\n    });\n    this.system.eventDispatcher.addEventListener(_constants.PARTICLE_DEAD, function (particle) {\n      self.onParticleDead.call(self, particle);\n    });\n    this.logRendererType();\n  }\n\n  remove() {\n    this.system = null;\n  }\n  /**\n   * @abstract\n   */\n\n\n  onParticleCreated(particle) {} // eslint-disable-line\n\n  /**\n   * @abstract\n   */\n\n\n  onParticleUpdate(particle) {} // eslint-disable-line\n\n  /**\n   * @abstract\n   */\n\n\n  onParticleDead(particle) {} // eslint-disable-line\n\n  /**\n   * @abstract\n   */\n\n\n  onSystemUpdate(system) {} // eslint-disable-line\n\n  /**\n   * Logs the renderer type being used when in development mode.\n   *\n   * @return void\n   */\n\n\n  logRendererType() {\n    if (!_constants2.__DEV__) {\n      return;\n    }\n\n    console.log(`${this.type}`);\n  }\n\n}\n\nexports.default = BaseRenderer;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","_constants","_types","_constants2","BaseRenderer","constructor","type","RENDERER_TYPE_BASE","init","system","self","eventDispatcher","addEventListener","SYSTEM_UPDATE","onSystemUpdate","call","PARTICLE_CREATED","particle","onParticleCreated","PARTICLE_UPDATE","onParticleUpdate","PARTICLE_DEAD","onParticleDead","logRendererType","remove","__DEV__","console","log"]
}
