{
"version":3,
"file":"module$node_modules$three_nebula$build$esm$behaviour$Color.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/three-nebula/build/esm/behaviour/Color.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three_nebula$build$esm$behaviour$Color\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _math = require(\"../math\");\n\nvar _Behaviour = _interopRequireDefault(require(\"./Behaviour\"));\n\nvar _utils = require(\"../utils\");\n\nvar _ease = require(\"../ease\");\n\nvar _types = require(\"./types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A behaviour which mutates the color of a particle over time.\n *\n */\nclass Color extends _Behaviour.default {\n  /**\n   * Constructs a Color behaviour instance.\n   *\n   * @param {number|string} colorA - the starting color\n   * @param {number|string} colorB - the ending color\n   * @param {number} life - the life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(colorA, colorB, life, easing, isEnabled = true) {\n    super(life, easing, _types.BEHAVIOUR_TYPE_COLOR, isEnabled);\n    this.reset(colorA, colorB);\n  }\n  /**\n   * Gets the _same property which determines if the alpha are the same.\n   *\n   * @return {boolean}\n   */\n\n\n  get same() {\n    return this._same;\n  }\n  /**\n   * Sets the _same property which determines if the alpha are the same.\n   *\n   * @param {boolean} same\n   * @return {boolean}\n   */\n\n\n  set same(same) {\n    /**\n     * @type {boolean}\n     */\n    this._same = same;\n  }\n\n  reset(colorA, colorB, life, easing) {\n    this.same = colorB === null || colorB === undefined ? true : false;\n    this.colorA = (0, _math.createColorSpan)(colorA);\n    this.colorB = (0, _math.createColorSpan)(colorB);\n    life && super.reset(life, easing);\n  }\n\n  initialize(particle) {\n    particle.transform.colorA = _utils.ColorUtil.getRGB(this.colorA.getValue());\n    particle.useColor = true;\n    particle.transform.colorB = this.same ? particle.transform.colorA : _utils.ColorUtil.getRGB(this.colorB.getValue());\n  }\n\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    if (!this._same) {\n      particle.color.r = _math.MathUtils.lerp(particle.transform.colorA.r, particle.transform.colorB.r, this.energy);\n      particle.color.g = _math.MathUtils.lerp(particle.transform.colorA.g, particle.transform.colorB.g, this.energy);\n      particle.color.b = _math.MathUtils.lerp(particle.transform.colorA.b, particle.transform.colorB.b, this.energy);\n    } else {\n      particle.color.r = particle.transform.colorA.r;\n      particle.color.g = particle.transform.colorA.g;\n      particle.color.b = particle.transform.colorA.b;\n    }\n  }\n  /**\n   * Creates a Color initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.colorA - The starting color\n   * @property {number} json.colorB - The ending color\n   * @property {number} json.life - The life of the particle\n   * @property {string} json.easing - The behaviour's decaying trend\n   * @return {Color}\n   */\n\n\n  static fromJSON(json) {\n    const {\n      colorA,\n      colorB,\n      life,\n      easing,\n      isEnabled = true\n    } = json;\n    return new Color(colorA, colorB, life, (0, _ease.getEasingByName)(easing), isEnabled);\n  }\n\n}\n\nexports.default = Color;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","_math","_Behaviour","_interopRequireDefault","obj","__esModule","_utils","_ease","_types","Color","constructor","colorA","colorB","life","easing","isEnabled","BEHAVIOUR_TYPE_COLOR","reset","_same","same","undefined","createColorSpan","initialize","particle","transform","ColorUtil","getRGB","getValue","useColor","mutate","time","index","energize","color","r","g","b","MathUtils","lerp","energy","fromJSON","json","getEasingByName"]
}
