{"version":3,"sources":["zombie/scene/system/follow.cljs"],"mappings":"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","names":["zombie.scene.system.follow/v1","js/module$node_modules$three$build$three_module.Vector3","p__13078","map__13079","cljs.core/--destructure-map","cljs.core.get","zombie.scene.system.follow/tick-follower!","_delta-time","object","entity-id","position-offset","look-at?","temp__5753__auto__","obj","cljs.core/deref","zombie.state.databases/entity-objects","vec__13080","cljs.core.nth","world-pos","ox","oy","oz","cljs.core/PROTOCOL_SENTINEL","p__13083","map__13084","this__4450__auto__","writer__4451__auto__","opt__4452__auto__","cljs.core/-write","zombie.scene.system.follow/FollowSystem","zombie.scene.system.follow/->FollowSystem","bus","local-state","_","_id","cljs.core.swap_BANG_","cljs.core/assoc","or__4212__auto__","_config","cljs.core/dissoc","delta-time","seq__13088","cljs.core/seq","chunk__13089","count__13090","i__13091","vec__13106","cljs.core/chunked-seq?","c__4638__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__13111","cljs.core/first","cljs.core/next","follower","zombie.scene.system.follow/create","event-bus","cljs.core.atom"],"sourcesContent":["(ns zombie.scene.system.follow\r\n  (:require [zombie.state.databases :as db]\r\n            [\"three\" :as three]\r\n            [threeagent.system :refer [ISystem]]))\r\n\r\n(def ^:private v1 (three/Vector3.))\r\n\r\n(defn- tick-follower! [_delta-time {:keys [^three/Object3D object entity-id position-offset look-at?]}]\r\n  (when-let [obj ^three/Object3D (get @db/entity-objects entity-id)]\r\n    (let [world-pos (.getWorldPosition obj v1)\r\n          [ox oy oz] position-offset]\r\n      (.set (.-position object)\r\n            (+ ox (.-x world-pos))\r\n            (+ oy (.-y world-pos))\r\n            (+ oz (.-z world-pos)))\r\n      (when look-at?\r\n        (.lookAt object world-pos)))))\r\n\r\n(deftype FollowSystem [bus local-state]\r\n  ISystem\r\n  (init [_ _])\r\n  (destroy [_ _])\r\n  (on-entity-added [_ _ _id obj {:keys [entity-id position-offset look-at?]}]\r\n    (swap! local-state assoc obj {:entity-id entity-id\r\n                                  :look-at? look-at?\r\n                                  :position-offset (or position-offset [0 0 0])\r\n                                  :object obj}))\r\n  (on-entity-removed [_ _ _id obj _config]\r\n    (swap! local-state dissoc obj))\r\n  (tick [_ delta-time]\r\n    (doseq [[_ follower] @local-state]\r\n      (tick-follower! delta-time follower))))\r\n\r\n(defn create [event-bus]\r\n  (->FollowSystem event-bus (atom {})))\r\n"]}