shadow$provide.module$node_modules$three_nebula$build$esm$renderer$GPURenderer$Mobile$shaders$vertexShader=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.vertexShader=void 0;var _constants=require("module$node_modules$three_nebula$build$esm$renderer$GPURenderer$common$shaders$constants");exports.vertexShader=()=>`
    uniform sampler2D uTexture;
    uniform vec2 atlasDim;

    attribute float size;
    attribute vec3 color;
    attribute float alpha;
    attribute vec2 texID;

    varying vec3 targetColor;
    varying float targetAlpha;
    varying vec4 tileRect;

    void main() {
      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);
      targetColor = color;
      targetAlpha = alpha;

      vec2 tmin = floor(texID) / atlasDim;
      vec2 tmax = fract(texID);
      tileRect = vec4(tmin,tmax);

      gl_PointSize = ((size * ${_constants.SIZE_ATTENUATION_FACTOR}) / -mvPosition.z);
      gl_Position = projectionMatrix * mvPosition;
    }
`}
//# sourceMappingURL=module$node_modules$three_nebula$build$esm$renderer$GPURenderer$Mobile$shaders$vertexShader.js.map
