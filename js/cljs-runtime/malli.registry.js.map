{"version":3,"sources":["malli/registry.cljc"],"mappings":";AAGS;;;sBAAA,AAAAA,YAAA,sBAAA,xDAAaC;AAGtB,AAAA;AAAA;;;0BAAA,1BAAaU;;AAAb,IAAAT,4CAAA,WACYU,MAAKC;AADjB,AAAA,IAAAV,kBAAA,EAAA,UAAA,OAAA,hBACYS,qBAAAA;IADZR,kBAAA,CAAAC,uBAAA,AAAAC,YAAAH;AAAA,AAAA,GAAA,GAAA,CAAAC,mBAAA;AAAA,QAAAA,gDAAAA,4DAAAA,dACYQ,wCAAAA,lCAAKC,wCAAAA;;AADjB,IAAAN,kBAAA,CAAAF,uBAAA;AAAA,AAAA,GAAA,GAAA,CAAAE,mBAAA;AAAA,QAAAA,gDAAAA,4DAAAA,dACYK,wCAAAA,lCAAKC,wCAAAA;;AADjB,MAAA,AAAAL,2BAAA,mBACYI;;;;AADZ,AAAA;;;yBAAA,zBACGP,0DAASO,MAAKC;AADjB,AAAA,GAAA,EAAA,GAAA,UAAA,aAAA,GAAA,CAAA,iDAAA,3EACYD,0BAAAA;AADZ,OACYA,8CAAAA,MAAKC;;AADjB,OAAAX,0CACYU,MAAKC;;;;AADjB,IAAAJ,6CAAA,WAEaG;AAFb,AAAA,IAAAT,kBAAA,EAAA,UAAA,OAAA,hBAEaS,qBAAAA;IAFbR,kBAAA,CAAAM,wBAAA,AAAAJ,YAAAH;AAAA,AAAA,GAAA,GAAA,CAAAC,mBAAA;AAAA,QAAAA,gDAAAA,uDAAAA,TAEaQ,mCAAAA;;AAFb,IAAAL,kBAAA,CAAAG,wBAAA;AAAA,AAAA,GAAA,GAAA,CAAAH,mBAAA;AAAA,QAAAA,gDAAAA,uDAAAA,TAEaK,mCAAAA;;AAFb,MAAA,AAAAJ,2BAAA,oBAEaI;;;;AAFb,AAAA;;;0BAAA,1BAEGF,4DAAUE;AAFb,AAAA,GAAA,EAAA,GAAA,UAAA,aAAA,GAAA,CAAA,kDAAA,5EAEaA,0BAAAA;AAFb,OAEaA,+CAAAA;;AAFb,OAAAH,2CAEaG;;;;AAFb,AAIA,iCAAA,jCAAME,0EAAiBC;AAAvB,AACE,AAAA,GAAA,QAAAC,kCAAAC,2CAAAC;AAAA;AAAA,AAAA,AAAA;;;;;;;;;;;;;AAAA,AAAA,CAAA,AAAA,AAAAC,wFAAA,WAAAC,OAAAC;;AAAA,AAAA,IAAAD,aAAA;iDADqBL,jDACrB,AAAA,YAAAI,oDAAAE;;;AAAA,CAAA,AAAA,AAAAF,+EAAA,WAAAC;;AAAA,AAAA,IAAAA,aAAA;AAAA,AAAAC;;;AAAA,CAAA,AAAA,AAAAF,0EAAAG;;AAAA,CAAA,AAAA,AAAAH,yFAAA,WAEYS,EAAEf;;AAFd,AAAA,YAAA,RAEYe;AAFZ,AAEoB,OAACC,4CAAId,eAAQF;;;AAFjC,CAAA,AAAA,AAAAM,0FAAA,WAGaS;;AAHb,AAAA,YAAA,RAGaA;AAHb,AAGgBb;;;AAHhB,CAAA,AAAAI,gDAAA;AAAA,AAAA,AAAA;;;AAAA,CAAA,AAAAA,sDAAA;;AAAA,CAAA,AAAAA,yDAAA;;AAAA,CAAA,AAAAA,8DAAA,WAAAI,mBAAAC,qBAAAC;AAAA,AAAA,OAAAC,iBAAAF,qBAAA;;;AAAA;;;kHADqBT,lHACrBY,4CAAA,kFAAAN;iDADqBN,jDACrB,AAAA,YAAAI,iDAAAE;;;AAAAF;;iDADqBJ,jDACrB,YAAAI,6CAAA;;AAKF,0BAAA,1BAAMW,4DAAUC;AAAhB,AACE,GAAM,EAAA,GAAA,oBAAA,SAAA,EAAA,EAAA,WAAA,CAAAT,gCAAA,6CAAA,KAAA,EAAA,EAAA,qDAAA,AAAAU,2EAAA,QAAA,AAAAA,jDAAYrB,mFAAAA,5SAASoB,4EAAAA,sDAAAA,+GAAAA,mFAAAA;AAAWA;;AAAtC,GACM,AAACE,qBAAKF;AAAW,OAACjB,+BAAgBiB;;AADxC;;;;AAOF,AAAeG,gCAAU,AAACC,6CAAK,wBAAA,xBAACL;AAEhC,4CAAA,5CAAMM,gGAAuBL;AAA7B,AACE,GAAI,yBAAA,xBAAY9B;AACd,OAACoC,sBAAOH,8BAAU,AAACJ,wBAASC;;AAC5B,MAAO,gDAAA,6BAAA,2CAAA,xHAACO,6KAA4CrC;;;AAExD,yCAAA,zCAAesC;AAAf,AACE,AAAA,GAAA,QAAAvB,kCAAAC,2CAAAuB;AAAA;AAAA,AAAA,AAAA;;;;;;;;;;;;AAAA,AAAA,CAAA,AAAA,AAAAC,wFAAA,WAAAC,OAAAC;;AAAA,AAAA,IAAAD,aAAA;AAAA,AAAA,YAAAD,qCAAAE;;;AAAA,CAAA,AAAA,AAAAF,+EAAA,WAAAC;;AAAA,AAAA,IAAAA,aAAA;AAAA,AAAAC;;;AAAA,CAAA,AAAA,AAAAF,0EAAAnB;;AAAA,CAAA,AAAA,AAAAmB,yFAAA,WAEYb,EAAEf;;AAFd,AAAA,YAAA,RAEYe;AAFZ,AAEoB,8BAAA,AAAAiB,vBAACxC,uCAAS6B,+BAAUrB;;;AAFxC,CAAA,AAAA,AAAA4B,0FAAA,WAGab;;AAHb,AAAA,YAAA,RAGaA;AAHb,AAGgB,+BAAA,AAAAiB,xBAACnC,wCAAUwB;;;AAH3B,CAAA,AAAAO,gDAAA;AAAA,AAAA,AAAA;;;AAAA,CAAA,AAAAA,sDAAA;;AAAA,CAAA,AAAAA,yDAAA;;AAAA,CAAA,AAAAA,8DAAA,WAAAlB,mBAAAC,qBAAAC;AAAA,AAAA,OAAAC,iBAAAF,qBAAA;;;AAAA;;;AAAAoB,4CAAA,8EAAAD;AAAA,AAAA,YAAAF,qCAAAE;;;AAAAF;;AAAA,YAAAA,qCAAA;;AAKF,AAAA,oCAAA,4CAAAK,hFAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,uEAAAF;;;AAAA,AAAA,CAAA,yEAAA,zEAAME,oFAAsBI;AAA5B,AACE,IAAMC,aAAW,AAACC,6CAAK5B,wBAAS0B;AAAhC,AACE,AAAA,GAAA,QAAAxC,kCAAAC,2CAAA0C;AAAA;AAAA,AAAA,AAAA;;;;;;;;;;;;;;AAAA,AAAA,CAAA,AAAA,AAAAC,wFAAA,WAAAC,OAAAC;;AAAA,AAAA,IAAAD,aAAA;iDAFwBL,yBACpBC,1EACJ,AAAA,YAAAG,gFAAAE;;;AAAA,CAAA,AAAA,AAAAF,+EAAA,WAAAC;;AAAA,AAAA,IAAAA,aAAA;AAAA,AAAAC;;;AAAA,CAAA,AAAA,AAAAF,0EAAAtC;;AAAA,CAAA,AAAA,AAAAsC,yFAAA,WAEYhC,EAAEf;;AAFd,AAAA,YAAA,RAEYe;AAFZ,AAEoB,sBAAA,WAAAoC,1BAACC;AAAD,AAAO,8BAAAD,vBAAC3D,wCAAUQ;GAAM4C;;;AAF5C,CAAA,AAAA,AAAAG,0FAAA,WAGahC;;AAHb,AAAA,YAAA,RAGaA;AAHb,AAGgB,OAACsC,+CAAOC,gBAAM,AAACC,4CAAI1D,wBAAS,AAAC2D,kBAAQZ;;;AAHrD,CAAA,AAAAG,gDAAA;AAAA,AAAA,AAAA;;;AAAA,CAAA,AAAAA,sDAAA;;AAAA,CAAA,AAAAA,yDAAA;;AAAA,CAAA,AAAAA,8DAAA,WAAArC,mBAAAC,qBAAAC;AAAA,AAAA,OAAAC,iBAAAF,qBAAA;;;AAAA;;;gGAFwBgC,sBACpBC,tHACJM,4CAAA,yFAAAD;iDAFwBN,sBACpBC,vEACJ,AAAA,YAAAG,0EAAAE;;;AAAAF;;iDAFwBJ,kBACpBC,nEACJ,YAAAG,kEAAA;;;AAFJ,CAAA,4DAAA,5DAAMR;;AAAN;AAAA,CAAA,sDAAA,WAAAC,jEAAMD;AAAN,AAAA,IAAAE,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA,AAOA,kCAAA,lCAAMiB,4EAAkBC;AAAxB,AACE,AAAA,GAAA,QAAAvD,kCAAAC,2CAAAuD;AAAA;AAAA,AAAA,AAAA;;;;;;;;;;;;;AAAA,AAAA,CAAA,AAAA,AAAAC,wFAAA,WAAAC,OAAAC;;AAAA,AAAA,IAAAD,aAAA;iDADsBH,jDACtB,AAAA,YAAAE,+CAAAE;;;AAAA,CAAA,AAAA,AAAAF,+EAAA,WAAAC;;AAAA,AAAA,IAAAA,aAAA;AAAA,AAAAC;;;AAAA,CAAA,AAAA,AAAAF,0EAAAnD;;AAAA,CAAA,AAAA,AAAAmD,yFAAA,WAEY7C,EAAEf;;AAFd,AAAA,YAAA,RAEYe;AAFZ,AAEoB,mDAAA,AAAAiB,5CAAChB,4DAAK0C,WAAG1D;;;AAF7B,CAAA,AAAA,AAAA4D,0FAAA,WAGa7C;;AAHb,AAAA,YAAA,RAGaA;AAHb,AAAA,OAAAiB,gBAGiB0B;;;AAHjB,CAAA,AAAAE,gDAAA;AAAA,AAAA,AAAA;;;AAAA,CAAA,AAAAA,sDAAA;;AAAA,CAAA,AAAAA,yDAAA;;AAAA,CAAA,AAAAA,8DAAA,WAAAlD,mBAAAC,qBAAAC;AAAA,AAAA,OAAAC,iBAAAF,qBAAA;;;AAAA;;;mHADsB+C,nHACtBK,4CAAA,8EAAAD;iDADsBJ,jDACtB,AAAA,YAAAE,4CAAAE;;;AAAAF;;iDADsBF,jDACtB,YAAAE,wCAAA;;AAKF,sCAAA,tCAAeI;AAEf,kCAAA,lCAAMC;AAAN,AACE,AAAA,GAAA,QAAA9D,kCAAAC,2CAAA8D;AAAA;AAAA,AAAA,AAAA;;;;;;;;;;;;AAAA,AAAA,CAAA,AAAA,AAAAC,wFAAA,WAAAC,OAAAC;;AAAA,AAAA,IAAAD,aAAA;AAAA,AAAA,YAAAD,qCAAAE;;;AAAA,CAAA,AAAA,AAAAF,+EAAA,WAAAC;;AAAA,AAAA,IAAAA,aAAA;AAAA,AAAAC;;;AAAA,CAAA,AAAA,AAAAF,0EAAA1D;;AAAA,CAAA,AAAA,AAAA0D,yFAAA,WAEYpD,EAAEf;;AAFd,AAAA,YAAA,RAEYe;AAFZ,AAEoB,OAACC,4CAAIgD,oCAAWhE;;;AAFpC,CAAA,AAAA,AAAAmE,0FAAA,WAGapD;;AAHb,AAAA,YAAA,RAGaA;AAHb,AAGgBiD;;;AAHhB,CAAA,AAAAG,gDAAA;AAAA,AAAA,AAAA;;;AAAA,CAAA,AAAAA,sDAAA;;AAAA,CAAA,AAAAA,yDAAA;;AAAA,CAAA,AAAAA,8DAAA,WAAAzD,mBAAAC,qBAAAC;AAAA,AAAA,OAAAC,iBAAAF,qBAAA;;;AAAA;;;AAAA2D,4CAAA,uEAAAD;AAAA,AAAA,YAAAF,qCAAAE;;;AAAAF;;AAAA,YAAAA,qCAAA;;AAKF,+BAAA,/BAAMI,sEAAeC,iBAAiBC;AAAtC,AACE,IAAMC,cAAO,6CAAA,7CAACpD;IACRqD,iBAAU,AAACrD,6CAAKkD;AADtB,AAEE,OAAChD,sBACCmD,eACA,AAACC,yHACCJ,iBACA;AAAA,GAAA,QAAArE,kCAAAC,2CAAAyE;AAAA;AAAA,AAAA,AAAA;;;;;;;;;;;;;;;;AAAA,AAAA,CAAA,AAAA,AAAAC,wFAAA,WAAAC,OAAAC;;AAAA,AAAA,IAAAD,aAAA;iDAPaP,wBAAiBC,gBAC9BC,mBACAC,5GAKA,AAAA,YAAAG,sHAAAE;;;AAAA,CAAA,AAAA,AAAAF,+EAAA,WAAAC;;AAAA,AAAA,IAAAA,aAAA;AAAA,AAAAC;;;AAAA,CAAA,AAAA,AAAAF,0EAAArE;;AAAA,CAAA,AAAA,AAAAqE,yFAAA,WAEY/D,EAAEmE;;AAFd,AAAA,YAAA,RAEYnE;AAFZ,AAGI,IAAAoE,mBAAI,iBAAAC,eAAA,AAAApD,gBAAE0C;AAAF,AAAA,QAAAU,6CAAAA,mDAAAA,RAASF,+BAAAA;;AAAb,AAAA,oBAAAC;AAAAA;;AACI,IAAAE,qBAAkB,iBAAAE,WAAUL;IAAVM,WAAA,AAAAxD,gBAAgB2C;AAAhB,AAAA,sGAAAY,SAAAC,sCAAAD,SAAAC,tJAACf,gDAAAA,mEAAAA;;AAAnB,AAAA,oBAAAY;AAAA,AAAA,aAAAA,TAAWC;AAAX,AACE,AAACG,mDAAMf,mBAAOgB,gBAAMR,KAAKI;;AACzBA;;AAFF;;;;;AAJR,CAAA,AAAA,AAAAR,0FAAA,WAOa/D;;AAPb,AAAA,YAAA,RAOaA;AAPb,AAAA,OAAAiB,gBAOiB0C;;;AAPjB,CAAA,AAAAI,gDAAA;AAAA,AAAA,AAAA;;;AAAA,CAAA,AAAAA,sDAAA;;AAAA,CAAA,AAAAA,yDAAA;;AAAA,CAAA,AAAAA,8DAAA,WAAApE,mBAAAC,qBAAAC;AAAA,AAAA,OAAAC,iBAAAF,qBAAA;;;AAAA;;;gHAPa6D,qBAAiBC,aAC9BC,gBACAC,lKAKAM,4CAAA,yIAAAD;iDAPaR,qBAAiBC,aAC9BC,gBACAC,nGAKA,AAAA,YAAAG,0GAAAE;;;AAAAF;;iDAPaN,iBAAiBC,SAC9BC,YACAC,vFAKA,YAAAG,0FAAA;;;;AASR;;;wBAAA,xBAAMa,wDAEHC,SAAS5F;AAFZ,AAGE,OAACR,uBAAQoG,SAAS5F;;AAEpB;;;yBAAA,zBAAM6F,0DAEHD;AAFH,AAGE,OAAC/F,wBAAS+F","names":["js/goog.define","malli.registry/type","malli$registry$Registry$_schema$dyn","x__4509__auto__","m__4510__auto__","malli.registry/-schema","goog/typeOf","m__4508__auto__","cljs.core/missing-protocol","malli$registry$Registry$_schemas$dyn","malli.registry/-schemas","malli.registry/Registry","this","type","malli.registry/simple-registry","schemas","js/malli","js/malli.registry","js/malli.registry.t_malli$registry11154","malli.registry/t_malli$registry11154","_11156","meta11155","cljs.core/PROTOCOL_SENTINEL","this__4450__auto__","writer__4451__auto__","opt__4452__auto__","cljs.core/-write","malli.registry/->t_malli$registry11154","_","cljs.core.get","malli.registry/registry","?registry","cljs.core/native-satisfies?","cljs.core/map?","malli.registry/registry*","cljs.core.atom","malli.registry/set-default-registry!","cljs.core/reset!","cljs.core.ex_info","malli.registry/custom-default-registry","js/malli.registry.t_malli$registry11158","malli.registry/t_malli$registry11158","_11160","meta11159","malli.registry/->t_malli$registry11158","cljs.core/deref","var_args","args__4824__auto__","len__4818__auto__","i__4819__auto__","argseq__4825__auto__","cljs.core/IndexedSeq","malli.registry/composite-registry","seq11162","self__4806__auto__","cljs.core/seq","?registries","registries","cljs.core.mapv","js/malli.registry.t_malli$registry11163","malli.registry/t_malli$registry11163","_11165","meta11164","malli.registry/->t_malli$registry11163","p1__11161#","cljs.core/some","cljs.core.reduce","cljs.core/merge","cljs.core.map","cljs.core/reverse","malli.registry/mutable-registry","db","js/malli.registry.t_malli$registry11178","malli.registry/t_malli$registry11178","_11180","meta11179","malli.registry/->t_malli$registry11178","malli.registry/*registry*","malli.registry/dynamic-registry","js/malli.registry.t_malli$registry11189","malli.registry/t_malli$registry11189","_11191","meta11190","malli.registry/->t_malli$registry11189","malli.registry/lazy-registry","default-registry","provider","cache*","registry*","malli.registry.composite_registry","js/malli.registry.t_malli$registry11192","malli.registry/t_malli$registry11192","_11194","meta11193","malli.registry/->t_malli$registry11192","name","or__4212__auto__","fexpr__11195","temp__5753__auto__","schema","G__11201","G__11202","cljs.core.swap_BANG_","cljs.core/assoc","malli.registry/schema","registry","malli.registry/schemas"],"sourcesContent":["(ns malli.registry\n  (:refer-clojure :exclude [type]))\n\n#?(:cljs (goog-define type \"default\")\n   :clj  (def type (as-> (or (System/getProperty \"malli.registry/type\") \"default\") $ (.intern $))))\n\n(defprotocol Registry\n  (-schema [this type] \"returns the schema from a registry\")\n  (-schemas [this] \"returns all schemas from a registry\"))\n\n(defn simple-registry [schemas]\n  (reify\n    Registry\n    (-schema [_ type] (get schemas type))\n    (-schemas [_] schemas)))\n\n(defn registry [?registry]\n  (cond (satisfies? Registry ?registry) ?registry\n        (map? ?registry) (simple-registry ?registry)))\n\n;;\n;; custom\n;;\n\n(def ^:private registry* (atom (registry {})))\n\n(defn set-default-registry! [?registry]\n  (if (identical? type \"custom\")\n    (reset! registry* (registry ?registry))\n    (throw (ex-info \"can't set default registry\" {:type type}))))\n\n(defn ^:no-doc custom-default-registry []\n  (reify\n    Registry\n    (-schema [_ type] (-schema @registry* type))\n    (-schemas [_] (-schemas @registry*))))\n\n(defn composite-registry [& ?registries]\n  (let [registries (mapv registry ?registries)]\n    (reify\n      Registry\n      (-schema [_ type] (some #(-schema % type) registries))\n      (-schemas [_] (reduce merge (map -schemas (reverse registries)))))))\n\n(defn mutable-registry [db]\n  (reify\n    Registry\n    (-schema [_ type] (get @db type))\n    (-schemas [_] @db)))\n\n(def ^:dynamic *registry* {})\n\n(defn dynamic-registry []\n  (reify\n    Registry\n    (-schema [_ type] (get *registry* type))\n    (-schemas [_] *registry*)))\n\n(defn lazy-registry [default-registry provider]\n  (let [cache* (atom {})\n        registry* (atom default-registry)]\n    (reset!\n      registry*\n      (composite-registry\n        default-registry\n        (reify\n          Registry\n          (-schema [_ name]\n            (or (@cache* name)\n                (when-let [schema (provider name @registry*)]\n                  (swap! cache* assoc name schema)\n                  schema)))\n          (-schemas [_] @cache*))))))\n\n(defn schema\n  \"finds a schema from a registry\"\n  [registry type]\n  (-schema registry type))\n\n(defn schemas\n  \"finds all schemas from a registry\"\n  [registry]\n  (-schemas registry))\n"]}