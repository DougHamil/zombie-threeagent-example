{
"version":3,
"file":"module$node_modules$three_nebula$build$esm$initializer$InitializerUtil.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,sEAAA,CAA2F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGnIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAAkB,IAAK,EAIvB,OAAMC,cAAgB,KAFTP,OAAAQ,CAAQ,6DAARA,CAEoBC,CAAAA,KAAX,CA8CtBP,QAAQI,CAAAA,OAAR,CA7CeI,CACbH,cAAe,IADFG,CAabC,WAAYA,QAAS,CAACC,OAAD,CAAUC,QAAV,CAAoBC,YAApB,CAAkC,CACrD,IAAIC,EAAID,YAAaE,CAAAA,MAErB,KAAA,CAAOD,CAAA,EAAP,CAAA,CACED,YAAA,CAAaC,CAAb,CAAgBE,CAAAA,IAAhB,CAAqBL,OAArB,CAA8BC,QAA9B,CAGFD,QAAQM,CAAAA,WAAR,EAAuB,IAAKA,CAAAA,WAAL,CAAiBN,OAAjB;AAA0BC,QAA1B,CAP8B,CAb1CH,CA+BbQ,YAAaA,QAAS,CAACN,OAAD,CAAUC,QAAV,CAAoB,CACxC,MAAM,CACJ,SAAU,CACRM,CADQ,CAERC,CAFQ,CAGRC,CAHQ,CADN,CAAA,CAMFT,OACJC,SAASS,CAAAA,QAASC,CAAAA,GAAlB,CAAsBX,OAAQU,CAAAA,QAA9B,CACAT,SAASW,CAAAA,QAASD,CAAAA,GAAlB,CAAsBX,OAAQY,CAAAA,QAA9B,CACAX,SAASY,CAAAA,YAAaF,CAAAA,GAAtB,CAA0BX,OAAQa,CAAAA,YAAlC,CACAZ,SAASW,CAAAA,QAASE,CAAAA,UAAlB,CAA6BnB,aAAcoB,CAAAA,GAAd,CAAkBR,CAAlB,CAAqBC,CAArB,CAAwBC,CAAxB,CAA7B,CAXwC,CA/B7BX,CAXoH;",
"sources":["node_modules/three-nebula/build/esm/initializer/InitializerUtil.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three_nebula$build$esm$initializer$InitializerUtil\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _three = require(\"../core/three/\");\n\nconst particleEuler = new _three.Euler();\nvar _default = {\n  particleEuler: null,\n\n  /**\n   * Loops through the initializers array and calls each initializer's initialize method\n   * on the supplied particle. This sets the particle's initial properties.\n   *\n   * @see {@link '../emitter/Emitter'} setupParticle\n   * @param {Emitter} emitter - The emitter that has called this method\n   * @param {Particle} particle - The particle that has just been created\n   * @param {array<Initializer>} initializers - All of the emitter's initializers\n   * @return void\n   */\n  initialize: function (emitter, particle, initializers) {\n    let i = initializers.length;\n\n    while (i--) {\n      initializers[i].init(emitter, particle);\n    }\n\n    emitter.bindEmitter && this.bindEmitter(emitter, particle);\n  },\n\n  /**\n   * Ensures that the emitter's position, velocity and accleration are added\n   * to each created particle.\n   *\n   * @param {Emitter} emitter - The emitter that is emitting the particles\n   * @param {Particle} particle - The newly created particle\n   * @return void\n   */\n  bindEmitter: function (emitter, particle) {\n    const {\n      rotation: {\n        x,\n        y,\n        z\n      }\n    } = emitter;\n    particle.position.add(emitter.position);\n    particle.velocity.add(emitter.velocity);\n    particle.acceleration.add(emitter.acceleration);\n    particle.velocity.applyEuler(particleEuler.set(x, y, z));\n  }\n};\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","particleEuler","_three","Euler","_default","initialize","emitter","particle","initializers","i","length","init","bindEmitter","x","y","z","position","add","velocity","acceleration","applyEuler","set"]
}
