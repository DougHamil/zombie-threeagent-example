{
"version":3,
"file":"module$node_modules$three$examples$jsm$curves$NURBSUtils.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/three/examples/jsm/curves/NURBSUtils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$examples$jsm$curves$NURBSUtils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findSpan = findSpan;\nexports.calcBasisFunctions = calcBasisFunctions;\nexports.calcBSplinePoint = calcBSplinePoint;\nexports.calcBasisFunctionDerivatives = calcBasisFunctionDerivatives;\nexports.calcBSplineDerivatives = calcBSplineDerivatives;\nexports.calcKoverI = calcKoverI;\nexports.calcRationalCurveDerivatives = calcRationalCurveDerivatives;\nexports.calcNURBSDerivatives = calcNURBSDerivatives;\nexports.calcSurfacePoint = calcSurfacePoint;\n\nvar _three = require(\"three\");\n\n/**\n * NURBS utils\n *\n * See NURBSCurve and NURBSSurface.\n **/\n\n/**************************************************************\n *\tNURBS Utils\n **************************************************************/\n\n/*\nFinds knot vector span.\n\np : degree\nu : parametric value\nU : knot vector\n\nreturns the span\n*/\nfunction findSpan(p, u, U) {\n  const n = U.length - p - 1;\n\n  if (u >= U[n]) {\n    return n - 1;\n  }\n\n  if (u <= U[p]) {\n    return p;\n  }\n\n  let low = p;\n  let high = n;\n  let mid = Math.floor((low + high) / 2);\n\n  while (u < U[mid] || u >= U[mid + 1]) {\n    if (u < U[mid]) {\n      high = mid;\n    } else {\n      low = mid;\n    }\n\n    mid = Math.floor((low + high) / 2);\n  }\n\n  return mid;\n}\n/*\nCalculate basis functions. See The NURBS Book, page 70, algorithm A2.2\n\nspan : span in which u lies\nu    : parametric point\np    : degree\nU    : knot vector\n\nreturns array[p+1] with basis functions values.\n*/\n\n\nfunction calcBasisFunctions(span, u, p, U) {\n  const N = [];\n  const left = [];\n  const right = [];\n  N[0] = 1.0;\n\n  for (let j = 1; j <= p; ++j) {\n    left[j] = u - U[span + 1 - j];\n    right[j] = U[span + j] - u;\n    let saved = 0.0;\n\n    for (let r = 0; r < j; ++r) {\n      const rv = right[r + 1];\n      const lv = left[j - r];\n      const temp = N[r] / (rv + lv);\n      N[r] = saved + rv * temp;\n      saved = lv * temp;\n    }\n\n    N[j] = saved;\n  }\n\n  return N;\n}\n/*\nCalculate B-Spline curve points. See The NURBS Book, page 82, algorithm A3.1.\n\np : degree of B-Spline\nU : knot vector\nP : control points (x, y, z, w)\nu : parametric point\n\nreturns point for given u\n*/\n\n\nfunction calcBSplinePoint(p, U, P, u) {\n  const span = findSpan(p, u, U);\n  const N = calcBasisFunctions(span, u, p, U);\n  const C = new _three.Vector4(0, 0, 0, 0);\n\n  for (let j = 0; j <= p; ++j) {\n    const point = P[span - p + j];\n    const Nj = N[j];\n    const wNj = point.w * Nj;\n    C.x += point.x * wNj;\n    C.y += point.y * wNj;\n    C.z += point.z * wNj;\n    C.w += point.w * Nj;\n  }\n\n  return C;\n}\n/*\nCalculate basis functions derivatives. See The NURBS Book, page 72, algorithm A2.3.\n\nspan : span in which u lies\nu    : parametric point\np    : degree\nn    : number of derivatives to calculate\nU    : knot vector\n\nreturns array[n+1][p+1] with basis functions derivatives\n*/\n\n\nfunction calcBasisFunctionDerivatives(span, u, p, n, U) {\n  const zeroArr = [];\n\n  for (let i = 0; i <= p; ++i) zeroArr[i] = 0.0;\n\n  const ders = [];\n\n  for (let i = 0; i <= n; ++i) ders[i] = zeroArr.slice(0);\n\n  const ndu = [];\n\n  for (let i = 0; i <= p; ++i) ndu[i] = zeroArr.slice(0);\n\n  ndu[0][0] = 1.0;\n  const left = zeroArr.slice(0);\n  const right = zeroArr.slice(0);\n\n  for (let j = 1; j <= p; ++j) {\n    left[j] = u - U[span + 1 - j];\n    right[j] = U[span + j] - u;\n    let saved = 0.0;\n\n    for (let r = 0; r < j; ++r) {\n      const rv = right[r + 1];\n      const lv = left[j - r];\n      ndu[j][r] = rv + lv;\n      const temp = ndu[r][j - 1] / ndu[j][r];\n      ndu[r][j] = saved + rv * temp;\n      saved = lv * temp;\n    }\n\n    ndu[j][j] = saved;\n  }\n\n  for (let j = 0; j <= p; ++j) {\n    ders[0][j] = ndu[j][p];\n  }\n\n  for (let r = 0; r <= p; ++r) {\n    let s1 = 0;\n    let s2 = 1;\n    const a = [];\n\n    for (let i = 0; i <= p; ++i) {\n      a[i] = zeroArr.slice(0);\n    }\n\n    a[0][0] = 1.0;\n\n    for (let k = 1; k <= n; ++k) {\n      let d = 0.0;\n      const rk = r - k;\n      const pk = p - k;\n\n      if (r >= k) {\n        a[s2][0] = a[s1][0] / ndu[pk + 1][rk];\n        d = a[s2][0] * ndu[rk][pk];\n      }\n\n      const j1 = rk >= -1 ? 1 : -rk;\n      const j2 = r - 1 <= pk ? k - 1 : p - r;\n\n      for (let j = j1; j <= j2; ++j) {\n        a[s2][j] = (a[s1][j] - a[s1][j - 1]) / ndu[pk + 1][rk + j];\n        d += a[s2][j] * ndu[rk + j][pk];\n      }\n\n      if (r <= pk) {\n        a[s2][k] = -a[s1][k - 1] / ndu[pk + 1][r];\n        d += a[s2][k] * ndu[r][pk];\n      }\n\n      ders[k][r] = d;\n      const j = s1;\n      s1 = s2;\n      s2 = j;\n    }\n  }\n\n  let r = p;\n\n  for (let k = 1; k <= n; ++k) {\n    for (let j = 0; j <= p; ++j) {\n      ders[k][j] *= r;\n    }\n\n    r *= p - k;\n  }\n\n  return ders;\n}\n/*\n\tCalculate derivatives of a B-Spline. See The NURBS Book, page 93, algorithm A3.2.\n\n\tp  : degree\n\tU  : knot vector\n\tP  : control points\n\tu  : Parametric points\n\tnd : number of derivatives\n\n\treturns array[d+1] with derivatives\n\t*/\n\n\nfunction calcBSplineDerivatives(p, U, P, u, nd) {\n  const du = nd < p ? nd : p;\n  const CK = [];\n  const span = findSpan(p, u, U);\n  const nders = calcBasisFunctionDerivatives(span, u, p, du, U);\n  const Pw = [];\n\n  for (let i = 0; i < P.length; ++i) {\n    const point = P[i].clone();\n    const w = point.w;\n    point.x *= w;\n    point.y *= w;\n    point.z *= w;\n    Pw[i] = point;\n  }\n\n  for (let k = 0; k <= du; ++k) {\n    const point = Pw[span - p].clone().multiplyScalar(nders[k][0]);\n\n    for (let j = 1; j <= p; ++j) {\n      point.add(Pw[span - p + j].clone().multiplyScalar(nders[k][j]));\n    }\n\n    CK[k] = point;\n  }\n\n  for (let k = du + 1; k <= nd + 1; ++k) {\n    CK[k] = new _three.Vector4(0, 0, 0);\n  }\n\n  return CK;\n}\n/*\nCalculate \"K over I\"\n\nreturns k!/(i!(k-i)!)\n*/\n\n\nfunction calcKoverI(k, i) {\n  let nom = 1;\n\n  for (let j = 2; j <= k; ++j) {\n    nom *= j;\n  }\n\n  let denom = 1;\n\n  for (let j = 2; j <= i; ++j) {\n    denom *= j;\n  }\n\n  for (let j = 2; j <= k - i; ++j) {\n    denom *= j;\n  }\n\n  return nom / denom;\n}\n/*\nCalculate derivatives (0-nd) of rational curve. See The NURBS Book, page 127, algorithm A4.2.\n\nPders : result of function calcBSplineDerivatives\n\nreturns array with derivatives for rational curve.\n*/\n\n\nfunction calcRationalCurveDerivatives(Pders) {\n  const nd = Pders.length;\n  const Aders = [];\n  const wders = [];\n\n  for (let i = 0; i < nd; ++i) {\n    const point = Pders[i];\n    Aders[i] = new _three.Vector3(point.x, point.y, point.z);\n    wders[i] = point.w;\n  }\n\n  const CK = [];\n\n  for (let k = 0; k < nd; ++k) {\n    const v = Aders[k].clone();\n\n    for (let i = 1; i <= k; ++i) {\n      v.sub(CK[k - i].clone().multiplyScalar(calcKoverI(k, i) * wders[i]));\n    }\n\n    CK[k] = v.divideScalar(wders[0]);\n  }\n\n  return CK;\n}\n/*\nCalculate NURBS curve derivatives. See The NURBS Book, page 127, algorithm A4.2.\n\np  : degree\nU  : knot vector\nP  : control points in homogeneous space\nu  : parametric points\nnd : number of derivatives\n\nreturns array with derivatives.\n*/\n\n\nfunction calcNURBSDerivatives(p, U, P, u, nd) {\n  const Pders = calcBSplineDerivatives(p, U, P, u, nd);\n  return calcRationalCurveDerivatives(Pders);\n}\n/*\nCalculate rational B-Spline surface point. See The NURBS Book, page 134, algorithm A4.3.\n\np1, p2 : degrees of B-Spline surface\nU1, U2 : knot vectors\nP      : control points (x, y, z, w)\nu, v   : parametric values\n\nreturns point for given (u, v)\n*/\n\n\nfunction calcSurfacePoint(p, q, U, V, P, u, v, target) {\n  const uspan = findSpan(p, u, U);\n  const vspan = findSpan(q, v, V);\n  const Nu = calcBasisFunctions(uspan, u, p, U);\n  const Nv = calcBasisFunctions(vspan, v, q, V);\n  const temp = [];\n\n  for (let l = 0; l <= q; ++l) {\n    temp[l] = new _three.Vector4(0, 0, 0, 0);\n\n    for (let k = 0; k <= p; ++k) {\n      const point = P[uspan - p + k][vspan - q + l].clone();\n      const w = point.w;\n      point.x *= w;\n      point.y *= w;\n      point.z *= w;\n      temp[l].add(point.multiplyScalar(Nu[k]));\n    }\n  }\n\n  const Sw = new _three.Vector4(0, 0, 0, 0);\n\n  for (let l = 0; l <= q; ++l) {\n    Sw.add(temp[l].multiplyScalar(Nv[l]));\n  }\n\n  Sw.divideScalar(Sw.w);\n  target.set(Sw.x, Sw.y, Sw.z);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","findSpan","p","u","U","n","length","mid","Math","floor","low","high","calcBasisFunctions","span","N","left","right","j","saved","r","rv","lv","temp","calcBasisFunctionDerivatives","zeroArr","i","ders","slice","ndu","s1","s2","a","k","d","rk","pk","j1","j2","calcBSplineDerivatives","P","nd","du","CK","nders","Pw","point","clone","w","x","y","z","multiplyScalar","add","_three","Vector4","calcKoverI","nom","denom","calcRationalCurveDerivatives","Pders","Aders","wders","Vector3","v","sub","divideScalar","Object","defineProperty","value","calcBSplinePoint","C","Nj","wNj","calcNURBSDerivatives","calcSurfacePoint","q","V","target","uspan","vspan","Nu","Nv","l","Sw","set"]
}
