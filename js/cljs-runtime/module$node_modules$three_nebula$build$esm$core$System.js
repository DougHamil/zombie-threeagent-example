shadow$provide.module$node_modules$three_nebula$build$esm$core$System=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(){if("function"!==typeof WeakMap)return null;var cache=new WeakMap;_getRequireWildcardCache=function(){return cache};return cache}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _events=function(obj){if(obj&&obj.__esModule)return obj;if(null===
obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};var cache=_getRequireWildcardCache();if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;cache&&
cache.set(obj,newObj);return newObj}(require("module$node_modules$three_nebula$build$esm$events$index")),_constants=require("module$node_modules$three_nebula$build$esm$core$constants"),_Emitter=_interopRequireDefault(require("module$node_modules$three_nebula$build$esm$emitter$Emitter")),_constants2=require("module$node_modules$three_nebula$build$esm$math$constants"),_constants3=require("module$node_modules$three_nebula$build$esm$constants$index"),_Pool=_interopRequireDefault(require("module$node_modules$three_nebula$build$esm$core$Pool")),
_fromJSON=_interopRequireDefault(require("module$node_modules$three_nebula$build$esm$core$fromJSON")),_fromJSONAsync=_interopRequireDefault(require("module$node_modules$three_nebula$build$esm$core$fromJSONAsync")),_types=require("module$node_modules$three_nebula$build$esm$core$types");class System{constructor(preParticles=_constants3.POOL_MAX,integrationType=_constants2.INTEGRATION_TYPE_EULER){this.type=_types.CORE_TYPE_SYSTEM;this.canUpdate=!0;this.preParticles=preParticles;this.integrationType=
integrationType;this.emitters=[];this.renderers=[];this.pool=new _Pool.default;this.eventDispatcher=new _events.default}static fromJSON(json,THREE){return(0,_fromJSON.default)(json,THREE,System,_Emitter.default)}static fromJSONAsync(json,THREE,options){return(0,_fromJSONAsync.default)(json,THREE,System,_Emitter.default,options)}dispatch(event,target=this){this.eventDispatcher.dispatchEvent(event,target)}addRenderer(renderer){this.renderers.push(renderer);renderer.init(this);return this}removeRenderer(renderer){this.renderers.splice(this.renderers.indexOf(renderer),
1);renderer.remove(this);return this}addEmitter(emitter){const index=this.emitters.length;emitter.parent=this;emitter.index=index;this.emitters.push(emitter);this.dispatch(_events.EMITTER_ADDED,emitter);return this}removeEmitter(emitter){if(emitter.parent!==this)return this;emitter.parent=null;emitter.index=void 0;this.emitters.splice(this.emitters.indexOf(emitter),1);this.dispatch(_events.EMITTER_REMOVED,emitter);return this}emit({onStart,onUpdate,onEnd}){onStart&&onStart();onUpdate&&this.eventDispatcher.addEventListener(_events.SYSTEM_UPDATE,
onUpdate);onStart=this.emitters.map(emitter=>{const {life}=emitter;return Infinity===life?(onEnd&&onEnd(),emitter.experimental_emit(),Promise.resolve()):new Promise(resolve=>{emitter.addOnEmitterDeadEventListener(()=>{onEnd&&onEnd();resolve()});emitter.experimental_emit()})});try{return Promise.all(onStart)}catch(e){console.warn(e)}}update(delta=_constants.DEFAULT_SYSTEM_DELTA){delta=delta||_constants.DEFAULT_SYSTEM_DELTA;if(this.canUpdate){if(0<delta){let i=this.emitters.length;for(;i--;){const emitter=
this.emitters[i];emitter.update(delta);emitter.isEmitting&&this.dispatch(_events.SYSTEM_UPDATE)}}this.dispatch(_events.SYSTEM_UPDATE_AFTER)}return Promise.resolve()}getCount(){const length=this.emitters.length;let total=0,i;for(i=0;i<length;i++)total+=this.emitters[i].particles.length;return total}destroy(){const length=this.emitters.length;this.canUpdate=!1;for(var e=0;e<length;e++)this.emitters[e]&&this.emitters[e].destroy(),delete this.emitters[e];for(e=0;e<length;e++)this.renderers[e]&&this.renderers[e].destroy&&
(this.renderers[e].destroy(),delete this.renderers[e]);this.emitters.length=0;this.pool.destroy();this.canUpdate=!0}}exports.default=System}
//# sourceMappingURL=module$node_modules$three_nebula$build$esm$core$System.js.map
