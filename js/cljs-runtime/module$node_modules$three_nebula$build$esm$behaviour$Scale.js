shadow$provide.module$node_modules$three_nebula$build$esm$behaviour$Scale=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _math=require("module$node_modules$three_nebula$build$esm$math$index");global=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require("module$node_modules$three_nebula$build$esm$behaviour$Behaviour"));var _ease=require("module$node_modules$three_nebula$build$esm$ease$index"),_types=require("module$node_modules$three_nebula$build$esm$behaviour$types");
class Scale extends global.default{constructor(scaleA,scaleB,life,easing,isEnabled=!0){super(life,easing,_types.BEHAVIOUR_TYPE_SCALE,isEnabled);this.reset(scaleA,scaleB)}get same(){return this._same}set same(same){this._same=same}reset(scaleA,scaleB,life,easing){this.same=null===scaleB||void 0===scaleB?!0:!1;this.scaleA=(0,_math.createSpan)(scaleA||1);this.scaleB=(0,_math.createSpan)(scaleB);life&&super.reset(life,easing)}initialize(particle){particle.transform.scaleA=this.scaleA.getValue();particle.transform.oldRadius=
particle.radius;particle.transform.scaleB=this.same?particle.transform.scaleA:this.scaleB.getValue()}mutate(particle,time,index){this.energize(particle,time,index);particle.scale=_math.MathUtils.lerp(particle.transform.scaleA,particle.transform.scaleB,this.energy);5E-4>particle.scale&&(particle.scale=0);particle.radius=particle.transform.oldRadius*particle.scale}static fromJSON(json){const {scaleA,scaleB,life,easing,isEnabled=!0}=json;return new Scale(scaleA,scaleB,life,(0,_ease.getEasingByName)(easing),
isEnabled)}}exports.default=Scale}
//# sourceMappingURL=module$node_modules$three_nebula$build$esm$behaviour$Scale.js.map
