{"version":3,"sources":["zombie/scene/map.cljs"],"mappings":"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","names":["zombie.scene.map/lot-size","zombie.scene.map/half-lot-size","zombie.scene.map/model","model-key","collide?","zombie.scene.map/grass","cljs.core/deref","zombie.state.databases/assets","zombie.util.math/pi2","zombie.scene.map/lightpost","zombie.scene.map/grave1","zombie.scene.map/coffin1","_id","dead?","threeagent.core/atom","id","cljs.core/reset!","zombie.util.math/pi","zombie.scene.map/door","open-tween","open-val","open?","zombie.scene.map/wall","door-tween","wall-width","segments","door-segment","iter__4611__auto__","s__10650","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4609__auto__","size__4610__auto__","cljs.core/count","b__10652","cljs.core/chunk-buffer","i__10651","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__10649","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","i","cljs.core.range","s__10654","b__10656","i__10655","iter__10653","and__4210__auto__","cljs.core._EQ_","zombie.scene.map/road","road-width","s","s__10658","b__10660","i__10659","iter__10657","zombie.scene.map/bounds","dirs","zombie.scene.map/lot1","room-id","active?","cleared?","s__10662","b__10664","i__10663","iter__10661","zombie.scene.map/lot2","s__10666","b__10668","i__10667","iter__10665","zombie.scene.map/ground","p__10673","map__10674","cljs.core/--destructure-map","cljs.core.get","x","_y","z","cljs.core.swap_BANG_","zombie.state.databases/scene","cljs.core/assoc","zombie.scene.map/room","on-clear","entity-db","G__10679","y","visible?","lot-fn","doors","cljs.core.atom","zombie.scene.entity/render","zombie.scene.map/player-cell-position","vec__10682","cljs.core.nth","_","G__10685","G__10686","threeagent.core/cursor","zombie.state.databases/player","norm-x","norm-z","js/Math.floor","zombie.scene.map/get-bounds-for-cell","map-size","cell-x","cell-z","G__10691","cljs.core.disj","zombie.scene.map/render","vec__10698","threeagent.core/track","sight-range","s__10702","xs__6308__auto__","iterys__4607__auto__","s__10704","b__10706","i__10705","iter__10703","fs__4608__auto__","cljs.core.concat","iter__10701","x__4295__auto__","y__4296__auto__","x__4298__auto__","y__4299__auto__","cljs.core/chunk-first"],"sourcesContent":["(ns zombie.scene.map\r\n  \"Threeagent component for the game world\"\r\n  (:require [threeagent.core :as th]\r\n            [zombie.state.databases :as db]\r\n            [zombie.scene.entity :as entities]\r\n            [zombie.util.math :refer [pi2 pi4 pi]]))\r\n\r\n(def ^:private lot-size 20)\r\n(def ^:private half-lot-size (/ lot-size 2))\r\n\r\n(defn- model [model-key collide?]\r\n  (if collide?\r\n    [:model {:type model-key\r\n             :physics {:parts {:hull {:type :model-bounding-box\r\n                                      :model-type model-key\r\n                                      :settings {:isStatic true}}}}}]\r\n    [:model {:type model-key}]))\r\n\r\n(defn- grass []\r\n  [:plane {:position [0 0.01 0]\r\n           :material (:material/grass @db/assets)\r\n           :rotation [(- pi2) 0 0]\r\n           :receive-shadow true\r\n           :scale [lot-size lot-size 1]}])\r\n\r\n(defn- lightpost []\r\n  [:object {:scale [1.2 1.2 1.2]}\r\n   [:model {:type :model/lightpost-single}\r\n    [:object {:physics {:parts {:hull {:type :circle\r\n                                       :radius 0.25\r\n                                       :settings {:isStatic true}}}}}]\r\n    [:point-light {:intensity 1.4\r\n                   :color 0xF7B500\r\n                   :position [0.4 3.5 -0.5]\r\n                   :distance 8}]]])\r\n\r\n(defn- grave1 []\r\n  [:object\r\n   [model :model/gravestone-decorative true]\r\n   [:object {:position [0 0 2]\r\n             :scale [1 0.4 1]}\r\n    [model :model/grave false]]])\r\n\r\n(defn- coffin1 [_id]\r\n  (let [dead? (th/atom false)]\r\n    (fn [id]\r\n      (if @dead?\r\n        [:model {:type :model/debris-wood}]\r\n        [:object\r\n         [:model {:id id\r\n                  :game {:enemy? true}\r\n                  :entity {}\r\n                  :combat {:health 30\r\n                           :on-killed #(reset! dead? true)\r\n                           :death-reaction {:particles :wood-explosion}\r\n                           :hit-reaction {:flash? true\r\n                                          :sound :sfx/impact-plate\r\n                                          :particles :impact-sparks\r\n                                          :text? true}}\r\n                  :spawner {:on-death [{:type :zombie\r\n                                        :initial-health 50}]}\r\n                  :rotation [0 pi 0]\r\n                  :type :model/coffin\r\n                  :physics {:parts {:hull {:type :model-bounding-box\r\n                                           :model-type :model/coffin\r\n                                           :radius 0.5\r\n                                           :settings {:mass 100\r\n                                                      :isStatic true}}}}}]]))))\r\n\r\n(defn- door [open-tween]\r\n  (let [open-val @open-tween\r\n        open? (>= open-val 1.0)]\r\n    [:object {:scale [0.7 0.7 0.7]\r\n              :position [0\r\n                         (- (* 1.4 open-val))\r\n                         0]\r\n              :game {:door {}}}\r\n     [model :model/iron-fence (not open?)]]))\r\n\r\n(defn- wall [door-tween]\r\n  (let [wall-width 4\r\n        segments (int (/ lot-size wall-width))\r\n        door-segment (int (/ segments 2))]\r\n    [:object\r\n     (for [i (range segments)]\r\n       [:object {:position [(- (* i wall-width)\r\n                               (/ lot-size 2))\r\n                            0\r\n                            0]\r\n                 :scale [1.0 1.0 1.0]}\r\n        [model :model/column-large false]])\r\n     (for [i (range segments)]\r\n       [:object {:position [(- (* i wall-width)\r\n                               (/ lot-size 2)\r\n                               (- (/ wall-width 2.0)))\r\n                            0\r\n                            0]\r\n                 :scale [1.5 1.5 1.5]}\r\n        (if (and door-tween (= i door-segment))\r\n          [door door-tween]\r\n          [model :model/stone-wall true])])]))\r\n\r\n(defn- road []\r\n  (let [road-width 2.5\r\n        s 1.4]\r\n    [:object\r\n     (for [i (range (/ lot-size road-width))]\r\n       [:object {:position [(- (* i road-width)\r\n                               (/ lot-size 2)\r\n                               (- (/ road-width 2.0)))\r\n                            0\r\n                            0]\r\n                 :scale [s 0.2 s]}\r\n        [model :model/road false]])]))\r\n\r\n(defn- bounds [door-tween dirs]\r\n  [:object\r\n   [:object {:position [(/ lot-size 2) 0 0]\r\n             :rotation [0 pi2 0]}\r\n    [wall (when (dirs :e)\r\n            door-tween)]]\r\n   [:object {:position [(/ lot-size -2) 0 0]\r\n             :rotation [0 pi2 0]}\r\n    [wall (when (dirs :w)\r\n            door-tween)]]\r\n   [:object {:position [0 0 (/ lot-size 2)]}\r\n    [wall (when (dirs :n)\r\n            door-tween)]]\r\n   [:object {:position [0 0 (/ lot-size -2)]}\r\n    [wall (when (dirs :s)\r\n            door-tween)]]])\r\n\r\n(defn- lot1 [room-id active? cleared?]\r\n  [:object\r\n   [road]\r\n   [grass]\r\n   [:object {:position [-8.5 0 -2.5]\r\n             :rotation [0 pi2 0]}\r\n    (when active?\r\n      [lightpost])]\r\n   (when-not @cleared?\r\n     [:object\r\n      (for [i (range 3)]\r\n        [:object {:position [(* -3 i) 0 5]}\r\n         [coffin1 (str room-id \"|coffin-\" i)]])])])\r\n\r\n(defn- lot2 [door-tween]\r\n  [:object {:id \"lot2\"\r\n            :position [(- lot-size) 0 0]}\r\n   [bounds door-tween #{:n :s :w}]\r\n   [road]\r\n   [grass]\r\n   [:object {:position [-8.5 0 -2.5]\r\n             :rotation [0 pi2 0]}\r\n    [lightpost]]\r\n   [:object\r\n    (for [i (range 3)]\r\n      [:object {:position [(* -3 i) 0 5]}\r\n       [coffin1 (str \"lot2-coffin-\" i)]])]])\r\n\r\n(defn- ground []\r\n  [:object \r\n   [:plane {:position [0 0 0]\r\n            :scale [100.0 100.0 100.0]\r\n            :rotation [(- pi2) 0 0]\r\n            :receive-shadow true\r\n            :input {:on-click (fn [{:keys [x _y z]}]\r\n                                (swap! db/scene assoc :boxes [[x 0 z]]))}\r\n            :material (:material/tile @db/assets)}]])\r\n\r\n(defn- room []\r\n  (let [cleared? (th/atom false)\r\n        on-clear #(reset! cleared? true)\r\n        entity-db (th/atom {})\r\n        door-tween (th/atom 0)]\r\n    (fn [id x y active? visible? lot-fn doors]\r\n      [{:entity-db entity-db\r\n        :room {:id id\r\n               :enemies (atom #{})}}\r\n\r\n       [:object {:id id\r\n                 :game {:room {:outro-tween door-tween\r\n                               :on-clear on-clear}}}\r\n        (when active?\r\n          [:object\r\n           [entities/render entity-db]])\r\n        (when visible?\r\n         [:object {:position [(* x lot-size)\r\n                              0\r\n                              (* y lot-size)]}\r\n          [bounds (if active? door-tween (atom 1))\r\n           doors]\r\n          [lot-fn id active? cleared?]])]])))\r\n\r\n(defn- player-cell-position []\r\n  (let [[x _ z] @(th/cursor db/player [:world-position])\r\n        norm-x (/ (+ x half-lot-size)\r\n                  lot-size)\r\n        norm-z (/ (+ z half-lot-size)\r\n                  lot-size)]\r\n    [(js/Math.floor norm-x)\r\n     (js/Math.floor norm-z)]))\r\n\r\n(defn- get-bounds-for-cell [map-size cell-x cell-z]\r\n  (cond-> #{:n :e :s :w}\r\n      (= 0 cell-x) (disj :e)\r\n      (= 0 cell-z) (disj :s)\r\n      (= (dec map-size) cell-x) (disj :w)\r\n      (= (dec map-size) cell-z) (disj :n)))\r\n\r\n(defn render []\r\n  (let [[cell-x cell-z] @(th/track player-cell-position)\r\n        map-size 3\r\n        sight-range 2]\r\n    [:object\r\n     (for [x (range map-size)\r\n           y (range map-size)]\r\n       (let [room-id (str \"room-\" x \",\" y)\r\n             x (- x)\r\n             active? (and (= x cell-x)\r\n                          (= y cell-z))\r\n             visible? (and (> sight-range (- (max x cell-x)\r\n                                             (min x cell-x)))\r\n                           (> sight-range (- (max y cell-z)\r\n                                             (min y cell-z))))]\r\n         ^{:key room-id}\r\n         [:object\r\n          [room room-id x y active? visible? lot1 (get-bounds-for-cell map-size (- x) y)]]))\r\n     [ground]]))\r\n"]}