shadow$provide.module$node_modules$three_nebula$build$esm$behaviour$Color=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _math=require("module$node_modules$three_nebula$build$esm$math$index");global=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require("module$node_modules$three_nebula$build$esm$behaviour$Behaviour"));var _utils=require("module$node_modules$three_nebula$build$esm$utils$index"),_ease=require("module$node_modules$three_nebula$build$esm$ease$index"),
_types=require("module$node_modules$three_nebula$build$esm$behaviour$types");class Color extends global.default{constructor(colorA,colorB,life,easing,isEnabled=!0){super(life,easing,_types.BEHAVIOUR_TYPE_COLOR,isEnabled);this.reset(colorA,colorB)}get same(){return this._same}set same(same){this._same=same}reset(colorA,colorB,life,easing){this.same=null===colorB||void 0===colorB?!0:!1;this.colorA=(0,_math.createColorSpan)(colorA);this.colorB=(0,_math.createColorSpan)(colorB);life&&super.reset(life,
easing)}initialize(particle){particle.transform.colorA=_utils.ColorUtil.getRGB(this.colorA.getValue());particle.useColor=!0;particle.transform.colorB=this.same?particle.transform.colorA:_utils.ColorUtil.getRGB(this.colorB.getValue())}mutate(particle,time,index){this.energize(particle,time,index);this._same?(particle.color.r=particle.transform.colorA.r,particle.color.g=particle.transform.colorA.g,particle.color.b=particle.transform.colorA.b):(particle.color.r=_math.MathUtils.lerp(particle.transform.colorA.r,
particle.transform.colorB.r,this.energy),particle.color.g=_math.MathUtils.lerp(particle.transform.colorA.g,particle.transform.colorB.g,this.energy),particle.color.b=_math.MathUtils.lerp(particle.transform.colorA.b,particle.transform.colorB.b,this.energy))}static fromJSON(json){const {colorA,colorB,life,easing,isEnabled=!0}=json;return new Color(colorA,colorB,life,(0,_ease.getEasingByName)(easing),isEnabled)}}exports.default=Color}
//# sourceMappingURL=module$node_modules$three_nebula$build$esm$behaviour$Color.js.map
