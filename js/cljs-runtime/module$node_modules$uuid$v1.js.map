{
"version":3,
"file":"module$node_modules$uuid$v1.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/uuid/v1.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$uuid$v1\"] = function(global,require,module,exports) {\nvar rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n\n};"],
"names":["shadow$provide","global","require","module","exports","rng","bytesToUuid","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","options","buf","offset","i","b","node","clockseq","undefined","seedBytes","msecs","getTime","Date","nsecs","dt","Error","tl","tmh","n"]
}
